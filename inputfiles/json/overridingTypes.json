{
    "mixin-interfaces": {
        "interface": {
            "XMLHttpRequestEventTarget": {
                "name": "XMLHttpRequestEventTarget",
                "properties": {
                    "property": [
                        {
                            "name": "onload",
                            "override-type": "(this: XMLHttpRequest, ev: Event) => any"
                        },
                        {
                            "name": "onabort",
                            "override-type": "(this: XMLHttpRequest, ev: Event) => any"
                        },
                        {
                            "name": "onerror",
                            "override-type": "(this: XMLHttpRequest, ev: ErrorEvent) => any"
                        },
                        {
                            "name": "onloadend",
                            "override-type": "(this: XMLHttpRequest, ev: ProgressEvent) => any"
                        },
                        {
                            "name": "onloadstart",
                            "override-type": "(this: XMLHttpRequest, ev: Event) => any"
                        },
                        {
                            "name": "onprogress",
                            "override-type": "(this: XMLHttpRequest, ev: ProgressEvent) => any"
                        },
                        {
                            "name": "onprogress",
                            "override-type": "(this: XMLHttpRequest, ev: ProgressEvent) => any"
                        },
                        {
                            "name": "ontimeout",
                            "override-type": "(this: XMLHttpRequest, ev: ProgressEvent) => any"
                        }
                    ]
                }
            },
            "ElementTraversal": {
                "name": "ElementTraversal",
                "properties": {
                    "property": [
                        {
                            "name": "firstElementChild",
                            "read-only": "1",
                            "override-type": "Element | null"
                        },
                        {
                            "name": "lastElementChild",
                            "read-only": "1",
                            "override-type": "Element | null"
                        },
                        {
                            "name": "nextElementSibling",
                            "read-only": "1",
                            "override-type": "Element | null"
                        },
                        {
                            "name": "previousElementSibling",
                            "read-only": "1",
                            "override-type": "Element | null"
                        }
                    ]
                }
            },
            "RandomSource": {
                "name": "RandomSource",
                "methods": {
                    "method": [
                        {
                            "name": "getRandomValues",
                            "override-signatures": [
                                "getRandomValues<T extends Int8Array | Uint8ClampedArray | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array>(array: T): T"
                            ]
                        }
                    ]
                }
            }
        }
    },
    "callback-functions": {
        "callback-function": {}
    },
    "callback-interfaces": {
        "interface": {}
    },
    "enums": {
        "enum": {}
    },
    "interfaces": {
        "interface": {
            "undefined": {
                "interface": "CustomEventInit",
                "no-interface-object": "1",
                "properties": {
                    "property": [
                        {
                            "name": "documentElement",
                            "override-type": "HTMLElement"
                        },
                        {
                            "name": "ontouchcancel",
                            "override-type": "(ev: TouchEvent) => any"
                        },
                        {
                            "name": "ontouchend",
                            "override-type": "(ev: TouchEvent) => any"
                        },
                        {
                            "name": "ontouchmove",
                            "override-type": "(ev: TouchEvent) => any"
                        },
                        {
                            "name": "ontouchstart",
                            "override-type": "(ev: TouchEvent) => any"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "alert",
                            "override-signatures": [
                                "alert(message?: any): void"
                            ]
                        },
                        {
                            "name": "getElementsByTagNameNS",
                            "override-signatures": [
                                "getElementsByTagNameNS(namespaceURI: \"http://www.w3.org/1999/xhtml\", localName: string): HTMLCollectionOf<HTMLElement>",
                                "getElementsByTagNameNS(namespaceURI: \"http://www.w3.org/2000/svg\", localName: string): HTMLCollectionOf<SVGElement>",
                                "getElementsByTagNameNS(namespaceURI: string, localName: string): HTMLCollectionOf<Element>"
                            ]
                        },
                        {
                            "name": "getElementsByClassName",
                            "override-signatures": [
                                "getElementsByClassName(classNames: string): HTMLCollectionOf<Element>"
                            ]
                        },
                        {
                            "name": "getElementsByName",
                            "override-signatures": [
                                "getElementsByName(elementName: string): NodeListOf<HTMLElement>"
                            ]
                        },
                        {
                            "name": "setTimeout",
                            "override-signatures": [
                                "setTimeout(handler: (...args: any[]) => void, timeout: number): number",
                                "setTimeout(handler: any, timeout?: any, ...args: any[]): number"
                            ]
                        },
                        {
                            "name": "setImmediate",
                            "override-signatures": [
                                "setImmediate(handler: (...args: any[]) => void): number",
                                "setImmediate(handler: any, ...args: any[]): number"
                            ]
                        },
                        {
                            "name": "setInterval",
                            "override-signatures": [
                                "setInterval(handler: (...args: any[]) => void, timeout: number): number",
                                "setInterval(handler: any, timeout?: any, ...args: any[]): number"
                            ]
                        }
                    ]
                },
                "type-parameters": [
                    "T = any"
                ]
            },
            "CustomEvent": {
                "name": "CustomEvent",
                "properties": {
                    "property": [
                        {
                            "name": "detail",
                            "read-only": "1",
                            "override-type": "T"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "initCustomEvent",
                            "override-signatures": [
                                "initCustomEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, detailArg: T): void"
                            ]
                        }
                    ]
                },
                "type-parameters": [
                    "T = any"
                ]
            },
            "Response": {
                "name": "Response",
                "override-constructor-signatures": [
                    "new(body?: any, init?: ResponseInit): Response",
                    "error: () => Response",
                    "redirect: (url: string, status?: number) => Response"
                ]
            },
            "ErrorEvent": {
                "name": "ErrorEvent",
                "override-constructor-signatures": [
                    "new(type: string, errorEventInitDict?: ErrorEventInit): ErrorEvent"
                ]
            },
            "Window": {
                "name": "Window",
                "properties": {
                    "property": [
                        {
                            "name": "event",
                            "override-type": "Event | undefined"
                        },
                        {
                            "name": "orientation",
                            "override-type": "string | number"
                        },
                        {
                            "name": "opener",
                            "override-type": "any"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "open",
                            "override-signatures": [
                                "open(url?: string, target?: string, features?: string, replace?: boolean): Window | null"
                            ]
                        }
                    ]
                }
            },
            "Document": {
                "name": "Document",
                "methods": {
                    "method": [
                        {
                            "name": "adoptNode",
                            "override-signatures": [
                                "adoptNode<T extends Node>(source: T): T"
                            ]
                        },
                        {
                            "name": "importNode",
                            "override-signatures": [
                                "importNode<T extends Node>(importedNode: T, deep: boolean): T"
                            ]
                        },
                        {
                            "name": "open",
                            "override-signatures": [
                                "open(url?: string, name?: string, features?: string, replace?: boolean): Document"
                            ]
                        },
                        {
                            "name": "getElementById",
                            "override-signatures": [
                                "getElementById(elementId: string): HTMLElement | null"
                            ]
                        },
                        {
                            "name": "msElementsFromRect",
                            "override-signatures": [
                                "msElementsFromRect(left: number, top: number, width: number, height: number): NodeListOf<Element>"
                            ]
                        },
                        {
                            "name": "msElementsFromPoint",
                            "override-signatures": [
                                "msElementsFromPoint(x: number, y: number): NodeListOf<Element>"
                            ]
                        },
                        {
                            "name": "evaluate",
                            "override-signatures": [
                                "evaluate(expression: string, contextNode: Node, resolver: XPathNSResolver | null, type: number, result: XPathResult | null): XPathResult"
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "currentScript",
                            "read-only": "1",
                            "override-type": "HTMLScriptElement | SVGScriptElement | null"
                        },
                        {
                            "name": "anchors",
                            "override-type": "HTMLCollectionOf<HTMLAnchorElement>"
                        },
                        {
                            "name": "applets",
                            "override-type": "HTMLCollectionOf<HTMLAppletElement>"
                        },
                        {
                            "name": "embeds",
                            "override-type": "HTMLCollectionOf<HTMLEmbedElement>"
                        },
                        {
                            "name": "forms",
                            "override-type": "HTMLCollectionOf<HTMLFormElement>"
                        },
                        {
                            "name": "images",
                            "override-type": "HTMLCollectionOf<HTMLImageElement>"
                        },
                        {
                            "name": "links",
                            "override-type": "HTMLCollectionOf<HTMLAnchorElement | HTMLAreaElement>"
                        },
                        {
                            "name": "plugins",
                            "override-type": "HTMLCollectionOf<HTMLEmbedElement>"
                        },
                        {
                            "name": "scripts",
                            "override-type": "HTMLCollectionOf<HTMLScriptElement>"
                        }
                    ]
                },
                "extends": "Node, GlobalEventHandlers, NodeSelector, DocumentEvent, ParentNode, DocumentOrShadowRoot"
            },
            "Node": {
                "name": "Node",
                "methods": {
                    "method": [
                        {
                            "name": "appendChild",
                            "override-signatures": [
                                "appendChild<T extends Node>(newChild: T): T"
                            ]
                        },
                        {
                            "name": "insertBefore",
                            "override-signatures": [
                                "insertBefore<T extends Node>(newChild: T, refChild: Node | null): T"
                            ]
                        },
                        {
                            "name": "removeChild",
                            "override-signatures": [
                                "removeChild<T extends Node>(oldChild: T): T"
                            ]
                        },
                        {
                            "name": "replaceChild",
                            "override-signatures": [
                                "replaceChild<T extends Node>(newChild: Node, oldChild: T): T"
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "firstChild",
                            "read-only": "1",
                            "override-type": "Node | null"
                        },
                        {
                            "name": "lastChild",
                            "read-only": "1",
                            "override-type": "Node | null"
                        },
                        {
                            "name": "nextSibling",
                            "read-only": "1",
                            "override-type": "Node | null"
                        },
                        {
                            "name": "previousSibling",
                            "read-only": "1",
                            "override-type": "Node | null"
                        },
                        {
                            "name": "parentNode",
                            "read-only": "1",
                            "override-type": "Node | null"
                        },
                        {
                            "name": "parentElement",
                            "read-only": "1",
                            "override-type": "HTMLElement | null"
                        }
                    ]
                }
            },
            "HTMLCollection": {
                "name": "HTMLCollection",
                "methods": {
                    "method": [
                        {
                            "name": "item",
                            "override-signatures": [
                                "item(index: number): Element"
                            ]
                        }
                    ]
                }
            },
            "IDBObjectStore": {
                "name": "IDBObjectStore",
                "methods": {
                    "method": [
                        {
                            "name": "createIndex",
                            "override-signatures": [
                                "createIndex(name: string, keyPath: string | string[], optionalParameters?: IDBIndexParameters): IDBIndex"
                            ]
                        },
                        {
                            "name": "openCursor",
                            "override-signatures": [
                                "openCursor(range?: IDBKeyRange | IDBValidKey, direction?: IDBCursorDirection): IDBRequest"
                            ]
                        },
                        {
                            "name": "add",
                            "override-signatures": [
                                "add(value: any, key?: IDBKeyRange | IDBValidKey): IDBRequest"
                            ]
                        },
                        {
                            "name": "count",
                            "override-signatures": [
                                "count(key?: IDBKeyRange | IDBValidKey): IDBRequest"
                            ]
                        },
                        {
                            "name": "delete",
                            "override-signatures": [
                                "delete(key: IDBKeyRange | IDBValidKey): IDBRequest"
                            ]
                        },
                        {
                            "name": "put",
                            "override-signatures": [
                                "put(value: any, key?: IDBKeyRange | IDBValidKey): IDBRequest"
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "keyPath",
                            "override-type": "string | string[]"
                        }
                    ]
                }
            },
            "IDBIndex": {
                "name": "IDBIndex",
                "properties": {
                    "property": [
                        {
                            "name": "keyPath",
                            "override-type": "string | string[]"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "openCursor",
                            "override-signatures": [
                                "openCursor(range?: IDBKeyRange | IDBValidKey, direction?: IDBCursorDirection): IDBRequest"
                            ]
                        },
                        {
                            "name": "openKeyCursor",
                            "override-signatures": [
                                "openKeyCursor(range?: IDBKeyRange | IDBValidKey, direction?: IDBCursorDirection): IDBRequest"
                            ]
                        },
                        {
                            "name": "count",
                            "override-signatures": [
                                "count(key?: IDBKeyRange | IDBValidKey): IDBRequest"
                            ]
                        },
                        {
                            "name": "get",
                            "override-signatures": [
                                "get(key: IDBKeyRange | IDBValidKey): IDBRequest"
                            ]
                        },
                        {
                            "name": "getKey",
                            "override-signatures": [
                                "getKey(key: IDBKeyRange | IDBValidKey): IDBRequest"
                            ]
                        }
                    ]
                }
            },
            "IDBDatabase": {
                "name": "IDBDatabase",
                "methods": {
                    "method": [
                        {
                            "name": "createObjectStore",
                            "override-signatures": [
                                "createObjectStore(name: string, optionalParameters?: IDBObjectStoreParameters): IDBObjectStore"
                            ]
                        },
                        {
                            "name": "transaction",
                            "override-signatures": [
                                "transaction(storeNames: string | string[], mode?: IDBTransactionMode): IDBTransaction"
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "version",
                            "override-type": "number"
                        }
                    ]
                }
            },
            "CanvasRenderingContext2D": {
                "name": "CanvasRenderingContext2D",
                "methods": {
                    "method": [
                        {
                            "name": "drawImage",
                            "override-signatures": [
                                "drawImage(image: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | ImageBitmap, dstX: number, dstY: number): void",
                                "drawImage(image: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | ImageBitmap, dstX: number, dstY: number, dstW: number, dstH: number): void",
                                "drawImage(image: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | ImageBitmap, srcX: number, srcY: number, srcW: number, srcH: number, dstX: number, dstY: number, dstW: number, dstH: number): void"
                            ]
                        },
                        {
                            "name": "clip",
                            "override-signatures": [
                                "clip(fillRule?: CanvasFillRule): void",
                                "clip(path: Path2D, fillRule?: CanvasFillRule): void"
                            ]
                        },
                        {
                            "name": "fill",
                            "override-signatures": [
                                "fill(fillRule?: CanvasFillRule): void",
                                "fill(path: Path2D, fillRule?: CanvasFillRule): void"
                            ]
                        },
                        {
                            "name": "isPointInPath",
                            "override-signatures": [
                                "isPointInPath(x: number, y: number, fillRule?: CanvasFillRule): boolean",
                                "isPointInPath(path: Path2D, x: number, y: number, fillRule?: CanvasFillRule): boolean"
                            ]
                        },
                        {
                            "name": "isPointInStroke",
                            "override-signatures": [
                                "isPointInStroke(x: number, y: number, fillRule?: CanvasFillRule): boolean",
                                "isPointInStroke(path: Path2D, x: number, y: number, fillRule?: CanvasFillRule): boolean"
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "fillStyle",
                            "override-type": "string | CanvasGradient | CanvasPattern"
                        },
                        {
                            "name": "strokeStyle",
                            "override-type": "string | CanvasGradient | CanvasPattern"
                        }
                    ]
                }
            },
            "WebGLRenderingContext": {
                "name": "WebGLRenderingContext",
                "methods": {
                    "method": [
                        {
                            "name": "texSubImage2D",
                            "override-signatures": [
                                "texSubImage2D(target: number, level: number, xoffset: number, yoffset: number, width: number, height: number, format: number, type: number, pixels: ArrayBufferView | null): void",
                                "texSubImage2D(target: number, level: number, xoffset: number, yoffset: number, format: number, type: number, pixels: ImageBitmap | ImageData | HTMLVideoElement | HTMLImageElement | HTMLCanvasElement): void"
                            ]
                        },
                        {
                            "name": "texImage2D",
                            "override-signatures": [
                                "texImage2D(target: number, level: number, internalformat: number, width: number, height: number, border: number, format: number, type: number, pixels: ArrayBufferView | null): void",
                                "texImage2D(target: number, level: number, internalformat: number, format: number, type: number, pixels: ImageBitmap | ImageData | HTMLVideoElement | HTMLImageElement | HTMLCanvasElement): void"
                            ]
                        },
                        {
                            "name": "pixelStorei",
                            "override-signatures": [
                                "pixelStorei(pname: number, param: number | boolean): void"
                            ]
                        },
                        {
                            "name": "uniform1fv",
                            "override-signatures": [
                                "uniform1fv(location: WebGLUniformLocation, v: Float32Array | ArrayLike<number>): void"
                            ]
                        },
                        {
                            "name": "uniform2fv",
                            "override-signatures": [
                                "uniform2fv(location: WebGLUniformLocation, v: Float32Array | ArrayLike<number>): void"
                            ]
                        },
                        {
                            "name": "uniform3fv",
                            "override-signatures": [
                                "uniform3fv(location: WebGLUniformLocation, v: Float32Array | ArrayLike<number>): void"
                            ]
                        },
                        {
                            "name": "uniform4fv",
                            "override-signatures": [
                                "uniform4fv(location: WebGLUniformLocation, v: Float32Array | ArrayLike<number>): void"
                            ]
                        },
                        {
                            "name": "uniform1iv",
                            "override-signatures": [
                                "uniform1iv(location: WebGLUniformLocation, v: Int32Array | ArrayLike<number>): void"
                            ]
                        },
                        {
                            "name": "uniform2iv",
                            "override-signatures": [
                                "uniform2iv(location: WebGLUniformLocation, v: Int32Array | ArrayLike<number>): void"
                            ]
                        },
                        {
                            "name": "uniform3iv",
                            "override-signatures": [
                                "uniform3iv(location: WebGLUniformLocation, v: Int32Array | ArrayLike<number>): void"
                            ]
                        },
                        {
                            "name": "uniform4iv",
                            "override-signatures": [
                                "uniform4iv(location: WebGLUniformLocation, v: Int32Array | ArrayLike<number>): void"
                            ]
                        },
                        {
                            "name": "uniformMatrix2fv",
                            "override-signatures": [
                                "uniformMatrix2fv(location: WebGLUniformLocation, transpose: boolean, value: Float32Array | ArrayLike<number>): void"
                            ]
                        },
                        {
                            "name": "uniformMatrix3fv",
                            "override-signatures": [
                                "uniformMatrix3fv(location: WebGLUniformLocation, transpose: boolean, value: Float32Array | ArrayLike<number>): void"
                            ]
                        },
                        {
                            "name": "uniformMatrix4fv",
                            "override-signatures": [
                                "uniformMatrix4fv(location: WebGLUniformLocation, transpose: boolean, value: Float32Array | ArrayLike<number>): void"
                            ]
                        },
                        {
                            "name": "vertexAttrib1fv",
                            "override-signatures": [
                                "vertexAttrib1fv(indx: number, values: Float32Array | number[]): void"
                            ]
                        },
                        {
                            "name": "vertexAttrib2fv",
                            "override-signatures": [
                                "vertexAttrib2fv(indx: number, values: Float32Array | number[]): void"
                            ]
                        },
                        {
                            "name": "vertexAttrib3fv",
                            "override-signatures": [
                                "vertexAttrib3fv(indx: number, values: Float32Array | number[]): void"
                            ]
                        },
                        {
                            "name": "vertexAttrib4fv",
                            "override-signatures": [
                                "vertexAttrib4fv(indx: number, values: Float32Array | number[]): void"
                            ]
                        },
                        {
                            "name": "getExtension",
                            "override-signatures": [
                                "getExtension(extensionName: \"EXT_blend_minmax\"): EXT_blend_minmax | null",
                                "getExtension(extensionName: \"EXT_texture_filter_anisotropic\"): EXT_texture_filter_anisotropic | null",
                                "getExtension(extensionName: \"EXT_frag_depth\"): EXT_frag_depth | null",
                                "getExtension(extensionName: \"EXT_shader_texture_lod\"): EXT_shader_texture_lod | null",
                                "getExtension(extensionName: \"EXT_sRGB\"): EXT_sRGB | null",
                                "getExtension(extensionName: \"OES_vertex_array_object\"): OES_vertex_array_object | null",
                                "getExtension(extensionName: \"WEBGL_color_buffer_float\"): WEBGL_color_buffer_float | null",
                                "getExtension(extensionName: \"WEBGL_compressed_texture_astc\"): WEBGL_compressed_texture_astc | null",
                                "getExtension(extensionName: \"WEBGL_compressed_texture_s3tc_srgb\"): WEBGL_compressed_texture_s3tc_srgb | null",
                                "getExtension(extensionName: \"WEBGL_debug_shaders\"): WEBGL_debug_shaders | null",
                                "getExtension(extensionName: \"WEBGL_draw_buffers\"): WEBGL_draw_buffers | null",
                                "getExtension(extensionName: \"WEBGL_lose_context\"): WEBGL_lose_context | null",
                                "getExtension(extensionName: \"WEBGL_depth_texture\"): WEBGL_depth_texture | null",
                                "getExtension(extensionName: \"WEBGL_debug_renderer_info\"): WEBGL_debug_renderer_info | null",
                                "getExtension(extensionName: \"WEBGL_compressed_texture_s3tc\"): WEBGL_compressed_texture_s3tc | null",
                                "getExtension(extensionName: \"OES_texture_half_float_linear\"): OES_texture_half_float_linear | null",
                                "getExtension(extensionName: \"OES_texture_half_float\"): OES_texture_half_float | null",
                                "getExtension(extensionName: \"OES_texture_float_linear\"): OES_texture_float_linear | null",
                                "getExtension(extensionName: \"OES_texture_float\"): OES_texture_float | null",
                                "getExtension(extensionName: \"OES_standard_derivatives\"): OES_standard_derivatives | null",
                                "getExtension(extensionName: \"OES_element_index_uint\"): OES_element_index_uint | null",
                                "getExtension(extensionName: \"ANGLE_instanced_arrays\"): ANGLE_instanced_arrays | null",
                                "getExtension(extensionName: string): any"
                            ]
                        }
                    ]
                }
            },
            "XMLHttpRequest": {
                "name": "XMLHttpRequest",
                "methods": {
                    "method": [
                        {
                            "name": "send",
                            "webOnlySignatures": [
                                "send(data?: Document): void"
                            ],
                            "override-signatures": [
                                "send(data?: string): void",
                                "send(data?: any): void"
                            ]
                        }
                    ]
                }
            },
            "HTMLCanvasElement": {
                "name": "HTMLCanvasElement",
                "methods": {
                    "method": [
                        {
                            "name": "getContext",
                            "override-signatures": [
                                "getContext(contextId: \"2d\", contextAttributes?: Canvas2DContextAttributes): CanvasRenderingContext2D | null",
                                "getContext(contextId: \"webgl\" | \"experimental-webgl\", contextAttributes?: WebGLContextAttributes): WebGLRenderingContext | null",
                                "getContext(contextId: string, contextAttributes?: {}): CanvasRenderingContext2D | WebGLRenderingContext | null"
                            ]
                        }
                    ]
                }
            },
            "BeforeUnloadEvent": {
                "name": "BeforeUnloadEvent",
                "properties": {
                    "property": [
                        {
                            "name": "returnValue",
                            "override-type": "any"
                        }
                    ]
                }
            },
            "HTMLEmbedElement": {
                "name": "HTMLEmbedElement",
                "properties": {
                    "property": [
                        {
                            "name": "hidden",
                            "override-type": "any"
                        }
                    ]
                }
            },
            "SVGStylable": {
                "name": "SVGStylable",
                "properties": {
                    "property": [
                        {
                            "name": "className",
                            "override-type": "any"
                        }
                    ]
                }
            },
            "SVGElement": {
                "name": "SVGElement",
                "properties": {
                    "property": [
                        {
                            "name": "className",
                            "override-type": "any"
                        }
                    ]
                }
            },
            "SVGSVGElement": {
                "name": "SVGSVGElement",
                "methods": {
                    "method": [
                        {
                            "name": "getEnclosureList",
                            "override-signatures": [
                                "getEnclosureList(rect: SVGRect, referenceElement: SVGElement): NodeListOf<SVGCircleElement | SVGEllipseElement | SVGImageElement | SVGLineElement | SVGPathElement | SVGPolygonElement | SVGPolylineElement | SVGRectElement | SVGTextElement | SVGUseElement>"
                            ]
                        },
                        {
                            "name": "getIntersectionList",
                            "override-signatures": [
                                "getIntersectionList(rect: SVGRect, referenceElement: SVGElement): NodeListOf<SVGCircleElement | SVGEllipseElement | SVGImageElement | SVGLineElement | SVGPathElement | SVGPolygonElement | SVGPolylineElement | SVGRectElement | SVGTextElement | SVGUseElement>"
                            ]
                        }
                    ]
                }
            },
            "Console": {
                "name": "Console",
                "methods": {
                    "method": [
                        {
                            "name": "debug",
                            "override-signatures": [
                                "debug(message?: any, ...optionalParams: any[]): void"
                            ]
                        },
                        {
                            "name": "dir",
                            "override-signatures": [
                                "dir(value?: any, ...optionalParams: any[]): void"
                            ]
                        },
                        {
                            "name": "dirxml",
                            "override-signatures": [
                                "dirxml(value: any): void"
                            ]
                        },
                        {
                            "name": "error",
                            "override-signatures": [
                                "error(message?: any, ...optionalParams: any[]): void"
                            ]
                        },
                        {
                            "name": "info",
                            "override-signatures": [
                                "info(message?: any, ...optionalParams: any[]): void"
                            ]
                        },
                        {
                            "name": "log",
                            "override-signatures": [
                                "log(message?: any, ...optionalParams: any[]): void"
                            ]
                        },
                        {
                            "name": "warn",
                            "override-signatures": [
                                "warn(message?: any, ...optionalParams: any[]): void"
                            ]
                        },
                        {
                            "name": "group",
                            "override-signatures": [
                                "group(groupTitle?: string, ...optionalParams: any[]): void"
                            ]
                        },
                        {
                            "name": "groupCollapsed",
                            "override-signatures": [
                                "groupCollapsed(groupTitle?: string, ...optionalParams: any[]): void"
                            ]
                        },
                        {
                            "name": "trace",
                            "override-signatures": [
                                "trace(message?: any, ...optionalParams: any[]): void"
                            ]
                        }
                    ]
                }
            },
            "Blob": {
                "name": "Blob",
                "override-constructor-signatures": [
                    "new (blobParts?: any[], options?: BlobPropertyBag): Blob"
                ]
            },
            "FormData": {
                "name": "FormData",
                "override-constructor-signatures": [
                    "new (form?: HTMLFormElement): FormData"
                ],
                "methods": {
                    "method": [
                        {
                            "name": "append",
                            "flavor": "Web",
                            "override-signatures": [
                                "append(name: string, value: string | Blob, fileName?: string): void"
                            ]
                        }
                    ]
                }
            },
            "MessageEvent": {
                "name": "MessageEvent",
                "override-constructor-signatures": [
                    "new(type: string, eventInitDict?: MessageEventInit): MessageEvent"
                ]
            },
            "ProgressEvent": {
                "name": "ProgressEvent",
                "override-constructor-signatures": [
                    "new(type: string, eventInitDict?: ProgressEventInit): ProgressEvent"
                ]
            },
            "File": {
                "name": "File",
                "override-constructor-signatures": [
                    "new (parts: (ArrayBuffer | ArrayBufferView | Blob | string)[], filename: string, properties?: FilePropertyBag): File"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "lastModifiedDate",
                            "read-only": "1",
                            "override-type": "Date"
                        }
                    ]
                }
            },
            "ImageData": {
                "name": "ImageData",
                "override-constructor-signatures": [
                    "new(width: number, height: number): ImageData",
                    "new(array: Uint8ClampedArray, width: number, height: number): ImageData"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "data",
                            "override-type": "Uint8ClampedArray"
                        }
                    ]
                }
            },
            "DOMException": {
                "name": "DOMException",
                "override-constructor-signatures": [
                    "new(message?: string, name?: string): DOMException"
                ]
            },
            "HTMLSelectElement": {
                "name": "HTMLSelectElement",
                "properties": {
                    "property": [
                        {
                            "name": "selectedOptions",
                            "override-type": "HTMLCollectionOf<HTMLOptionElement>"
                        },
                        {
                            "name": "form",
                            "read-only": "1",
                            "override-type": "HTMLFormElement | null"
                        },
                        {
                            "name": "form",
                            "read-only": "1",
                            "override-type": "HTMLFormElement | null"
                        }
                    ]
                }
            },
            "HTMLDataListElement": {
                "name": "HTMLDataListElement",
                "properties": {
                    "property": [
                        {
                            "name": "options",
                            "override-type": "HTMLCollectionOf<HTMLOptionElement>"
                        }
                    ]
                }
            },
            "HTMLTableElement": {
                "name": "HTMLTableElement",
                "methods": {
                    "method": [
                        {
                            "name": "insertRow",
                            "override-signatures": [
                                "insertRow(index?: number): HTMLTableRowElement"
                            ]
                        },
                        {
                            "name": "createTHead",
                            "override-signatures": [
                                "createTHead(): HTMLTableSectionElement"
                            ]
                        },
                        {
                            "name": "createTBody",
                            "override-signatures": [
                                "createTBody(): HTMLTableSectionElement"
                            ]
                        },
                        {
                            "name": "createTFoot",
                            "override-signatures": [
                                "createTFoot(): HTMLTableSectionElement"
                            ]
                        },
                        {
                            "name": "createCaption",
                            "override-signatures": [
                                "createCaption(): HTMLTableCaptionElement"
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "rows",
                            "override-type": "HTMLCollectionOf<HTMLTableRowElement>"
                        },
                        {
                            "name": "tBodies",
                            "override-type": "HTMLCollectionOf<HTMLTableSectionElement>"
                        }
                    ]
                }
            },
            "HTMLTableSectionElement": {
                "name": "HTMLTableSectionElement",
                "methods": {
                    "method": [
                        {
                            "name": "insertRow",
                            "override-signatures": [
                                "insertRow(index?: number): HTMLTableRowElement"
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "rows",
                            "override-type": "HTMLCollectionOf<HTMLTableRowElement>"
                        }
                    ]
                }
            },
            "HTMLTableRowElement": {
                "name": "HTMLTableRowElement",
                "methods": {
                    "method": [
                        {
                            "name": "insertCell",
                            "override-signatures": [
                                "insertCell(index?: number): HTMLTableDataCellElement"
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "cells",
                            "override-type": "HTMLCollectionOf<HTMLTableDataCellElement | HTMLTableHeaderCellElement>"
                        }
                    ]
                }
            },
            "Element": {
                "name": "Element",
                "methods": {
                    "method": [
                        {
                            "name": "setAttribute",
                            "override-signatures": [
                                "setAttribute(name: string, value: string): void"
                            ]
                        },
                        {
                            "name": "getAttribute",
                            "override-signatures": [
                                "getAttribute(name: string): string | null"
                            ]
                        },
                        {
                            "name": "getBoundingClientRect",
                            "override-signatures": [
                                "getBoundingClientRect(): ClientRect | DOMRect"
                            ]
                        },
                        {
                            "name": "getClientRects",
                            "override-signatures": [
                                "getClientRects(): ClientRectList | DOMRectList"
                            ]
                        },
                        {
                            "name": "getAttributeNodeNS",
                            "override-signatures": [
                                "getAttributeNodeNS(namespaceURI: string, localName: string): Attr | null"
                            ]
                        },
                        {
                            "name": "getAttributeNode",
                            "override-signatures": [
                                "getAttributeNode(name: string): Attr | null"
                            ]
                        }
                    ]
                }
            },
            "HTMLMediaElement": {
                "name": "HTMLMediaElement",
                "properties": {
                    "property": [
                        {
                            "name": "readyState",
                            "override-type": "number"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "play",
                            "override-signatures": [
                                "play(): Promise<void>"
                            ]
                        }
                    ]
                }
            },
            "DataTransferItemList": {
                "name": "DataTransferItemList",
                "methods": {
                    "method": [
                        {
                            "name": "item",
                            "override-signatures": [
                                "item(index: number): DataTransferItem"
                            ]
                        }
                    ]
                }
            },
            "StorageEvent": {
                "name": "StorageEvent",
                "override-constructor-signatures": [
                    "new (type: string, eventInitDict?: StorageEventInit): StorageEvent"
                ]
            },
            "IDBCursor": {
                "name": "IDBCursor",
                "properties": {
                    "property": [
                        {
                            "name": "source",
                            "override-type": "IDBObjectStore | IDBIndex"
                        },
                        {
                            "name": "key",
                            "override-type": "IDBKeyRange | IDBValidKey"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "continue",
                            "override-signatures": [
                                "continue(key?: IDBKeyRange | IDBValidKey): void"
                            ]
                        }
                    ]
                }
            },
            "IDBRequest": {
                "name": "IDBRequest",
                "properties": {
                    "property": [
                        {
                            "name": "error",
                            "read-only": "1",
                            "override-type": "DOMException"
                        },
                        {
                            "name": "source",
                            "override-type": "IDBObjectStore | IDBIndex | IDBCursor"
                        }
                    ]
                }
            },
            "IDBTransaction": {
                "name": "IDBTransaction",
                "properties": {
                    "property": [
                        {
                            "name": "error",
                            "read-only": "1",
                            "override-type": "DOMException"
                        }
                    ]
                }
            },
            "AudioNode": {
                "name": "AudioNode",
                "methods": {
                    "method": [
                        {
                            "name": "connect",
                            "override-signatures": [
                                "connect(destination: AudioNode, output?: number, input?: number): AudioNode",
                                "connect(destination: AudioParam, output?: number): void"
                            ]
                        },
                        {
                            "name": "disconnect",
                            "override-signatures": [
                                "disconnect(output?: number): void",
                                "disconnect(destination: AudioNode, output?: number, input?: number): void",
                                "disconnect(destination: AudioParam, output?: number): void"
                            ]
                        }
                    ]
                }
            },
            "ClipboardEvent": {
                "name": "ClipboardEvent",
                "override-constructor-signatures": [
                    "new(type: string, eventInitDict?: ClipboardEventInit): ClipboardEvent"
                ]
            },
            "Storage": {
                "name": "Storage",
                "methods": {
                    "method": [
                        {
                            "name": "getItem",
                            "override-signatures": [
                                "getItem(key: string): string | null"
                            ]
                        },
                        {
                            "name": "key",
                            "override-signatures": [
                                "key(index: number): string | null"
                            ]
                        }
                    ]
                }
            },
            "HTMLOptionsCollection": {
                "name": "HTMLOptionsCollection",
                "extends": "HTMLCollectionOf<HTMLOptionElement>"
            },
            "SubtleCrypto": {
                "name": "SubtleCrypto",
                "methods": {
                    "method": [
                        {
                            "name": "decrypt",
                            "override-signatures": [
                                "decrypt(algorithm: string | RsaOaepParams | AesCtrParams | AesCbcParams | AesCmacParams | AesGcmParams | AesCfbParams, key: CryptoKey, data: BufferSource): PromiseLike<ArrayBuffer>"
                            ]
                        },
                        {
                            "name": "deriveBits",
                            "override-signatures": [
                                "deriveBits(algorithm: string | EcdhKeyDeriveParams | DhKeyDeriveParams | ConcatParams | HkdfCtrParams | Pbkdf2Params, baseKey: CryptoKey, length: number): PromiseLike<ArrayBuffer>"
                            ]
                        },
                        {
                            "name": "deriveKey",
                            "override-signatures": [
                                "deriveKey(algorithm: string | EcdhKeyDeriveParams | DhKeyDeriveParams | ConcatParams | HkdfCtrParams | Pbkdf2Params, baseKey: CryptoKey, derivedKeyType: string | AesDerivedKeyParams | HmacImportParams | ConcatParams | HkdfCtrParams | Pbkdf2Params, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKey>"
                            ]
                        },
                        {
                            "name": "digest",
                            "override-signatures": [
                                "digest(algorithm: AlgorithmIdentifier, data: BufferSource): PromiseLike<ArrayBuffer>"
                            ]
                        },
                        {
                            "name": "encrypt",
                            "override-signatures": [
                                "encrypt(algorithm: string | RsaOaepParams | AesCtrParams | AesCbcParams | AesCmacParams | AesGcmParams | AesCfbParams, key: CryptoKey, data: BufferSource): PromiseLike<ArrayBuffer>"
                            ]
                        },
                        {
                            "name": "exportKey",
                            "override-signatures": [
                                "exportKey(format: \"jwk\", key: CryptoKey): PromiseLike<JsonWebKey>",
                                "exportKey(format: \"raw\" | \"pkcs8\" | \"spki\", key: CryptoKey): PromiseLike<ArrayBuffer>",
                                "exportKey(format: string, key: CryptoKey): PromiseLike<JsonWebKey | ArrayBuffer>"
                            ]
                        },
                        {
                            "name": "generateKey",
                            "override-signatures": [
                                "generateKey(algorithm: string, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKeyPair | CryptoKey>",
                                "generateKey(algorithm: RsaHashedKeyGenParams | EcKeyGenParams | DhKeyGenParams, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKeyPair>",
                                "generateKey(algorithm: AesKeyGenParams | HmacKeyGenParams | Pbkdf2Params, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKey>"
                            ]
                        },
                        {
                            "name": "importKey",
                            "override-signatures": [
                                "importKey(format: \"jwk\", keyData: JsonWebKey, algorithm: string | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | DhImportKeyParams, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKey>",
                                "importKey(format: \"raw\" | \"pkcs8\" | \"spki\", keyData: BufferSource, algorithm: string | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | DhImportKeyParams, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKey>",
                                "importKey(format: string, keyData: JsonWebKey | BufferSource, algorithm: string | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | DhImportKeyParams, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKey>"
                            ]
                        },
                        {
                            "name": "sign",
                            "override-signatures": [
                                "sign(algorithm: string | RsaPssParams | EcdsaParams | AesCmacParams, key: CryptoKey, data: BufferSource): PromiseLike<ArrayBuffer>"
                            ]
                        },
                        {
                            "name": "unwrapKey",
                            "override-signatures": [
                                "unwrapKey(format: string, wrappedKey: BufferSource, unwrappingKey: CryptoKey, unwrapAlgorithm: AlgorithmIdentifier, unwrappedKeyAlgorithm: AlgorithmIdentifier, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKey>"
                            ]
                        },
                        {
                            "name": "verify",
                            "override-signatures": [
                                "verify(algorithm: string | RsaPssParams | EcdsaParams | AesCmacParams, key: CryptoKey, signature: BufferSource, data: BufferSource): PromiseLike<boolean>"
                            ]
                        },
                        {
                            "name": "wrapKey",
                            "override-signatures": [
                                "wrapKey(format: string, key: CryptoKey, wrappingKey: CryptoKey, wrapAlgorithm: AlgorithmIdentifier): PromiseLike<ArrayBuffer>"
                            ]
                        }
                    ]
                }
            },
            "HTMLInputElement": {
                "name": "HTMLInputElement",
                "properties": {
                    "property": [
                        {
                            "name": "files",
                            "read-only": "1",
                            "override-type": "FileList | null"
                        },
                        {
                            "name": "form",
                            "read-only": "1",
                            "override-type": "HTMLFormElement | null"
                        },
                        {
                            "name": "form",
                            "read-only": "1",
                            "override-type": "HTMLFormElement | null"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "setSelectionRange",
                            "override-signatures": [
                                "setSelectionRange(start: number, end: number, direction?: \"forward\" | \"backward\" | \"none\"): void"
                            ]
                        }
                    ]
                }
            },
            "History": {
                "name": "History",
                "methods": {
                    "method": [
                        {
                            "name": "back",
                            "override-signatures": [
                                "back(): void"
                            ]
                        },
                        {
                            "name": "forward",
                            "override-signatures": [
                                "forward(): void"
                            ]
                        },
                        {
                            "name": "go",
                            "override-signatures": [
                                "go(delta?: number): void"
                            ]
                        },
                        {
                            "name": "pushState",
                            "override-signatures": [
                                "pushState(data: any, title: string, url?: string | null): void"
                            ]
                        },
                        {
                            "name": "replaceState",
                            "override-signatures": [
                                "replaceState(data: any, title: string, url?: string | null): void"
                            ]
                        }
                    ]
                }
            },
            "MouseEvent": {
                "name": "MouseEvent",
                "methods": {
                    "method": [
                        {
                            "name": "initMouseEvent",
                            "override-signatures": [
                                "initMouseEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, buttonArg: number, relatedTargetArg: EventTarget | null): void"
                            ]
                        }
                    ]
                }
            },
            "DataTransfer": {
                "name": "DataTransfer",
                "properties": {
                    "property": [
                        {
                            "name": "types",
                            "read-only": "1",
                            "override-type": "string[]"
                        }
                    ]
                }
            },
            "XPathEvaluator": {
                "name": "XPathEvaluator",
                "methods": {
                    "method": [
                        {
                            "name": "evaluate",
                            "override-signatures": [
                                "evaluate(expression: string, contextNode: Node, resolver: XPathNSResolver | null, type: number, result: XPathResult | null): XPathResult"
                            ]
                        }
                    ]
                }
            },
            "XPathExpression": {
                "name": "XPathExpression",
                "methods": {
                    "method": [
                        {
                            "name": "evaluate",
                            "override-signatures": [
                                "evaluate(contextNode: Node, type: number, result: XPathResult | null): XPathResult"
                            ]
                        }
                    ]
                }
            },
            "DOMStringMap": {
                "name": "DOMStringMap",
                "overide-index-signatures": [
                    "[name: string]: string | undefined"
                ]
            },
            "DOMImplementation": {
                "name": "DOMImplementation",
                "methods": {
                    "method": [
                        {
                            "name": "hasFeature",
                            "override-signatures": [
                                "hasFeature(feature: string | null, version: string | null): boolean"
                            ]
                        },
                        {
                            "name": "createDocument",
                            "override-signatures": [
                                "createDocument(namespaceURI: string | null, qualifiedName: string | null, doctype: DocumentType | null): Document"
                            ]
                        }
                    ]
                }
            },
            "EventTarget": {
                "name": "EventTarget",
                "methods": {
                    "method": [
                        {
                            "name": "addEventListener",
                            "override-signatures": [
                                "addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void"
                            ]
                        },
                        {
                            "name": "removeEventListener",
                            "override-signatures": [
                                "removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void"
                            ]
                        }
                    ]
                }
            },
            "TouchEvent": {
                "name": "TouchEvent",
                "override-constructor-signatures": [
                    "new(type: string, touchEventInit?: TouchEventInit): TouchEvent"
                ]
            },
            "Text": {
                "name": "Text",
                "override-constructor-signatures": [
                    "new(data?: string): Text"
                ]
            },
            "DragEvent": {
                "name": "DragEvent",
                "override-constructor-signatures": [
                    "new(type: \"drag\" | \"dragend\" | \"dragenter\" | \"dragexit\" | \"dragleave\" | \"dragover\" | \"dragstart\" | \"drop\", dragEventInit?: { dataTransfer?: DataTransfer }): DragEvent"
                ]
            },
            "HTMLAppletElement": {
                "name": "HTMLAppletElement",
                "properties": {
                    "property": [
                        {
                            "name": "form",
                            "read-only": "1",
                            "override-type": "HTMLFormElement | null"
                        },
                        {
                            "name": "form",
                            "read-only": "1",
                            "override-type": "HTMLFormElement | null"
                        }
                    ]
                }
            },
            "HTMLButtonElement": {
                "name": "HTMLButtonElement",
                "properties": {
                    "property": [
                        {
                            "name": "form",
                            "read-only": "1",
                            "override-type": "HTMLFormElement | null"
                        },
                        {
                            "name": "form",
                            "read-only": "1",
                            "override-type": "HTMLFormElement | null"
                        }
                    ]
                }
            },
            "HTMLFieldSetElement": {
                "name": "HTMLFieldSetElement",
                "properties": {
                    "property": [
                        {
                            "name": "form",
                            "read-only": "1",
                            "override-type": "HTMLFormElement | null"
                        },
                        {
                            "name": "form",
                            "read-only": "1",
                            "override-type": "HTMLFormElement | null"
                        }
                    ]
                }
            },
            "HTMLLabelElement": {
                "name": "HTMLLabelElement",
                "properties": {
                    "property": [
                        {
                            "name": "form",
                            "read-only": "1",
                            "override-type": "HTMLFormElement | null"
                        },
                        {
                            "name": "form",
                            "read-only": "1",
                            "override-type": "HTMLFormElement | null"
                        }
                    ]
                }
            },
            "HTMLLegendElement": {
                "name": "HTMLLegendElement",
                "properties": {
                    "property": [
                        {
                            "name": "form",
                            "read-only": "1",
                            "override-type": "HTMLFormElement | null"
                        }
                    ]
                }
            },
            "HTMLObjectElement": {
                "name": "HTMLObjectElement",
                "properties": {
                    "property": [
                        {
                            "name": "form",
                            "read-only": "1",
                            "override-type": "HTMLFormElement | null"
                        },
                        {
                            "name": "form",
                            "read-only": "1",
                            "override-type": "HTMLFormElement | null"
                        }
                    ]
                }
            },
            "HTMLOptGroupElement": {
                "name": "HTMLOptGroupElement",
                "properties": {
                    "property": [
                        {
                            "name": "form",
                            "read-only": "1",
                            "override-type": "HTMLFormElement | null"
                        },
                        {
                            "name": "form",
                            "read-only": "1",
                            "override-type": "HTMLFormElement | null"
                        }
                    ]
                }
            },
            "HTMLOptionElement": {
                "name": "HTMLOptionElement",
                "properties": {
                    "property": [
                        {
                            "name": "form",
                            "read-only": "1",
                            "override-type": "HTMLFormElement | null"
                        },
                        {
                            "name": "form",
                            "read-only": "1",
                            "override-type": "HTMLFormElement | null"
                        }
                    ]
                }
            },
            "HTMLOutputElement": {
                "name": "HTMLOutputElement",
                "properties": {
                    "property": [
                        {
                            "name": "form",
                            "read-only": "1",
                            "override-type": "HTMLFormElement | null"
                        },
                        {
                            "name": "form",
                            "read-only": "1",
                            "override-type": "HTMLFormElement | null"
                        }
                    ]
                }
            },
            "HTMLProgressElement": {
                "name": "HTMLProgressElement",
                "properties": {
                    "property": [
                        {
                            "name": "form",
                            "read-only": "1",
                            "override-type": "HTMLFormElement | null"
                        },
                        {
                            "name": "form",
                            "read-only": "1",
                            "override-type": "HTMLFormElement | null"
                        }
                    ]
                }
            },
            "HTMLTextAreaElement": {
                "name": "HTMLTextAreaElement",
                "properties": {
                    "property": [
                        {
                            "name": "form",
                            "read-only": "1",
                            "override-type": "HTMLFormElement | null"
                        },
                        {
                            "name": "form",
                            "read-only": "1",
                            "override-type": "HTMLFormElement | null"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "setSelectionRange",
                            "override-signatures": [
                                "setSelectionRange(start: number, end: number, direction?: \"forward\" | \"backward\" | \"none\"): void"
                            ]
                        }
                    ]
                }
            },
            "HTMLegendElement": {
                "name": "HTMLegendElement",
                "properties": {
                    "property": [
                        {
                            "name": "form",
                            "read-only": "1",
                            "override-type": "HTMLFormElement | null"
                        }
                    ]
                }
            },
            "Headers": {
                "name": "Headers",
                "override-constructor-signatures": [
                    "new(init?: HeadersInit): Headers"
                ]
            },
            "ServiceWorkerContainer": {
                "name": "ServiceWorkerContainer",
                "methods": {
                    "method": [
                        {
                            "name": "getRegistration",
                            "override-signatures": [
                                "getRegistration(clientURL?: USVString): Promise<ServiceWorkerRegistration | undefined>"
                            ]
                        }
                    ]
                }
            },
            "IntersectionObserverEntry": {
                "name": "IntersectionObserverEntry",
                "properties": {
                    "property": [
                        {
                            "name": "boundingClientRect",
                            "read-only": "1",
                            "override-type": "ClientRect | DOMRect"
                        },
                        {
                            "name": "intersectionRect",
                            "read-only": "1",
                            "override-type": "ClientRect | DOMRect"
                        },
                        {
                            "name": "rootBounds",
                            "read-only": "1",
                            "override-type": "ClientRect | DOMRect"
                        }
                    ]
                }
            },
            "Range": {
                "name": "Range",
                "methods": {
                    "method": [
                        {
                            "name": "getBoundingClientRect",
                            "override-signatures": [
                                "getBoundingClientRect(): ClientRect | DOMRect"
                            ]
                        },
                        {
                            "name": "getClientRects",
                            "override-signatures": [
                                "getClientRects(): ClientRectList | DOMRectList"
                            ]
                        }
                    ]
                }
            },
            "URL": {
                "name": "URL",
                "override-constructor-signatures": [
                    "new(url: string, base?: string | URL): URL"
                ]
            },
            "WebSocket": {
                "name": "WebSocket",
                "methods": {
                    "method": [
                        {
                            "name": "send",
                            "override-signatures": [
                                "send(data: USVString | ArrayBuffer | Blob | ArrayBufferView): void"
                            ]
                        }
                    ]
                }
            },
            "PushManager": {
                "name": "PushManager",
                "methods": {
                    "method": [
                        {
                            "name": "getSubscription",
                            "override-signatures": [
                                "getSubscription(): Promise<PushSubscription | null>"
                            ]
                        }
                    ]
                }
            }
        }
    },
    "dictionaries": {
        "dictionary": {
            "CustomEventInit": {
                "name": "CustomEventInit",
                "members": {
                    "member": [
                        {
                            "name": "detail",
                            "override-type": "T",
                            "required": "false"
                        }
                    ]
                },
                "type-parameters": [
                    "T = any"
                ]
            },
            "IDBObjectStoreParameters": {
                "name": "IDBObjectStoreParameters",
                "members": {
                    "member": [
                        {
                            "name": "keyPath",
                            "override-type": "string | string[]",
                            "required": "false"
                        }
                    ]
                }
            },
            "Algorithm": {
                "name": "Algorithm",
                "members": {
                    "member": [
                        {
                            "name": "name",
                            "override-type": "string"
                        }
                    ]
                }
            },
            "RequestInit": {
                "name": "RequestInit",
                "members": {
                    "member": [
                        {
                            "name": "headers",
                            "override-type": "HeadersInit",
                            "required": "false"
                        }
                    ]
                }
            },
            "ResponseInit": {
                "name": "ResponseInit",
                "members": {
                    "member": [
                        {
                            "name": "headers",
                            "override-type": "HeadersInit",
                            "required": "false"
                        }
                    ]
                }
            },
            "PaymentMethodData": {
                "name": "PaymentMethodData",
                "members": {
                    "member": [
                        {
                            "name": "supportedMethods",
                            "override-type": "string | string[]"
                        }
                    ]
                }
            },
            "PaymentDetailsModifier": {
                "name": "PaymentDetailsModifier",
                "members": {
                    "member": [
                        {
                            "name": "supportedMethods",
                            "override-type": "string | string[]"
                        }
                    ]
                }
            }
        }
    },
    "typedefs": {
        "typedef": []
    }
}