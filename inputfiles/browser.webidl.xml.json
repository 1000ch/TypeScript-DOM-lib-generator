{
    "callback-functions": {
        "callback-function": [
            {
                "name": "DecodeErrorCallback",
                "callback": "1",
                "type": "void"
            },
            {
                "name": "DecodeSuccessCallback",
                "callback": "1",
                "type": "void",
                "param": [
                    {
                        "name": "decodedData",
                        "type": "AudioBuffer"
                    }
                ]
            },
            {
                "name": "ErrorEventHandler",
                "callback": "1",
                "type": "void",
                "param": [
                    {
                        "name": "columnNumber",
                        "optional": "1",
                        "type": "unsigned long"
                    },
                    {
                        "name": "event",
                        "type": "(Event or DOMString)"
                    },
                    {
                        "name": "fileno",
                        "optional": "1",
                        "type": "unsigned long"
                    },
                    {
                        "name": "source",
                        "optional": "1",
                        "type": "DOMString"
                    }
                ]
            },
            {
                "name": "ForEachCallback",
                "callback": "1",
                "type": "void",
                "param": [
                    {
                        "name": "keyId",
                        "type": "BufferSource"
                    },
                    {
                        "name": "status",
                        "type": "MediaKeyStatus"
                    }
                ]
            },
            {
                "name": "FrameRequestCallback",
                "callback": "1",
                "type": "void",
                "param": [
                    {
                        "name": "time",
                        "type": "DOMHighResTimeStamp"
                    }
                ]
            },
            {
                "name": "FunctionStringCallback",
                "callback": "1",
                "type": "void",
                "param": [
                    {
                        "name": "data",
                        "type": "DOMString"
                    }
                ]
            },
            {
                "name": "IntersectionObserverCallback",
                "callback": "1",
                "type": "void",
                "param": [
                    {
                        "name": "entries",
                        "type": "sequence<IntersectionObserverEntry>"
                    },
                    {
                        "name": "observer",
                        "type": "IntersectionObserver"
                    }
                ]
            },
            {
                "name": "MediaQueryListListener",
                "callback": "1",
                "type": "void",
                "param": [
                    {
                        "name": "mql",
                        "type": "MediaQueryList"
                    }
                ]
            },
            {
                "name": "MSExecAtPriorityFunctionCallback",
                "callback": "1",
                "tags": "MSAppOnly",
                "type": "any",
                "param": [
                    {
                        "name": "args",
                        "type": "any",
                        "variadic": "1"
                    }
                ]
            },
            {
                "name": "MSLaunchUriCallback",
                "callback": "1",
                "type": "void"
            },
            {
                "name": "MSUnsafeFunctionCallback",
                "callback": "1",
                "tags": "MSAppOnly",
                "type": "any"
            },
            {
                "name": "MutationCallback",
                "callback": "1",
                "type": "void",
                "param": [
                    {
                        "name": "mutations",
                        "type": "sequence<MutationRecord>"
                    },
                    {
                        "name": "observer",
                        "type": "MutationObserver"
                    }
                ]
            },
            {
                "name": "NavigatorUserMediaErrorCallback",
                "callback": "1",
                "type": "void",
                "param": [
                    {
                        "name": "error",
                        "type": "MediaStreamError"
                    }
                ]
            },
            {
                "name": "NavigatorUserMediaSuccessCallback",
                "callback": "1",
                "type": "void",
                "param": [
                    {
                        "name": "stream",
                        "type": "MediaStream"
                    }
                ]
            },
            {
                "name": "NotificationPermissionCallback",
                "callback": "1",
                "type": "void",
                "param": [
                    {
                        "name": "permission",
                        "type": "NotificationPermission"
                    }
                ]
            },
            {
                "name": "PositionCallback",
                "callback": "1",
                "type": "void",
                "param": [
                    {
                        "name": "position",
                        "type": "Position"
                    }
                ]
            },
            {
                "name": "PositionErrorCallback",
                "callback": "1",
                "type": "void",
                "param": [
                    {
                        "name": "error",
                        "type": "PositionError"
                    }
                ]
            },
            {
                "name": "RTCPeerConnectionErrorCallback",
                "callback": "1",
                "type": "void",
                "param": [
                    {
                        "name": "error",
                        "type": "DOMError"
                    }
                ]
            },
            {
                "name": "RTCSessionDescriptionCallback",
                "callback": "1",
                "type": "void",
                "param": [
                    {
                        "name": "sdp",
                        "type": "RTCSessionDescription"
                    }
                ]
            },
            {
                "name": "RTCStatsCallback",
                "callback": "1",
                "type": "void",
                "param": [
                    {
                        "name": "report",
                        "type": "RTCStatsReport"
                    }
                ]
            },
            {
                "name": "VoidFunction",
                "callback": "1",
                "type": "void"
            }
        ]
    },
    "callback-interfaces": {
        "interface": [
            {
                "name": "EventListener",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "handleEvent",
                            "type": "void",
                            "param": [
                                {
                                    "name": "evt",
                                    "type": "Event"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "WebKitEntriesCallback",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "handleEvent",
                            "type": "void",
                            "param": [
                                {
                                    "name": "entries",
                                    "type": "WebKitEntry[]"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "WebKitErrorCallback",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "handleEvent",
                            "type": "void",
                            "param": [
                                {
                                    "name": "err",
                                    "type": "DOMError"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "WebKitFileCallback",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "handleEvent",
                            "type": "void",
                            "param": [
                                {
                                    "name": "file",
                                    "type": "File"
                                }
                            ]
                        }
                    ]
                }
            }
        ]
    },
    "dictionaries": {
        "dictionary": [
            {
                "name": "Account",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "displayName",
                            "required": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "id",
                            "required": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "imageURL",
                            "type": "DOMString"
                        },
                        {
                            "name": "name",
                            "type": "DOMString"
                        },
                        {
                            "name": "rpDisplayName",
                            "required": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "Algorithm",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "name",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "AnimationEventInit",
                "extends": "EventInit",
                "members": {
                    "member": [
                        {
                            "name": "animationName",
                            "default": "\"\"",
                            "type": "DOMString"
                        },
                        {
                            "name": "elapsedTime",
                            "default": "0.0",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "AssertionOptions",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "allowList",
                            "type": "sequence<ScopedCredentialDescriptor>"
                        },
                        {
                            "name": "extensions",
                            "type": "WebAuthnExtensions"
                        },
                        {
                            "name": "rpId",
                            "type": "USVString"
                        },
                        {
                            "name": "timeoutSeconds",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "CacheQueryOptions",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "cacheName",
                            "type": "DOMString"
                        },
                        {
                            "name": "ignoreMethod",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "ignoreSearch",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "ignoreVary",
                            "default": "false",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "ClientData",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "challenge",
                            "required": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "extensions",
                            "type": "WebAuthnExtensions"
                        },
                        {
                            "name": "hashAlg",
                            "required": "1",
                            "type": "(DOMString or Algorithm)",
                            "type-original": "AlgorithmIdentifier"
                        },
                        {
                            "name": "origin",
                            "required": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "rpId",
                            "required": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "tokenBinding",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "CloseEventInit",
                "extends": "EventInit",
                "members": {
                    "member": [
                        {
                            "name": "code",
                            "default": "0",
                            "type": "unsigned short"
                        },
                        {
                            "name": "reason",
                            "default": "\"\"",
                            "type": "DOMString"
                        },
                        {
                            "name": "wasClean",
                            "default": "false",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "CompositionEventInit",
                "extends": "UIEventInit",
                "members": {
                    "member": [
                        {
                            "name": "data",
                            "default": "\"\"",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "ConfirmSiteSpecificExceptionsInformation",
                "extends": "ExceptionInformation",
                "members": {
                    "member": [
                        {
                            "name": "arrayOfDomainStrings",
                            "type": "sequence<DOMString>"
                        }
                    ]
                }
            },
            {
                "name": "ConstrainBooleanParameters",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "exact",
                            "type": "boolean"
                        },
                        {
                            "name": "ideal",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "ConstrainDOMStringParameters",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "exact",
                            "type": "(DOMString or sequence<DOMString>)"
                        },
                        {
                            "name": "ideal",
                            "type": "(DOMString or sequence<DOMString>)"
                        }
                    ]
                }
            },
            {
                "name": "ConstrainDoubleRange",
                "extends": "DoubleRange",
                "members": {
                    "member": [
                        {
                            "name": "exact",
                            "type": "double"
                        },
                        {
                            "name": "ideal",
                            "type": "double"
                        }
                    ]
                }
            },
            {
                "name": "ConstrainLongRange",
                "extends": "LongRange",
                "members": {
                    "member": [
                        {
                            "name": "exact",
                            "type": "long"
                        },
                        {
                            "name": "ideal",
                            "type": "long"
                        }
                    ]
                }
            },
            {
                "name": "ConstrainVideoFacingModeParameters",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "exact",
                            "type": "(VideoFacingModeEnum or sequence<VideoFacingModeEnum>)"
                        },
                        {
                            "name": "ideal",
                            "type": "(VideoFacingModeEnum or sequence<VideoFacingModeEnum>)"
                        }
                    ]
                }
            },
            {
                "name": "CustomEventInit",
                "extends": "EventInit",
                "members": {
                    "member": [
                        {
                            "name": "detail",
                            "default": "null",
                            "type": "any"
                        }
                    ]
                }
            },
            {
                "name": "DeviceAccelerationDict",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "x",
                            "default": "null",
                            "nullable": "1",
                            "type": "double"
                        },
                        {
                            "name": "y",
                            "default": "null",
                            "nullable": "1",
                            "type": "double"
                        },
                        {
                            "name": "z",
                            "default": "null",
                            "nullable": "1",
                            "type": "double"
                        }
                    ]
                }
            },
            {
                "name": "DeviceLightEventInit",
                "extends": "EventInit",
                "members": {
                    "member": [
                        {
                            "name": "value",
                            "default": "Infinity",
                            "type": "UnrestrictedDouble"
                        }
                    ]
                }
            },
            {
                "name": "DeviceMotionEventInit",
                "extends": "EventInit",
                "members": {
                    "member": [
                        {
                            "name": "acceleration",
                            "default": "null",
                            "nullable": "1",
                            "type": "DeviceAccelerationDict"
                        },
                        {
                            "name": "accelerationIncludingGravity",
                            "default": "null",
                            "nullable": "1",
                            "type": "DeviceAccelerationDict"
                        },
                        {
                            "name": "interval",
                            "default": "null",
                            "nullable": "1",
                            "type": "double"
                        },
                        {
                            "name": "rotationRate",
                            "default": "null",
                            "nullable": "1",
                            "type": "DeviceRotationRateDict"
                        }
                    ]
                }
            },
            {
                "name": "DeviceOrientationEventInit",
                "extends": "EventInit",
                "members": {
                    "member": [
                        {
                            "name": "absolute",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "alpha",
                            "default": "null",
                            "nullable": "1",
                            "type": "double"
                        },
                        {
                            "name": "beta",
                            "default": "null",
                            "nullable": "1",
                            "type": "double"
                        },
                        {
                            "name": "gamma",
                            "default": "null",
                            "nullable": "1",
                            "type": "double"
                        }
                    ]
                }
            },
            {
                "name": "DeviceRotationRateDict",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "alpha",
                            "default": "null",
                            "nullable": "1",
                            "type": "double"
                        },
                        {
                            "name": "beta",
                            "default": "null",
                            "nullable": "1",
                            "type": "double"
                        },
                        {
                            "name": "gamma",
                            "default": "null",
                            "nullable": "1",
                            "type": "double"
                        }
                    ]
                }
            },
            {
                "name": "DOMRectInit",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "height",
                            "default": "0",
                            "type": "unrestricted double"
                        },
                        {
                            "name": "width",
                            "default": "0",
                            "type": "unrestricted double"
                        },
                        {
                            "name": "x",
                            "default": "0",
                            "type": "unrestricted double"
                        },
                        {
                            "name": "y",
                            "default": "0",
                            "type": "unrestricted double"
                        }
                    ]
                }
            },
            {
                "name": "DoubleRange",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "max",
                            "type": "double"
                        },
                        {
                            "name": "min",
                            "type": "double"
                        }
                    ]
                }
            },
            {
                "name": "ErrorEventInit",
                "extends": "EventInit",
                "members": {
                    "member": [
                        {
                            "name": "colno",
                            "default": "0",
                            "type": "unsigned long"
                        },
                        {
                            "name": "error",
                            "default": "null",
                            "type": "any"
                        },
                        {
                            "name": "filename",
                            "default": "\"\"",
                            "type": "DOMString"
                        },
                        {
                            "name": "lineno",
                            "default": "0",
                            "type": "unsigned long"
                        },
                        {
                            "name": "message",
                            "default": "\"\"",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "EventInit",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "bubbles",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "cancelable",
                            "default": "false",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "EventModifierInit",
                "extends": "UIEventInit",
                "members": {
                    "member": [
                        {
                            "name": "altKey",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "ctrlKey",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "metaKey",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "modifierAltGraph",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "modifierCapsLock",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "modifierFn",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "modifierFnLock",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "modifierHyper",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "modifierNumLock",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "modifierOS",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "modifierScrollLock",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "modifierSuper",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "modifierSymbol",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "modifierSymbolLock",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "shiftKey",
                            "default": "false",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "ExceptionInformation",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "domain",
                            "nullable": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "FocusEventInit",
                "extends": "UIEventInit",
                "members": {
                    "member": [
                        {
                            "name": "relatedTarget",
                            "default": "null",
                            "nullable": "1",
                            "type": "EventTarget"
                        }
                    ]
                }
            },
            {
                "name": "FocusNavigationEventInit",
                "extends": "EventInit",
                "members": {
                    "member": [
                        {
                            "name": "navigationReason",
                            "default": "null",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "originHeight",
                            "default": "0",
                            "type": "float"
                        },
                        {
                            "name": "originLeft",
                            "default": "0",
                            "type": "float"
                        },
                        {
                            "name": "originTop",
                            "default": "0",
                            "type": "float"
                        },
                        {
                            "name": "originWidth",
                            "default": "0",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "FocusNavigationOrigin",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "originHeight",
                            "type": "float"
                        },
                        {
                            "name": "originLeft",
                            "type": "float"
                        },
                        {
                            "name": "originTop",
                            "type": "float"
                        },
                        {
                            "name": "originWidth",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "GamepadEventInit",
                "extends": "EventInit",
                "members": {
                    "member": [
                        {
                            "name": "gamepad",
                            "default": "null",
                            "nullable": "1",
                            "type": "Gamepad"
                        }
                    ]
                }
            },
            {
                "name": "GetNotificationOptions",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "tag",
                            "default": "\"\"",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HashChangeEventInit",
                "extends": "EventInit",
                "members": {
                    "member": [
                        {
                            "name": "newURL",
                            "default": "null",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "oldURL",
                            "default": "null",
                            "nullable": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "IDBIndexParameters",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "unique",
                            "default": "false",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "IDBObjectStoreParameters",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "keyPath",
                            "default": "null",
                            "nullable": "1",
                            "type": "IDBKeyPath"
                        }
                    ]
                }
            },
            {
                "name": "IntersectionObserverEntryInit",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "boundingClientRect",
                            "required": "1",
                            "type": "DOMRectInit"
                        },
                        {
                            "name": "intersectionRect",
                            "required": "1",
                            "type": "DOMRectInit"
                        },
                        {
                            "name": "rootBounds",
                            "required": "1",
                            "type": "DOMRectInit"
                        },
                        {
                            "name": "target",
                            "required": "1",
                            "type": "Element"
                        },
                        {
                            "name": "time",
                            "required": "1",
                            "type": "DOMHighResTimeStamp"
                        }
                    ]
                }
            },
            {
                "name": "IntersectionObserverInit",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "root",
                            "default": "null",
                            "nullable": "1",
                            "type": "Element"
                        },
                        {
                            "name": "rootMargin",
                            "default": "\"0px\"",
                            "type": "DOMString"
                        },
                        {
                            "name": "threshold",
                            "default": "0",
                            "type": "(double or sequence<double>)"
                        }
                    ]
                }
            },
            {
                "name": "KeyAlgorithm",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "name",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "KeyboardEventInit",
                "extends": "EventModifierInit",
                "members": {
                    "member": [
                        {
                            "name": "key",
                            "default": "\"\"",
                            "type": "DOMString"
                        },
                        {
                            "name": "location",
                            "default": "0",
                            "type": "unsigned long"
                        },
                        {
                            "name": "repeat",
                            "default": "false",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "LongRange",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "max",
                            "type": "long"
                        },
                        {
                            "name": "min",
                            "type": "long"
                        }
                    ]
                }
            },
            {
                "name": "MediaEncryptedEventInit",
                "extends": "EventInit",
                "members": {
                    "member": [
                        {
                            "name": "initData",
                            "default": "null",
                            "nullable": "1",
                            "type": "ArrayBuffer"
                        },
                        {
                            "name": "initDataType",
                            "default": "\"\"",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "MediaKeyMessageEventInit",
                "extends": "EventInit",
                "members": {
                    "member": [
                        {
                            "name": "message",
                            "default": "null",
                            "nullable": "1",
                            "type": "ArrayBuffer"
                        },
                        {
                            "name": "messageType",
                            "default": "\"license-request\"",
                            "type": "MediaKeyMessageType"
                        }
                    ]
                }
            },
            {
                "name": "MediaKeySystemConfiguration",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "audioCapabilities",
                            "type": "sequence<MediaKeySystemMediaCapability>"
                        },
                        {
                            "name": "distinctiveIdentifier",
                            "default": "\"optional\"",
                            "type": "MediaKeysRequirement"
                        },
                        {
                            "name": "initDataTypes",
                            "type": "sequence<DOMString>"
                        },
                        {
                            "name": "persistentState",
                            "default": "\"optional\"",
                            "type": "MediaKeysRequirement"
                        },
                        {
                            "name": "videoCapabilities",
                            "type": "sequence<MediaKeySystemMediaCapability>"
                        }
                    ]
                }
            },
            {
                "name": "MediaKeySystemMediaCapability",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "contentType",
                            "default": "\"\"",
                            "type": "DOMString"
                        },
                        {
                            "name": "robustness",
                            "default": "\"\"",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "MediaStreamConstraints",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "audio",
                            "default": "false",
                            "type": "(boolean or MediaTrackConstraints)"
                        },
                        {
                            "name": "video",
                            "default": "false",
                            "type": "(boolean or MediaTrackConstraints)"
                        }
                    ]
                }
            },
            {
                "name": "MediaStreamErrorEventInit",
                "extends": "EventInit",
                "members": {
                    "member": [
                        {
                            "name": "error",
                            "default": "null",
                            "nullable": "1",
                            "type": "MediaStreamError"
                        }
                    ]
                }
            },
            {
                "name": "MediaStreamEventInit",
                "extends": "EventInit",
                "members": {
                    "member": [
                        {
                            "name": "stream",
                            "default": "null",
                            "type": "MediaStream"
                        }
                    ]
                }
            },
            {
                "name": "MediaStreamTrackEventInit",
                "extends": "EventInit",
                "members": {
                    "member": [
                        {
                            "name": "track",
                            "default": "null",
                            "nullable": "1",
                            "type": "MediaStreamTrack"
                        }
                    ]
                }
            },
            {
                "name": "MediaTrackCapabilities",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "aspectRatio",
                            "type": "(double or DoubleRange)"
                        },
                        {
                            "name": "deviceId",
                            "type": "DOMString"
                        },
                        {
                            "name": "echoCancellation",
                            "type": "sequence<boolean>"
                        },
                        {
                            "name": "facingMode",
                            "type": "DOMString"
                        },
                        {
                            "name": "frameRate",
                            "type": "(double or DoubleRange)"
                        },
                        {
                            "name": "groupId",
                            "type": "DOMString"
                        },
                        {
                            "name": "height",
                            "type": "(long or LongRange)"
                        },
                        {
                            "name": "sampleRate",
                            "type": "(long or LongRange)"
                        },
                        {
                            "name": "sampleSize",
                            "type": "(long or LongRange)"
                        },
                        {
                            "name": "volume",
                            "type": "(double or DoubleRange)"
                        },
                        {
                            "name": "width",
                            "type": "(long or LongRange)"
                        }
                    ]
                }
            },
            {
                "name": "MediaTrackConstraints",
                "extends": "MediaTrackConstraintSet",
                "members": {
                    "member": [
                        {
                            "name": "advanced",
                            "type": "sequence<MediaTrackConstraintSet>"
                        }
                    ]
                }
            },
            {
                "name": "MediaTrackConstraintSet",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "aspectRatio",
                            "type": "(double or ConstrainDoubleRange)",
                            "type-original": "ConstrainDouble"
                        },
                        {
                            "name": "deviceId",
                            "type": "(DOMString or sequence<DOMString> or ConstrainDOMStringParameters)",
                            "type-original": "ConstrainDOMString"
                        },
                        {
                            "name": "echoCancelation",
                            "type": "(boolean or ConstrainBooleanParameters)",
                            "type-original": "ConstrainBoolean"
                        },
                        {
                            "name": "facingMode",
                            "type": "(DOMString or sequence<DOMString> or ConstrainDOMStringParameters)",
                            "type-original": "ConstrainDOMString"
                        },
                        {
                            "name": "frameRate",
                            "type": "(double or ConstrainDoubleRange)",
                            "type-original": "ConstrainDouble"
                        },
                        {
                            "name": "groupId",
                            "type": "(DOMString or sequence<DOMString> or ConstrainDOMStringParameters)",
                            "type-original": "ConstrainDOMString"
                        },
                        {
                            "name": "height",
                            "type": "(long or ConstrainLongRange)",
                            "type-original": "ConstrainLong"
                        },
                        {
                            "name": "sampleRate",
                            "type": "(long or ConstrainLongRange)",
                            "type-original": "ConstrainLong"
                        },
                        {
                            "name": "sampleSize",
                            "type": "(long or ConstrainLongRange)",
                            "type-original": "ConstrainLong"
                        },
                        {
                            "name": "volume",
                            "type": "(double or ConstrainDoubleRange)",
                            "type-original": "ConstrainDouble"
                        },
                        {
                            "name": "width",
                            "type": "(long or ConstrainLongRange)",
                            "type-original": "ConstrainLong"
                        }
                    ]
                }
            },
            {
                "name": "MediaTrackSettings",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "aspectRatio",
                            "type": "double"
                        },
                        {
                            "name": "deviceId",
                            "type": "DOMString"
                        },
                        {
                            "name": "echoCancellation",
                            "type": "boolean"
                        },
                        {
                            "name": "facingMode",
                            "type": "DOMString"
                        },
                        {
                            "name": "frameRate",
                            "type": "double"
                        },
                        {
                            "name": "groupId",
                            "type": "DOMString"
                        },
                        {
                            "name": "height",
                            "type": "long"
                        },
                        {
                            "name": "sampleRate",
                            "type": "long"
                        },
                        {
                            "name": "sampleSize",
                            "type": "long"
                        },
                        {
                            "name": "volume",
                            "type": "double"
                        },
                        {
                            "name": "width",
                            "type": "long"
                        }
                    ]
                }
            },
            {
                "name": "MediaTrackSupportedConstraints",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "aspectRatio",
                            "type": "boolean"
                        },
                        {
                            "name": "deviceId",
                            "type": "boolean"
                        },
                        {
                            "name": "echoCancellation",
                            "type": "boolean"
                        },
                        {
                            "name": "facingMode",
                            "type": "boolean"
                        },
                        {
                            "name": "frameRate",
                            "type": "boolean"
                        },
                        {
                            "name": "groupId",
                            "type": "boolean"
                        },
                        {
                            "name": "height",
                            "type": "boolean"
                        },
                        {
                            "name": "sampleRate",
                            "type": "boolean"
                        },
                        {
                            "name": "sampleSize",
                            "type": "boolean"
                        },
                        {
                            "name": "volume",
                            "type": "boolean"
                        },
                        {
                            "name": "width",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "MessageEventInit",
                "extends": "EventInit",
                "members": {
                    "member": [
                        {
                            "name": "data",
                            "default": "null",
                            "type": "any"
                        },
                        {
                            "name": "origin",
                            "default": "\"\"",
                            "type": "DOMString"
                        },
                        {
                            "name": "ports",
                            "default": "null",
                            "type": "sequence<MessagePort>"
                        },
                        {
                            "name": "source",
                            "default": "null",
                            "type": "Window"
                        }
                    ]
                }
            },
            {
                "name": "MouseEventInit",
                "extends": "EventModifierInit",
                "members": {
                    "member": [
                        {
                            "name": "button",
                            "default": "0",
                            "type": "short"
                        },
                        {
                            "name": "buttons",
                            "default": "0",
                            "type": "unsigned short"
                        },
                        {
                            "name": "clientX",
                            "default": "0",
                            "type": "long"
                        },
                        {
                            "name": "clientY",
                            "default": "0",
                            "type": "long"
                        },
                        {
                            "name": "relatedTarget",
                            "default": "null",
                            "nullable": "1",
                            "type": "EventTarget"
                        },
                        {
                            "name": "screenX",
                            "default": "0",
                            "type": "long"
                        },
                        {
                            "name": "screenY",
                            "default": "0",
                            "type": "long"
                        }
                    ]
                }
            },
            {
                "name": "MSAccountInfo",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "accountImageUri",
                            "type": "DOMString"
                        },
                        {
                            "name": "accountName",
                            "type": "DOMString"
                        },
                        {
                            "name": "rpDisplayName",
                            "required": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "userDisplayName",
                            "required": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "userId",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "MSAudioLocalClientEvent",
                "extends": "MSLocalClientEventBase",
                "members": {
                    "member": [
                        {
                            "name": "cpuInsufficientEventRatio",
                            "type": "float"
                        },
                        {
                            "name": "deviceCaptureNotFunctioningEventRatio",
                            "type": "float"
                        },
                        {
                            "name": "deviceClippingEventRatio",
                            "type": "float"
                        },
                        {
                            "name": "deviceEchoEventRatio",
                            "type": "float"
                        },
                        {
                            "name": "deviceGlitchesEventRatio",
                            "type": "float"
                        },
                        {
                            "name": "deviceHalfDuplexAECEventRatio",
                            "type": "float"
                        },
                        {
                            "name": "deviceHowlingEventCount",
                            "type": "unsigned long"
                        },
                        {
                            "name": "deviceLowSNREventRatio",
                            "type": "float"
                        },
                        {
                            "name": "deviceLowSpeechLevelEventRatio",
                            "type": "float"
                        },
                        {
                            "name": "deviceMultipleEndpointsEventCount",
                            "type": "unsigned long"
                        },
                        {
                            "name": "deviceNearEndToEchoRatioEventRatio",
                            "type": "float"
                        },
                        {
                            "name": "deviceRenderMuteEventRatio",
                            "type": "float"
                        },
                        {
                            "name": "deviceRenderNotFunctioningEventRatio",
                            "type": "float"
                        },
                        {
                            "name": "deviceRenderZeroVolumeEventRatio",
                            "type": "float"
                        },
                        {
                            "name": "networkDelayEventRatio",
                            "type": "float"
                        },
                        {
                            "name": "networkSendQualityEventRatio",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "MSAudioRecvPayload",
                "extends": "MSPayloadBase",
                "members": {
                    "member": [
                        {
                            "name": "burstLossLength1",
                            "type": "float"
                        },
                        {
                            "name": "burstLossLength2",
                            "type": "float"
                        },
                        {
                            "name": "burstLossLength3",
                            "type": "float"
                        },
                        {
                            "name": "burstLossLength4",
                            "type": "float"
                        },
                        {
                            "name": "burstLossLength5",
                            "type": "float"
                        },
                        {
                            "name": "burstLossLength6",
                            "type": "float"
                        },
                        {
                            "name": "burstLossLength7",
                            "type": "float"
                        },
                        {
                            "name": "burstLossLength8OrHigher",
                            "type": "float"
                        },
                        {
                            "name": "fecRecvDistance1",
                            "type": "float"
                        },
                        {
                            "name": "fecRecvDistance2",
                            "type": "float"
                        },
                        {
                            "name": "fecRecvDistance3",
                            "type": "float"
                        },
                        {
                            "name": "packetReorderDepthAvg",
                            "type": "long"
                        },
                        {
                            "name": "packetReorderDepthMax",
                            "type": "long"
                        },
                        {
                            "name": "packetReorderRatio",
                            "type": "float"
                        },
                        {
                            "name": "ratioCompressedSamplesAvg",
                            "type": "float"
                        },
                        {
                            "name": "ratioConcealedSamplesAvg",
                            "type": "float"
                        },
                        {
                            "name": "ratioStretchedSamplesAvg",
                            "type": "float"
                        },
                        {
                            "name": "samplingRate",
                            "type": "unsigned long"
                        },
                        {
                            "name": "signal",
                            "type": "MSAudioRecvSignal"
                        }
                    ]
                }
            },
            {
                "name": "MSAudioRecvSignal",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "initialSignalLevelRMS",
                            "type": "float"
                        },
                        {
                            "name": "recvNoiseLevelCh1",
                            "type": "long"
                        },
                        {
                            "name": "recvSignalLevelCh1",
                            "type": "long"
                        },
                        {
                            "name": "renderLoopbackSignalLevel",
                            "type": "float"
                        },
                        {
                            "name": "renderNoiseLevel",
                            "type": "float"
                        },
                        {
                            "name": "renderSignalLevel",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "MSAudioSendPayload",
                "extends": "MSPayloadBase",
                "members": {
                    "member": [
                        {
                            "name": "audioFECUsed",
                            "type": "boolean"
                        },
                        {
                            "name": "samplingRate",
                            "type": "unsigned long"
                        },
                        {
                            "name": "sendMutePercent",
                            "type": "float"
                        },
                        {
                            "name": "signal",
                            "type": "MSAudioSendSignal"
                        }
                    ]
                }
            },
            {
                "name": "MSAudioSendSignal",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "noiseLevel",
                            "type": "long"
                        },
                        {
                            "name": "sendNoiseLevelCh1",
                            "type": "long"
                        },
                        {
                            "name": "sendSignalLevelCh1",
                            "type": "long"
                        }
                    ]
                }
            },
            {
                "name": "MSConnectivity",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "iceType",
                            "type": "MSIceType"
                        },
                        {
                            "name": "iceWarningFlags",
                            "type": "MSIceWarningFlags"
                        },
                        {
                            "name": "relayAddress",
                            "type": "MSRelayAddress"
                        }
                    ]
                }
            },
            {
                "name": "MSCredentialFilter",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "accept",
                            "type": "sequence<MSCredentialSpec>"
                        }
                    ]
                }
            },
            {
                "name": "MSCredentialParameters",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "type",
                            "type": "MSCredentialType"
                        }
                    ]
                }
            },
            {
                "name": "MSCredentialSpec",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "id",
                            "type": "DOMString"
                        },
                        {
                            "name": "type",
                            "required": "1",
                            "type": "MSCredentialType"
                        }
                    ]
                }
            },
            {
                "name": "MSDelay",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "roundTrip",
                            "type": "unsigned long"
                        },
                        {
                            "name": "roundTripMax",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "MSDescription",
                "extends": "RTCStats",
                "members": {
                    "member": [
                        {
                            "name": "connectivity",
                            "type": "MSConnectivity"
                        },
                        {
                            "name": "deviceDevName",
                            "type": "DOMString"
                        },
                        {
                            "name": "localAddr",
                            "type": "MSIPAddressInfo"
                        },
                        {
                            "name": "networkconnectivity",
                            "type": "MSNetworkConnectivityInfo"
                        },
                        {
                            "name": "reflexiveLocalIPAddr",
                            "type": "MSIPAddressInfo"
                        },
                        {
                            "name": "remoteAddr",
                            "type": "MSIPAddressInfo"
                        },
                        {
                            "name": "transport",
                            "type": "RTCIceProtocol"
                        }
                    ]
                }
            },
            {
                "name": "MSFIDOCredentialParameters",
                "extends": "MSCredentialParameters",
                "members": {
                    "member": [
                        {
                            "name": "algorithm",
                            "type": "(DOMString or Algorithm)",
                            "type-original": "AlgorithmIdentifier"
                        },
                        {
                            "name": "authenticators",
                            "type": "sequence<AAGUID>"
                        }
                    ]
                }
            },
            {
                "name": "MSIceWarningFlags",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "allocationMessageIntegrityFailed",
                            "type": "boolean"
                        },
                        {
                            "name": "alternateServerReceived",
                            "type": "boolean"
                        },
                        {
                            "name": "connCheckMessageIntegrityFailed",
                            "type": "boolean"
                        },
                        {
                            "name": "connCheckOtherError",
                            "type": "boolean"
                        },
                        {
                            "name": "fipsAllocationFailure",
                            "type": "boolean"
                        },
                        {
                            "name": "multipleRelayServersAttempted",
                            "type": "boolean"
                        },
                        {
                            "name": "noRelayServersConfigured",
                            "type": "boolean"
                        },
                        {
                            "name": "portRangeExhausted",
                            "type": "boolean"
                        },
                        {
                            "name": "pseudoTLSFailure",
                            "type": "boolean"
                        },
                        {
                            "name": "tcpNatConnectivityFailed",
                            "type": "boolean"
                        },
                        {
                            "name": "tcpRelayConnectivityFailed",
                            "type": "boolean"
                        },
                        {
                            "name": "turnAuthUnknownUsernameError",
                            "type": "boolean"
                        },
                        {
                            "name": "turnTcpAllocateFailed",
                            "type": "boolean"
                        },
                        {
                            "name": "turnTcpSendFailed",
                            "type": "boolean"
                        },
                        {
                            "name": "turnTcpTimedOut",
                            "type": "boolean"
                        },
                        {
                            "name": "turnTurnTcpConnectivityFailed",
                            "type": "boolean"
                        },
                        {
                            "name": "turnUdpAllocateFailed",
                            "type": "boolean"
                        },
                        {
                            "name": "turnUdpSendFailed",
                            "type": "boolean"
                        },
                        {
                            "name": "udpLocalConnectivityFailed",
                            "type": "boolean"
                        },
                        {
                            "name": "udpNatConnectivityFailed",
                            "type": "boolean"
                        },
                        {
                            "name": "udpRelayConnectivityFailed",
                            "type": "boolean"
                        },
                        {
                            "name": "useCandidateChecksFailed",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "MSIPAddressInfo",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "ipAddr",
                            "type": "DOMString"
                        },
                        {
                            "name": "manufacturerMacAddrMask",
                            "type": "DOMString"
                        },
                        {
                            "name": "port",
                            "type": "unsigned short"
                        }
                    ]
                }
            },
            {
                "name": "MSJitter",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "interArrival",
                            "type": "unsigned long"
                        },
                        {
                            "name": "interArrivalMax",
                            "type": "unsigned long"
                        },
                        {
                            "name": "interArrivalSD",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "MSLocalClientEventBase",
                "extends": "RTCStats",
                "members": {
                    "member": [
                        {
                            "name": "networkBandwidthLowEventRatio",
                            "type": "float"
                        },
                        {
                            "name": "networkReceiveQualityEventRatio",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "MSNetwork",
                "extends": "RTCStats",
                "members": {
                    "member": [
                        {
                            "name": "delay",
                            "type": "MSDelay"
                        },
                        {
                            "name": "jitter",
                            "type": "MSJitter"
                        },
                        {
                            "name": "packetLoss",
                            "type": "MSPacketLoss"
                        },
                        {
                            "name": "utilization",
                            "type": "MSUtilization"
                        }
                    ]
                }
            },
            {
                "name": "MSNetworkConnectivityInfo",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "linkspeed",
                            "type": "unsigned long"
                        },
                        {
                            "name": "networkConnectionDetails",
                            "type": "DOMString"
                        },
                        {
                            "name": "vpn",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "MSNetworkInterfaceType",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "interfaceTypeEthernet",
                            "type": "boolean"
                        },
                        {
                            "name": "interfaceTypePPP",
                            "type": "boolean"
                        },
                        {
                            "name": "interfaceTypeTunnel",
                            "type": "boolean"
                        },
                        {
                            "name": "interfaceTypeWireless",
                            "type": "boolean"
                        },
                        {
                            "name": "interfaceTypeWWAN",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "MSOutboundNetwork",
                "extends": "MSNetwork",
                "members": {
                    "member": [
                        {
                            "name": "appliedBandwidthLimit",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "MSPacketLoss",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "lossRate",
                            "type": "float"
                        },
                        {
                            "name": "lossRateMax",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "MSPayloadBase",
                "extends": "RTCStats",
                "members": {
                    "member": [
                        {
                            "name": "payloadDescription",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "MSPortRange",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "max",
                            "type": "unsigned short"
                        },
                        {
                            "name": "min",
                            "type": "unsigned short"
                        }
                    ]
                }
            },
            {
                "name": "MSRelayAddress",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "port",
                            "type": "unsigned short"
                        },
                        {
                            "name": "relayAddress",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "MSSignatureParameters",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "userPrompt",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "MSTransportDiagnosticsStats",
                "extends": "RTCStats",
                "members": {
                    "member": [
                        {
                            "name": "allocationTimeInMs",
                            "type": "unsigned long"
                        },
                        {
                            "name": "baseAddress",
                            "type": "DOMString"
                        },
                        {
                            "name": "baseInterface",
                            "type": "MSNetworkInterfaceType"
                        },
                        {
                            "name": "iceRole",
                            "type": "RTCIceRole"
                        },
                        {
                            "name": "iceWarningFlags",
                            "type": "MSIceWarningFlags"
                        },
                        {
                            "name": "interfaces",
                            "type": "MSNetworkInterfaceType"
                        },
                        {
                            "name": "localAddress",
                            "type": "DOMString"
                        },
                        {
                            "name": "localAddrType",
                            "type": "MSIceAddrType"
                        },
                        {
                            "name": "localInterface",
                            "type": "MSNetworkInterfaceType"
                        },
                        {
                            "name": "localMR",
                            "type": "DOMString"
                        },
                        {
                            "name": "localMRTCPPort",
                            "type": "unsigned short"
                        },
                        {
                            "name": "localSite",
                            "type": "DOMString"
                        },
                        {
                            "name": "msRtcEngineVersion",
                            "type": "DOMString"
                        },
                        {
                            "name": "networkName",
                            "type": "DOMString"
                        },
                        {
                            "name": "numConsentReqReceived",
                            "type": "unsigned long"
                        },
                        {
                            "name": "numConsentReqSent",
                            "type": "unsigned long"
                        },
                        {
                            "name": "numConsentRespReceived",
                            "type": "unsigned long"
                        },
                        {
                            "name": "numConsentRespSent",
                            "type": "unsigned long"
                        },
                        {
                            "name": "portRangeMax",
                            "type": "unsigned short"
                        },
                        {
                            "name": "portRangeMin",
                            "type": "unsigned short"
                        },
                        {
                            "name": "protocol",
                            "type": "RTCIceProtocol"
                        },
                        {
                            "name": "remoteAddress",
                            "type": "DOMString"
                        },
                        {
                            "name": "remoteAddrType",
                            "type": "MSIceAddrType"
                        },
                        {
                            "name": "remoteMR",
                            "type": "DOMString"
                        },
                        {
                            "name": "remoteMRTCPPort",
                            "type": "unsigned short"
                        },
                        {
                            "name": "remoteSite",
                            "type": "DOMString"
                        },
                        {
                            "name": "rtpRtcpMux",
                            "type": "boolean"
                        },
                        {
                            "name": "stunVer",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "MSUtilization",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "bandwidthEstimation",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "bandwidthEstimationAvg",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "bandwidthEstimationMax",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "bandwidthEstimationMin",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "bandwidthEstimationStdDev",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "packets",
                            "type": "unsigned long long"
                        }
                    ]
                }
            },
            {
                "name": "MSVideoPayload",
                "extends": "MSPayloadBase",
                "members": {
                    "member": [
                        {
                            "name": "durationSeconds",
                            "type": "float"
                        },
                        {
                            "name": "resolution",
                            "type": "DOMString"
                        },
                        {
                            "name": "videoBitRateAvg",
                            "type": "unsigned long"
                        },
                        {
                            "name": "videoBitRateMax",
                            "type": "unsigned long"
                        },
                        {
                            "name": "videoFrameRateAvg",
                            "type": "float"
                        },
                        {
                            "name": "videoPacketLossRate",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "MSVideoRecvPayload",
                "extends": "MSVideoPayload",
                "members": {
                    "member": [
                        {
                            "name": "lowBitRateCallPercent",
                            "type": "float"
                        },
                        {
                            "name": "lowFrameRateCallPercent",
                            "type": "float"
                        },
                        {
                            "name": "recvBitRateAverage",
                            "type": "unsigned long"
                        },
                        {
                            "name": "recvBitRateMaximum",
                            "type": "unsigned long"
                        },
                        {
                            "name": "recvCodecType",
                            "type": "DOMString"
                        },
                        {
                            "name": "recvFpsHarmonicAverage",
                            "type": "float"
                        },
                        {
                            "name": "recvFrameRateAverage",
                            "type": "float"
                        },
                        {
                            "name": "recvNumResSwitches",
                            "type": "float"
                        },
                        {
                            "name": "recvReorderBufferMaxSuccessfullyOrderedExtent",
                            "type": "unsigned long"
                        },
                        {
                            "name": "recvReorderBufferMaxSuccessfullyOrderedLateTime",
                            "type": "unsigned long"
                        },
                        {
                            "name": "recvReorderBufferPacketsDroppedDueToBufferExhaustion",
                            "type": "unsigned long"
                        },
                        {
                            "name": "recvReorderBufferPacketsDroppedDueToTimeout",
                            "type": "unsigned long"
                        },
                        {
                            "name": "recvReorderBufferReorderedPackets",
                            "type": "unsigned long"
                        },
                        {
                            "name": "recvResolutionHeight",
                            "type": "unsigned long"
                        },
                        {
                            "name": "recvResolutionWidth",
                            "type": "unsigned long"
                        },
                        {
                            "name": "recvVideoStreamsMax",
                            "type": "unsigned long"
                        },
                        {
                            "name": "recvVideoStreamsMin",
                            "type": "unsigned long"
                        },
                        {
                            "name": "recvVideoStreamsMode",
                            "type": "long"
                        },
                        {
                            "name": "reorderBufferTotalPackets",
                            "type": "unsigned long"
                        },
                        {
                            "name": "videoFrameLossRate",
                            "type": "float"
                        },
                        {
                            "name": "videoPostFECPLR",
                            "type": "float"
                        },
                        {
                            "name": "videoResolutions",
                            "type": "MSVideoResolutionDistribution"
                        }
                    ]
                }
            },
            {
                "name": "MSVideoResolutionDistribution",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "cifQuality",
                            "type": "unsigned long"
                        },
                        {
                            "name": "h1080Quality",
                            "type": "unsigned long"
                        },
                        {
                            "name": "h1440Quality",
                            "type": "unsigned long"
                        },
                        {
                            "name": "h2160Quality",
                            "type": "unsigned long"
                        },
                        {
                            "name": "h720Quality",
                            "type": "unsigned long"
                        },
                        {
                            "name": "vgaQuality",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "MSVideoSendPayload",
                "extends": "MSVideoPayload",
                "members": {
                    "member": [
                        {
                            "name": "sendBitRateAverage",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "sendBitRateMaximum",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "sendFrameRateAverage",
                            "type": "float"
                        },
                        {
                            "name": "sendResolutionHeight",
                            "type": "unsigned long"
                        },
                        {
                            "name": "sendResolutionWidth",
                            "type": "unsigned long"
                        },
                        {
                            "name": "sendVideoStreamsMax",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "MsZoomToOptions",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "animate",
                            "type": "DOMString"
                        },
                        {
                            "name": "contentX",
                            "type": "long"
                        },
                        {
                            "name": "contentY",
                            "type": "long"
                        },
                        {
                            "name": "scaleFactor",
                            "type": "float"
                        },
                        {
                            "name": "viewportX",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "viewportY",
                            "nullable": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "MutationObserverInit",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "attributeFilter",
                            "type": "sequence<DOMString>"
                        },
                        {
                            "name": "attributeOldValue",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "attributes",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "characterData",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "characterDataOldValue",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "childList",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "subtree",
                            "default": "false",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "NotificationOptions",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "body",
                            "default": "\"\"",
                            "type": "DOMString"
                        },
                        {
                            "name": "dir",
                            "default": "\"auto\"",
                            "type": "NotificationDirection"
                        },
                        {
                            "name": "icon",
                            "default": "\"\"",
                            "type": "DOMString"
                        },
                        {
                            "name": "lang",
                            "default": "\"\"",
                            "type": "DOMString"
                        },
                        {
                            "name": "tag",
                            "default": "\"\"",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "ObjectURLOptions",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "oneTimeOnly",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "PaymentCurrencyAmount",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "currency",
                            "required": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "currencySystem",
                            "default": "\"urn:iso:std:iso:4217\"",
                            "type": "DOMString"
                        },
                        {
                            "name": "value",
                            "required": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "PaymentDetails",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "displayItems",
                            "type": "sequence<PaymentItem>"
                        },
                        {
                            "name": "error",
                            "type": "DOMString"
                        },
                        {
                            "name": "modifiers",
                            "type": "sequence<PaymentDetailsModifier>"
                        },
                        {
                            "name": "shippingOptions",
                            "type": "sequence<PaymentShippingOption>"
                        },
                        {
                            "name": "total",
                            "type": "PaymentItem"
                        }
                    ]
                }
            },
            {
                "name": "PaymentDetailsModifier",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "additionalDisplayItems",
                            "type": "sequence<PaymentItem>"
                        },
                        {
                            "name": "data",
                            "type": "object"
                        },
                        {
                            "name": "supportedMethods",
                            "required": "1",
                            "type": "sequence<DOMString>"
                        },
                        {
                            "name": "total",
                            "type": "PaymentItem"
                        }
                    ]
                }
            },
            {
                "name": "PaymentItem",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "amount",
                            "required": "1",
                            "type": "PaymentCurrencyAmount"
                        },
                        {
                            "name": "label",
                            "required": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "pending",
                            "default": "false",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "PaymentMethodData",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "data",
                            "type": "object"
                        },
                        {
                            "name": "supportedMethods",
                            "required": "1",
                            "type": "sequence<DOMString>"
                        }
                    ]
                }
            },
            {
                "name": "PaymentOptions",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "requestPayerEmail",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "requestPayerName",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "requestPayerPhone",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "requestShipping",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "shippingType",
                            "default": "\"shipping\"",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "PaymentRequestUpdateEventInit",
                "extends": "EventInit"
            },
            {
                "name": "PaymentShippingOption",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "amount",
                            "required": "1",
                            "type": "PaymentCurrencyAmount"
                        },
                        {
                            "name": "id",
                            "required": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "label",
                            "required": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "selected",
                            "default": "false",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "PeriodicWaveConstraints",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "disableNormalization",
                            "default": "false",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "PointerEventInit",
                "extends": "MouseEventInit",
                "members": {
                    "member": [
                        {
                            "name": "height",
                            "default": "0",
                            "type": "long"
                        },
                        {
                            "name": "isPrimary",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "pointerId",
                            "default": "0",
                            "type": "long"
                        },
                        {
                            "name": "pointerType",
                            "default": "\"\"",
                            "type": "DOMString"
                        },
                        {
                            "name": "pressure",
                            "default": "0",
                            "type": "float"
                        },
                        {
                            "name": "tiltX",
                            "default": "0",
                            "type": "long"
                        },
                        {
                            "name": "tiltY",
                            "default": "0",
                            "type": "long"
                        },
                        {
                            "name": "width",
                            "default": "0",
                            "type": "long"
                        }
                    ]
                }
            },
            {
                "name": "PopStateEventInit",
                "extends": "EventInit",
                "members": {
                    "member": [
                        {
                            "name": "state",
                            "default": "null",
                            "type": "any"
                        }
                    ]
                }
            },
            {
                "name": "PositionOptions",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "enableHighAccuracy",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "maximumAge",
                            "default": "0",
                            "type": "long"
                        },
                        {
                            "name": "timeout",
                            "type": "long"
                        }
                    ]
                }
            },
            {
                "name": "ProgressEventInit",
                "extends": "EventInit",
                "members": {
                    "member": [
                        {
                            "name": "lengthComputable",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "loaded",
                            "default": "0",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "total",
                            "default": "0",
                            "type": "unsigned long long"
                        }
                    ]
                }
            },
            {
                "name": "PushSubscriptionOptionsInit",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "applicationServerKey",
                            "default": "null",
                            "nullable": "1",
                            "type": "BufferSource"
                        },
                        {
                            "name": "userVisibleOnly",
                            "default": "false",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "RegistrationOptions",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "scope",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "RequestInit",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "body",
                            "nullable": "1",
                            "type": "(Blob or BufferSource or FormData or DOMString)",
                            "type-original": "BodyInit"
                        },
                        {
                            "name": "cache",
                            "type": "RequestCache"
                        },
                        {
                            "name": "credentials",
                            "type": "RequestCredentials"
                        },
                        {
                            "name": "headers",
                            "type": "(Headers or sequence<sequence<DOMString>>)",
                            "type-original": "HeadersInit"
                        },
                        {
                            "name": "integrity",
                            "type": "DOMString"
                        },
                        {
                            "name": "keepalive",
                            "type": "boolean"
                        },
                        {
                            "name": "method",
                            "type": "DOMString",
                            "type-original": "ByteString"
                        },
                        {
                            "name": "mode",
                            "type": "RequestMode"
                        },
                        {
                            "name": "redirect",
                            "type": "RequestRedirect"
                        },
                        {
                            "name": "referrer",
                            "type": "DOMString",
                            "type-original": "USVString"
                        },
                        {
                            "name": "referrerPolicy",
                            "type": "ReferrerPolicy"
                        },
                        {
                            "name": "window",
                            "type": "any"
                        }
                    ]
                }
            },
            {
                "name": "ResponseInit",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "headers",
                            "type": "(Headers or sequence<sequence<DOMString>>)",
                            "type-original": "HeadersInit"
                        },
                        {
                            "name": "status",
                            "default": "200",
                            "type": "unsigned short"
                        },
                        {
                            "name": "statusText",
                            "default": "\"OK\"",
                            "type": "DOMString",
                            "type-original": "ByteString"
                        }
                    ]
                }
            },
            {
                "name": "RTCConfiguration",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "bundlePolicy",
                            "default": "\"balanced\"",
                            "type": "RTCBundlePolicy"
                        },
                        {
                            "name": "iceServers",
                            "type": "sequence<RTCIceServer>"
                        },
                        {
                            "name": "iceTransportPolicy",
                            "default": "\"all\"",
                            "type": "RTCIceTransportPolicy"
                        },
                        {
                            "name": "peerIdentity",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "RTCDtlsFingerprint",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "algorithm",
                            "type": "DOMString"
                        },
                        {
                            "name": "value",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "RTCDtlsParameters",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "fingerprints",
                            "type": "sequence<RTCDtlsFingerprint>"
                        },
                        {
                            "name": "role",
                            "default": "\"auto\"",
                            "type": "RTCDtlsRole"
                        }
                    ]
                }
            },
            {
                "name": "RTCDTMFToneChangeEventInit",
                "extends": "EventInit",
                "members": {
                    "member": [
                        {
                            "name": "tone",
                            "default": "\"\"",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "RTCIceCandidateAttributes",
                "extends": "RTCStats",
                "members": {
                    "member": [
                        {
                            "name": "addressSourceUrl",
                            "type": "DOMString"
                        },
                        {
                            "name": "candidateType",
                            "type": "RTCStatsIceCandidateType"
                        },
                        {
                            "name": "ipAddress",
                            "type": "DOMString"
                        },
                        {
                            "name": "portNumber",
                            "type": "long"
                        },
                        {
                            "name": "priority",
                            "type": "long"
                        },
                        {
                            "name": "transport",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "RTCIceCandidateComplete",
                "extends": "Object"
            },
            {
                "name": "RTCIceCandidateDictionary",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "foundation",
                            "type": "DOMString"
                        },
                        {
                            "name": "ip",
                            "type": "DOMString"
                        },
                        {
                            "name": "msMTurnSessionId",
                            "type": "DOMString"
                        },
                        {
                            "name": "port",
                            "type": "unsigned short"
                        },
                        {
                            "name": "priority",
                            "type": "unsigned long"
                        },
                        {
                            "name": "protocol",
                            "type": "RTCIceProtocol"
                        },
                        {
                            "name": "relatedAddress",
                            "default": "\"\"",
                            "type": "DOMString"
                        },
                        {
                            "name": "relatedPort",
                            "type": "unsigned short"
                        },
                        {
                            "name": "tcpType",
                            "type": "RTCIceTcpCandidateType"
                        },
                        {
                            "name": "type",
                            "type": "RTCIceCandidateType"
                        }
                    ]
                }
            },
            {
                "name": "RTCIceCandidateInit",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "candidate",
                            "type": "DOMString"
                        },
                        {
                            "name": "sdpMid",
                            "type": "DOMString"
                        },
                        {
                            "name": "sdpMLineIndex",
                            "type": "unsigned short"
                        }
                    ]
                }
            },
            {
                "name": "RTCIceCandidatePair",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "local",
                            "type": "RTCIceCandidateDictionary"
                        },
                        {
                            "name": "remote",
                            "type": "RTCIceCandidateDictionary"
                        }
                    ]
                }
            },
            {
                "name": "RTCIceCandidatePairStats",
                "extends": "RTCStats",
                "members": {
                    "member": [
                        {
                            "name": "availableIncomingBitrate",
                            "type": "double"
                        },
                        {
                            "name": "availableOutgoingBitrate",
                            "type": "double"
                        },
                        {
                            "name": "bytesReceived",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "bytesSent",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "localCandidateId",
                            "type": "DOMString"
                        },
                        {
                            "name": "nominated",
                            "type": "boolean"
                        },
                        {
                            "name": "priority",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "readable",
                            "type": "boolean"
                        },
                        {
                            "name": "remoteCandidateId",
                            "type": "DOMString"
                        },
                        {
                            "name": "roundTripTime",
                            "type": "double"
                        },
                        {
                            "name": "state",
                            "type": "RTCStatsIceCandidatePairState"
                        },
                        {
                            "name": "transportId",
                            "type": "DOMString"
                        },
                        {
                            "name": "writable",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "RTCIceGatherOptions",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "gatherPolicy",
                            "type": "RTCIceGatherPolicy"
                        },
                        {
                            "name": "iceservers",
                            "type": "sequence<RTCIceServer>"
                        },
                        {
                            "name": "portRange",
                            "type": "MSPortRange"
                        }
                    ]
                }
            },
            {
                "name": "RTCIceParameters",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "iceLite",
                            "nullable": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "password",
                            "type": "DOMString"
                        },
                        {
                            "name": "usernameFragment",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "RTCIceServer",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "credential",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "urls",
                            "type": "any"
                        },
                        {
                            "name": "username",
                            "nullable": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "RTCInboundRTPStreamStats",
                "extends": "RTCRTPStreamStats",
                "members": {
                    "member": [
                        {
                            "name": "bytesReceived",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "fractionLost",
                            "type": "double"
                        },
                        {
                            "name": "jitter",
                            "type": "double"
                        },
                        {
                            "name": "packetsLost",
                            "type": "unsigned long"
                        },
                        {
                            "name": "packetsReceived",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "RTCMediaStreamTrackStats",
                "extends": "RTCStats",
                "members": {
                    "member": [
                        {
                            "name": "audioLevel",
                            "type": "double"
                        },
                        {
                            "name": "echoReturnLoss",
                            "type": "double"
                        },
                        {
                            "name": "echoReturnLossEnhancement",
                            "type": "double"
                        },
                        {
                            "name": "frameHeight",
                            "type": "unsigned long"
                        },
                        {
                            "name": "framesCorrupted",
                            "type": "unsigned long"
                        },
                        {
                            "name": "framesDecoded",
                            "type": "unsigned long"
                        },
                        {
                            "name": "framesDropped",
                            "type": "unsigned long"
                        },
                        {
                            "name": "framesPerSecond",
                            "type": "double"
                        },
                        {
                            "name": "framesReceived",
                            "type": "unsigned long"
                        },
                        {
                            "name": "framesSent",
                            "type": "unsigned long"
                        },
                        {
                            "name": "frameWidth",
                            "type": "unsigned long"
                        },
                        {
                            "name": "remoteSource",
                            "type": "boolean"
                        },
                        {
                            "name": "ssrcIds",
                            "type": "sequence<DOMString>"
                        },
                        {
                            "name": "trackIdentifier",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "RTCOfferOptions",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "iceRestart",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "offerToReceiveAudio",
                            "type": "long"
                        },
                        {
                            "name": "offerToReceiveVideo",
                            "type": "long"
                        },
                        {
                            "name": "voiceActivityDetection",
                            "default": "true",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "RTCOutboundRTPStreamStats",
                "extends": "RTCRTPStreamStats",
                "members": {
                    "member": [
                        {
                            "name": "bytesSent",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "packetsSent",
                            "type": "unsigned long"
                        },
                        {
                            "name": "roundTripTime",
                            "type": "double"
                        },
                        {
                            "name": "targetBitrate",
                            "type": "double"
                        }
                    ]
                }
            },
            {
                "name": "RTCPeerConnectionIceEventInit",
                "extends": "EventInit",
                "members": {
                    "member": [
                        {
                            "name": "candidate",
                            "default": "null",
                            "type": "RTCIceCandidate"
                        }
                    ]
                }
            },
            {
                "name": "RTCRtcpFeedback",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "parameter",
                            "type": "DOMString"
                        },
                        {
                            "name": "type",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "RTCRtcpParameters",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "cname",
                            "type": "DOMString"
                        },
                        {
                            "name": "mux",
                            "default": "true",
                            "type": "boolean"
                        },
                        {
                            "name": "reducedSize",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "ssrc",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "RTCRtpCapabilities",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "codecs",
                            "type": "sequence<RTCRtpCodecCapability>"
                        },
                        {
                            "name": "fecMechanisms",
                            "type": "sequence<DOMString>"
                        },
                        {
                            "name": "headerExtensions",
                            "type": "sequence<RTCRtpHeaderExtension>"
                        }
                    ]
                }
            },
            {
                "name": "RTCRtpCodecCapability",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "clockRate",
                            "type": "unsigned long"
                        },
                        {
                            "name": "kind",
                            "type": "DOMString"
                        },
                        {
                            "name": "maxptime",
                            "type": "unsigned long"
                        },
                        {
                            "name": "maxSpatialLayers",
                            "default": "0",
                            "type": "unsigned short"
                        },
                        {
                            "name": "maxTemporalLayers",
                            "default": "0",
                            "type": "unsigned short"
                        },
                        {
                            "name": "name",
                            "type": "DOMString"
                        },
                        {
                            "name": "numChannels",
                            "type": "unsigned long"
                        },
                        {
                            "name": "options",
                            "type": "Dictionary"
                        },
                        {
                            "name": "parameters",
                            "type": "Dictionary"
                        },
                        {
                            "name": "preferredPayloadType",
                            "type": "octet",
                            "type-original": "payloadtype"
                        },
                        {
                            "name": "ptime",
                            "type": "unsigned long"
                        },
                        {
                            "name": "rtcpFeedback",
                            "type": "sequence<RTCRtcpFeedback>"
                        },
                        {
                            "name": "svcMultiStreamSupport",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "RTCRtpCodecParameters",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "clockRate",
                            "type": "unsigned long"
                        },
                        {
                            "name": "maxptime",
                            "type": "unsigned long"
                        },
                        {
                            "name": "name",
                            "type": "DOMString"
                        },
                        {
                            "name": "numChannels",
                            "type": "unsigned long"
                        },
                        {
                            "name": "parameters",
                            "type": "Dictionary"
                        },
                        {
                            "name": "payloadType",
                            "type": "payloadType"
                        },
                        {
                            "name": "ptime",
                            "type": "unsigned long"
                        },
                        {
                            "name": "rtcpFeedback",
                            "type": "sequence<RTCRtcpFeedback>"
                        }
                    ]
                }
            },
            {
                "name": "RTCRtpContributingSource",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "audioLevel",
                            "type": "byte"
                        },
                        {
                            "name": "csrc",
                            "type": "unsigned long"
                        },
                        {
                            "name": "timestamp",
                            "type": "DOMHighResTimeStamp"
                        }
                    ]
                }
            },
            {
                "name": "RTCRtpEncodingParameters",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "active",
                            "default": "true",
                            "type": "boolean"
                        },
                        {
                            "name": "codecPayloadType",
                            "type": "octet",
                            "type-original": "payloadtype"
                        },
                        {
                            "name": "dependencyEncodingIds",
                            "type": "sequence<DOMString>"
                        },
                        {
                            "name": "encodingId",
                            "type": "DOMString"
                        },
                        {
                            "name": "fec",
                            "type": "RTCRtpFecParameters"
                        },
                        {
                            "name": "framerateScale",
                            "type": "double"
                        },
                        {
                            "name": "maxBitrate",
                            "type": "double"
                        },
                        {
                            "name": "maxFramerate",
                            "type": "unsigned long"
                        },
                        {
                            "name": "minQuality",
                            "default": "0",
                            "type": "double"
                        },
                        {
                            "name": "priority",
                            "default": "1.0",
                            "type": "double"
                        },
                        {
                            "name": "resolutionScale",
                            "type": "double"
                        },
                        {
                            "name": "rtx",
                            "type": "RTCRtpRtxParameters"
                        },
                        {
                            "name": "ssrc",
                            "type": "unsigned long"
                        },
                        {
                            "name": "ssrcRange",
                            "type": "RTCSsrcRange"
                        }
                    ]
                }
            },
            {
                "name": "RTCRtpFecParameters",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "mechanism",
                            "type": "DOMString"
                        },
                        {
                            "name": "ssrc",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "RTCRtpHeaderExtension",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "kind",
                            "type": "DOMString"
                        },
                        {
                            "name": "preferredEncrypt",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "preferredId",
                            "type": "unsigned short"
                        },
                        {
                            "name": "uri",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "RTCRtpHeaderExtensionParameters",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "encrypt",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "id",
                            "type": "unsigned short"
                        },
                        {
                            "name": "uri",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "RTCRtpParameters",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "codecs",
                            "type": "sequence<RTCRtpCodecParameters>"
                        },
                        {
                            "name": "degradationPreference",
                            "default": "\"balanced\"",
                            "type": "RTCDegradationPreference"
                        },
                        {
                            "name": "encodings",
                            "type": "sequence<RTCRtpEncodingParameters>"
                        },
                        {
                            "name": "headerExtensions",
                            "type": "sequence<RTCRtpHeaderExtensionParameters>"
                        },
                        {
                            "name": "muxId",
                            "default": "\"\"",
                            "type": "DOMString"
                        },
                        {
                            "name": "rtcp",
                            "type": "RTCRtcpParameters"
                        }
                    ]
                }
            },
            {
                "name": "RTCRtpRtxParameters",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "ssrc",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "RTCRTPStreamStats",
                "extends": "RTCStats",
                "members": {
                    "member": [
                        {
                            "name": "associateStatsId",
                            "type": "DOMString"
                        },
                        {
                            "name": "codecId",
                            "type": "DOMString"
                        },
                        {
                            "name": "firCount",
                            "type": "unsigned long"
                        },
                        {
                            "name": "isRemote",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "mediaTrackId",
                            "type": "DOMString"
                        },
                        {
                            "name": "nackCount",
                            "type": "unsigned long"
                        },
                        {
                            "name": "pliCount",
                            "type": "unsigned long"
                        },
                        {
                            "name": "sliCount",
                            "type": "unsigned long"
                        },
                        {
                            "name": "ssrc",
                            "type": "DOMString"
                        },
                        {
                            "name": "transportId",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "RTCRtpUnhandled",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "muxId",
                            "type": "DOMString"
                        },
                        {
                            "name": "payloadType",
                            "type": "octet",
                            "type-original": "payloadtype"
                        },
                        {
                            "name": "ssrc",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "RTCSessionDescriptionInit",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "sdp",
                            "type": "DOMString"
                        },
                        {
                            "name": "type",
                            "type": "RTCSdpType"
                        }
                    ]
                }
            },
            {
                "name": "RTCSrtpKeyParam",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "keyMethod",
                            "type": "DOMString"
                        },
                        {
                            "name": "keySalt",
                            "type": "DOMString"
                        },
                        {
                            "name": "lifetime",
                            "type": "DOMString"
                        },
                        {
                            "name": "mkiLength",
                            "type": "unsigned short"
                        },
                        {
                            "name": "mkiValue",
                            "type": "unsigned short"
                        }
                    ]
                }
            },
            {
                "name": "RTCSrtpSdesParameters",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "cryptoSuite",
                            "type": "DOMString"
                        },
                        {
                            "name": "keyParams",
                            "type": "sequence<RTCSrtpKeyParam>"
                        },
                        {
                            "name": "sessionParams",
                            "type": "sequence<DOMString>"
                        },
                        {
                            "name": "tag",
                            "type": "unsigned short"
                        }
                    ]
                }
            },
            {
                "name": "RTCSsrcRange",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "max",
                            "type": "unsigned long"
                        },
                        {
                            "name": "min",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "RTCStats",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "id",
                            "type": "DOMString"
                        },
                        {
                            "name": "msType",
                            "type": "MSStatsType"
                        },
                        {
                            "name": "timestamp",
                            "type": "DOMHighResTimeStamp"
                        },
                        {
                            "name": "type",
                            "type": "RTCStatsType"
                        }
                    ]
                }
            },
            {
                "name": "RTCStatsReport",
                "extends": "Object"
            },
            {
                "name": "RTCTransportStats",
                "extends": "RTCStats",
                "members": {
                    "member": [
                        {
                            "name": "activeConnection",
                            "type": "boolean"
                        },
                        {
                            "name": "bytesReceived",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "bytesSent",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "localCertificateId",
                            "type": "DOMString"
                        },
                        {
                            "name": "remoteCertificateId",
                            "type": "DOMString"
                        },
                        {
                            "name": "rtcpTransportStatsId",
                            "type": "DOMString"
                        },
                        {
                            "name": "selectedCandidatePairId",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "ScopedCredentialDescriptor",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "id",
                            "required": "1",
                            "type": "BufferSource"
                        },
                        {
                            "name": "transports",
                            "type": "sequence<Transport>"
                        },
                        {
                            "name": "type",
                            "required": "1",
                            "type": "ScopedCredentialType"
                        }
                    ]
                }
            },
            {
                "name": "ScopedCredentialOptions",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "excludeList",
                            "type": "sequence<ScopedCredentialDescriptor>"
                        },
                        {
                            "name": "extensions",
                            "type": "WebAuthnExtensions"
                        },
                        {
                            "name": "rpId",
                            "type": "USVString"
                        },
                        {
                            "name": "timeoutSeconds",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "ScopedCredentialParameters",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "algorithm",
                            "required": "1",
                            "type": "(DOMString or Algorithm)",
                            "type-original": "AlgorithmIdentifier"
                        },
                        {
                            "name": "type",
                            "required": "1",
                            "type": "ScopedCredentialType"
                        }
                    ]
                }
            },
            {
                "name": "ServiceWorkerMessageEventInit",
                "extends": "EventInit",
                "members": {
                    "member": [
                        {
                            "name": "data",
                            "type": "any"
                        },
                        {
                            "name": "lastEventId",
                            "type": "DOMString"
                        },
                        {
                            "name": "origin",
                            "type": "DOMString"
                        },
                        {
                            "name": "ports",
                            "nullable": "1",
                            "type": "sequence<MessagePort>"
                        },
                        {
                            "name": "source",
                            "nullable": "1",
                            "type": "(ServiceWorker or MessagePort)"
                        }
                    ]
                }
            },
            {
                "name": "SpeechSynthesisEventInit",
                "extends": "EventInit",
                "members": {
                    "member": [
                        {
                            "name": "charIndex",
                            "default": "0",
                            "type": "unsigned long"
                        },
                        {
                            "name": "elapsedTime",
                            "default": "0",
                            "type": "float"
                        },
                        {
                            "name": "name",
                            "default": "\"\"",
                            "type": "DOMString"
                        },
                        {
                            "name": "utterance",
                            "default": "null",
                            "nullable": "1",
                            "type": "SpeechSynthesisUtterance"
                        }
                    ]
                }
            },
            {
                "name": "StoreExceptionsInformation",
                "extends": "ExceptionInformation",
                "members": {
                    "member": [
                        {
                            "name": "detailURI",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "explanationString",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "siteName",
                            "nullable": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "StoreSiteSpecificExceptionsInformation",
                "extends": "StoreExceptionsInformation",
                "members": {
                    "member": [
                        {
                            "name": "arrayOfDomainStrings",
                            "type": "sequence<DOMString>"
                        }
                    ]
                }
            },
            {
                "name": "TrackEventInit",
                "extends": "EventInit",
                "members": {
                    "member": [
                        {
                            "name": "track",
                            "default": "null",
                            "nullable": "1",
                            "type": "(VideoTrack or AudioTrack or TextTrack)"
                        }
                    ]
                }
            },
            {
                "name": "TransitionEventInit",
                "extends": "EventInit",
                "members": {
                    "member": [
                        {
                            "name": "elapsedTime",
                            "default": "0.0",
                            "type": "float"
                        },
                        {
                            "name": "propertyName",
                            "default": "\"\"",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "UIEventInit",
                "extends": "EventInit",
                "members": {
                    "member": [
                        {
                            "name": "detail",
                            "default": "0",
                            "type": "long"
                        },
                        {
                            "name": "view",
                            "default": "null",
                            "nullable": "1",
                            "type": "Window"
                        }
                    ]
                }
            },
            {
                "name": "WebAuthnExtensions",
                "extends": "Object"
            },
            {
                "name": "WebGLContextAttributes",
                "extends": "Object",
                "members": {
                    "member": [
                        {
                            "name": "alpha",
                            "default": "true",
                            "type": "boolean"
                        },
                        {
                            "name": "antialias",
                            "default": "true",
                            "type": "boolean"
                        },
                        {
                            "name": "depth",
                            "default": "true",
                            "type": "boolean"
                        },
                        {
                            "name": "premultipliedAlpha",
                            "default": "true",
                            "type": "boolean"
                        },
                        {
                            "name": "preserveDrawingBuffer",
                            "default": "false",
                            "type": "boolean"
                        },
                        {
                            "name": "stencil",
                            "default": "false",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "WebGLContextEventInit",
                "extends": "EventInit",
                "members": {
                    "member": [
                        {
                            "name": "statusMessage",
                            "default": "\"\"",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "WheelEventInit",
                "extends": "MouseEventInit",
                "members": {
                    "member": [
                        {
                            "name": "deltaMode",
                            "default": "0",
                            "type": "unsigned long"
                        },
                        {
                            "name": "deltaX",
                            "default": "0.0",
                            "type": "double"
                        },
                        {
                            "name": "deltaY",
                            "default": "0.0",
                            "type": "double"
                        },
                        {
                            "name": "deltaZ",
                            "default": "0.0",
                            "type": "double"
                        }
                    ]
                }
            }
        ]
    },
    "enums": {
        "enum": [
            {
                "name": "AppendMode",
                "value": [
                    "segments",
                    "sequence"
                ]
            },
            {
                "name": "AudioContextState",
                "value": [
                    "suspended",
                    "running",
                    "closed"
                ]
            },
            {
                "name": "BiquadFilterType",
                "value": [
                    "lowpass",
                    "highpass",
                    "bandpass",
                    "lowshelf",
                    "highshelf",
                    "peaking",
                    "notch",
                    "allpass"
                ]
            },
            {
                "name": "CanvasFillRule",
                "value": [
                    "nonzero",
                    "evenodd"
                ]
            },
            {
                "name": "ChannelCountMode",
                "value": [
                    "max",
                    "clamped-max",
                    "explicit"
                ]
            },
            {
                "name": "ChannelInterpretation",
                "value": [
                    "speakers",
                    "discrete"
                ]
            },
            {
                "name": "DistanceModelType",
                "value": [
                    "linear",
                    "inverse",
                    "exponential"
                ]
            },
            {
                "name": "ExpandGranularity",
                "value": [
                    "character",
                    "word",
                    "sentence",
                    "textedit"
                ]
            },
            {
                "name": "GamepadInputEmulationType",
                "value": [
                    "mouse",
                    "keyboard",
                    "gamepad"
                ]
            },
            {
                "name": "IDBCursorDirection",
                "value": [
                    "next",
                    "nextunique",
                    "prev",
                    "prevunique"
                ]
            },
            {
                "name": "IDBRequestReadyState",
                "value": [
                    "pending",
                    "done"
                ]
            },
            {
                "name": "IDBTransactionMode",
                "value": [
                    "readonly",
                    "readwrite",
                    "versionchange"
                ]
            },
            {
                "name": "ListeningState",
                "value": [
                    "inactive",
                    "active",
                    "disambiguation"
                ]
            },
            {
                "name": "MediaDeviceKind",
                "value": [
                    "audioinput",
                    "audiooutput",
                    "videoinput"
                ]
            },
            {
                "name": "MediaKeyMessageType",
                "value": [
                    "license-request",
                    "license-renewal",
                    "license-release",
                    "individualization-request"
                ]
            },
            {
                "name": "MediaKeySessionType",
                "value": [
                    "temporary",
                    "persistent-license",
                    "persistent-release-message"
                ]
            },
            {
                "name": "MediaKeysRequirement",
                "value": [
                    "required",
                    "optional",
                    "not-allowed"
                ]
            },
            {
                "name": "MediaKeyStatus",
                "value": [
                    "usable",
                    "expired",
                    "output-downscaled",
                    "output-not-allowed",
                    "status-pending",
                    "internal-error"
                ]
            },
            {
                "name": "MediaStreamTrackState",
                "value": [
                    "live",
                    "ended"
                ]
            },
            {
                "name": "MSCredentialType",
                "value": [
                    "FIDO_2_0"
                ]
            },
            {
                "name": "MSIceAddrType",
                "value": [
                    "os",
                    "stun",
                    "turn",
                    "peer-derived"
                ]
            },
            {
                "name": "MSIceType",
                "value": [
                    "failed",
                    "direct",
                    "relay"
                ]
            },
            {
                "name": "MSStatsType",
                "value": [
                    "description",
                    "localclientevent",
                    "inbound-network",
                    "outbound-network",
                    "inbound-payload",
                    "outbound-payload",
                    "transportdiagnostics"
                ]
            },
            {
                "name": "MSTransportType",
                "value": [
                    "Embedded",
                    "USB",
                    "NFC",
                    "BT"
                ]
            },
            {
                "name": "MSWebViewPermissionState",
                "value": [
                    "unknown",
                    "defer",
                    "allow",
                    "deny"
                ]
            },
            {
                "name": "MSWebViewPermissionType",
                "value": [
                    "geolocation",
                    "unlimitedIndexedDBQuota",
                    "media",
                    "pointerlock",
                    "webnotifications"
                ]
            },
            {
                "name": "NavigationReason",
                "value": [
                    "up",
                    "down",
                    "left",
                    "right"
                ]
            },
            {
                "name": "NavigationType",
                "value": [
                    "navigate",
                    "reload",
                    "back_forward",
                    "prerender"
                ]
            },
            {
                "name": "NotificationDirection",
                "value": [
                    "auto",
                    "ltr",
                    "rtl"
                ]
            },
            {
                "name": "NotificationPermission",
                "value": [
                    "default",
                    "denied",
                    "granted"
                ]
            },
            {
                "name": "OscillatorType",
                "value": [
                    "sine",
                    "square",
                    "sawtooth",
                    "triangle",
                    "custom"
                ]
            },
            {
                "name": "OverSampleType",
                "value": [
                    "none",
                    "2x",
                    "4x"
                ]
            },
            {
                "name": "PanningModelType",
                "value": [
                    "equalpower"
                ]
            },
            {
                "name": "PaymentComplete",
                "value": [
                    "success",
                    "fail",
                    ""
                ]
            },
            {
                "name": "PaymentShippingType",
                "value": [
                    "shipping",
                    "delivery",
                    "pickup"
                ]
            },
            {
                "name": "PushEncryptionKeyName",
                "value": [
                    "p256dh",
                    "auth"
                ]
            },
            {
                "name": "PushPermissionState",
                "value": [
                    "granted",
                    "denied",
                    "prompt"
                ]
            },
            {
                "name": "ReferrerPolicy",
                "value": [
                    "",
                    "no-referrer",
                    "no-referrer-when-downgrade",
                    "origin-only",
                    "origin-when-cross-origin",
                    "unsafe-url"
                ]
            },
            {
                "name": "RequestCache",
                "value": [
                    "default",
                    "no-store",
                    "reload",
                    "no-cache",
                    "force-cache"
                ]
            },
            {
                "name": "RequestCredentials",
                "value": [
                    "omit",
                    "same-origin",
                    "include"
                ]
            },
            {
                "name": "RequestDestination",
                "value": [
                    "",
                    "document",
                    "sharedworker",
                    "subresource",
                    "unknown",
                    "worker"
                ]
            },
            {
                "name": "RequestMode",
                "value": [
                    "navigate",
                    "same-origin",
                    "no-cors",
                    "cors"
                ]
            },
            {
                "name": "RequestRedirect",
                "value": [
                    "follow",
                    "error",
                    "manual"
                ]
            },
            {
                "name": "RequestType",
                "value": [
                    "",
                    "audio",
                    "font",
                    "image",
                    "script",
                    "style",
                    "track",
                    "video"
                ]
            },
            {
                "name": "ResponseType",
                "value": [
                    "basic",
                    "cors",
                    "default",
                    "error",
                    "opaque",
                    "opaqueredirect"
                ]
            },
            {
                "name": "RTCBundlePolicy",
                "value": [
                    "balanced",
                    "max-compat",
                    "max-bundle"
                ]
            },
            {
                "name": "RTCDegradationPreference",
                "value": [
                    "maintain-framerate",
                    "maintain-resolution",
                    "balanced"
                ]
            },
            {
                "name": "RTCDtlsRole",
                "value": [
                    "auto",
                    "client",
                    "server"
                ]
            },
            {
                "name": "RTCDtlsTransportState",
                "value": [
                    "new",
                    "connecting",
                    "connected",
                    "closed"
                ]
            },
            {
                "name": "RTCIceCandidateType",
                "value": [
                    "host",
                    "srflx",
                    "prflx",
                    "relay"
                ]
            },
            {
                "name": "RTCIceComponent",
                "value": [
                    "RTP",
                    "RTCP"
                ]
            },
            {
                "name": "RTCIceConnectionState",
                "value": [
                    "new",
                    "checking",
                    "connected",
                    "completed",
                    "failed",
                    "disconnected",
                    "closed"
                ]
            },
            {
                "name": "RTCIceGathererState",
                "value": [
                    "new",
                    "gathering",
                    "complete"
                ]
            },
            {
                "name": "RTCIceGatheringState",
                "value": [
                    "new",
                    "gathering",
                    "complete"
                ]
            },
            {
                "name": "RTCIceGatherPolicy",
                "value": [
                    "all",
                    "nohost",
                    "relay"
                ]
            },
            {
                "name": "RTCIceProtocol",
                "value": [
                    "udp",
                    "tcp"
                ]
            },
            {
                "name": "RTCIceRole",
                "value": [
                    "controlling",
                    "controlled"
                ]
            },
            {
                "name": "RTCIceTcpCandidateType",
                "value": [
                    "active",
                    "passive",
                    "so"
                ]
            },
            {
                "name": "RTCIceTransportPolicy",
                "value": [
                    "none",
                    "relay",
                    "all"
                ]
            },
            {
                "name": "RTCIceTransportState",
                "value": [
                    "new",
                    "checking",
                    "connected",
                    "completed",
                    "disconnected",
                    "closed"
                ]
            },
            {
                "name": "RTCSdpType",
                "value": [
                    "offer",
                    "pranswer",
                    "answer"
                ]
            },
            {
                "name": "RTCSignalingState",
                "value": [
                    "stable",
                    "have-local-offer",
                    "have-remote-offer",
                    "have-local-pranswer",
                    "have-remote-pranswer",
                    "closed"
                ]
            },
            {
                "name": "RTCStatsIceCandidatePairState",
                "value": [
                    "frozen",
                    "waiting",
                    "inprogress",
                    "failed",
                    "succeeded",
                    "cancelled"
                ]
            },
            {
                "name": "RTCStatsIceCandidateType",
                "value": [
                    "host",
                    "serverreflexive",
                    "peerreflexive",
                    "relayed"
                ]
            },
            {
                "name": "RTCStatsType",
                "value": [
                    "inboundrtp",
                    "outboundrtp",
                    "session",
                    "datachannel",
                    "track",
                    "transport",
                    "candidatepair",
                    "localcandidate",
                    "remotecandidate"
                ]
            },
            {
                "name": "ScopedCredentialType",
                "value": [
                    "ScopedCred"
                ]
            },
            {
                "name": "ServiceWorkerState",
                "value": [
                    "installing",
                    "installed",
                    "activating",
                    "activated",
                    "redundant"
                ]
            },
            {
                "name": "Transport",
                "value": [
                    "usb",
                    "nfc",
                    "ble"
                ]
            },
            {
                "name": "VideoFacingModeEnum",
                "value": [
                    "user",
                    "environment",
                    "left",
                    "right"
                ]
            },
            {
                "name": "VisibilityState",
                "value": [
                    "hidden",
                    "visible",
                    "prerender",
                    "unloaded"
                ]
            },
            {
                "name": "XMLHttpRequestResponseType",
                "value": [
                    "",
                    "arraybuffer",
                    "blob",
                    "document",
                    "json",
                    "text"
                ]
            }
        ]
    },
    "interfaces": {
        "interface": [
            {
                "name": "AnalyserNode",
                "extends": "AudioNode",
                "methods": {
                    "method": [
                        {
                            "name": "getByteFrequencyData",
                            "type": "void",
                            "param": [
                                {
                                    "name": "array",
                                    "type": "Uint8Array"
                                }
                            ]
                        },
                        {
                            "name": "getByteTimeDomainData",
                            "type": "void",
                            "param": [
                                {
                                    "name": "array",
                                    "type": "Uint8Array"
                                }
                            ]
                        },
                        {
                            "name": "getFloatFrequencyData",
                            "type": "void",
                            "param": [
                                {
                                    "name": "array",
                                    "type": "Float32Array"
                                }
                            ]
                        },
                        {
                            "name": "getFloatTimeDomainData",
                            "type": "void",
                            "param": [
                                {
                                    "name": "array",
                                    "type": "Float32Array"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "fftSize",
                            "type": "unsigned long"
                        },
                        {
                            "name": "frequencyBinCount",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "maxDecibels",
                            "type": "double"
                        },
                        {
                            "name": "minDecibels",
                            "type": "double"
                        },
                        {
                            "name": "smoothingTimeConstant",
                            "type": "double"
                        }
                    ]
                }
            },
            {
                "name": "ANGLE_instanced_arrays",
                "extends": "Object",
                "constants": {
                    "constant": [
                        {
                            "name": "VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x88FE"
                            ]
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "drawArraysInstancedANGLE",
                            "type": "void",
                            "param": [
                                {
                                    "name": "mode",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "first",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "count",
                                    "type": "long",
                                    "type-original": "GLsizei"
                                },
                                {
                                    "name": "primcount",
                                    "type": "long",
                                    "type-original": "GLsizei"
                                }
                            ]
                        },
                        {
                            "name": "drawElementsInstancedANGLE",
                            "type": "void",
                            "param": [
                                {
                                    "name": "mode",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "count",
                                    "type": "long",
                                    "type-original": "GLsizei"
                                },
                                {
                                    "name": "type",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "offset",
                                    "type": "long long",
                                    "type-original": "GLintptr"
                                },
                                {
                                    "name": "primcount",
                                    "type": "long",
                                    "type-original": "GLsizei"
                                }
                            ]
                        },
                        {
                            "name": "vertexAttribDivisorANGLE",
                            "type": "void",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long",
                                    "type-original": "GLuint"
                                },
                                {
                                    "name": "divisor",
                                    "type": "unsigned long",
                                    "type-original": "GLuint"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "AnimationEvent",
                "extends": "Event",
                "constructor": {
                    "param": [
                        {
                            "name": "typeArg",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "optional": "1",
                            "type": "AnimationEventInit"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "initAnimationEvent",
                            "type": "void",
                            "param": [
                                {
                                    "name": "typeArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "canBubbleArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "cancelableArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "animationNameArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "elapsedTimeArg",
                                    "type": "float"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "animationName",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "elapsedTime",
                            "read-only": "1",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "ApplicationCache",
                "extends": "EventTarget",
                "constants": {
                    "constant": [
                        {
                            "name": "CHECKING",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "DOWNLOADING",
                            "type": "unsigned short",
                            "value": [
                                "3"
                            ]
                        },
                        {
                            "name": "IDLE",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "OBSOLETE",
                            "type": "unsigned short",
                            "value": [
                                "5"
                            ]
                        },
                        {
                            "name": "UNCACHED",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        },
                        {
                            "name": "UPDATEREADY",
                            "type": "unsigned short",
                            "value": [
                                "4"
                            ]
                        }
                    ]
                },
                "events": {
                    "event": [
                        {
                            "name": "progress",
                            "dispatch": "sync",
                            "follows": "downloading",
                            "precedes": "updateready",
                            "skips-window": "1",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "obsolete",
                            "dispatch": "sync",
                            "follows": "downloading",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "error",
                            "dispatch": "sync",
                            "follows": "downloading",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "cached",
                            "dispatch": "sync",
                            "follows": "downloading",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "updateready",
                            "dispatch": "sync",
                            "follows": "progress",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "downloading",
                            "dispatch": "sync",
                            "follows": "checking",
                            "precedes": "noupdate progress obsolete cached",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "noupdate",
                            "dispatch": "sync",
                            "follows": "downloading",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "checking",
                            "dispatch": "sync",
                            "precedes": "downloading",
                            "skips-window": "1",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "abort",
                            "type": "void"
                        },
                        {
                            "name": "swapCache",
                            "type": "void"
                        },
                        {
                            "name": "update",
                            "type": "void"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "oncached",
                            "event-handler": "cached",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onchecking",
                            "event-handler": "checking",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondownloading",
                            "event-handler": "downloading",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onerror",
                            "event-handler": "error",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onnoupdate",
                            "event-handler": "noupdate",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onobsolete",
                            "event-handler": "obsolete",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onprogress",
                            "event-handler": "progress",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onupdateready",
                            "event-handler": "updateready",
                            "type": "EventHandler"
                        },
                        {
                            "name": "status",
                            "read-only": "1",
                            "type": "unsigned short"
                        }
                    ]
                }
            },
            {
                "name": "Attr",
                "extends": "Node",
                "properties": {
                    "property": [
                        {
                            "name": "name",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "ownerElement",
                            "read-only": "1",
                            "type": "Element"
                        },
                        {
                            "name": "prefix",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "specified",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "value",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "AudioBuffer",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "copyFromChannel",
                            "type": "void",
                            "param": [
                                {
                                    "name": "destination",
                                    "type": "Float32Array"
                                },
                                {
                                    "name": "channelNumber",
                                    "type": "long"
                                },
                                {
                                    "name": "startInChannel",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "copyToChannel",
                            "type": "void",
                            "param": [
                                {
                                    "name": "source",
                                    "type": "Float32Array"
                                },
                                {
                                    "name": "channelNumber",
                                    "type": "long"
                                },
                                {
                                    "name": "startInChannel",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "getChannelData",
                            "type": "Float32Array",
                            "param": [
                                {
                                    "name": "channel",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "duration",
                            "read-only": "1",
                            "type": "double"
                        },
                        {
                            "name": "length",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "numberOfChannels",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "sampleRate",
                            "read-only": "1",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "AudioBufferSourceNode",
                "extends": "AudioNode",
                "events": {
                    "event": [
                        {
                            "name": "end",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "start",
                            "type": "void",
                            "param": [
                                {
                                    "name": "when",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "double"
                                },
                                {
                                    "name": "offset",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "double"
                                },
                                {
                                    "name": "duration",
                                    "optional": "1",
                                    "type": "double"
                                }
                            ]
                        },
                        {
                            "name": "stop",
                            "type": "void",
                            "param": [
                                {
                                    "name": "when",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "double"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "buffer",
                            "nullable": "1",
                            "type": "AudioBuffer"
                        },
                        {
                            "name": "detune",
                            "read-only": "1",
                            "type": "AudioParam"
                        },
                        {
                            "name": "loop",
                            "type": "boolean"
                        },
                        {
                            "name": "loopEnd",
                            "type": "double"
                        },
                        {
                            "name": "loopStart",
                            "type": "double"
                        },
                        {
                            "name": "onended",
                            "event-handler": "ended",
                            "type": "EventHandler"
                        },
                        {
                            "name": "playbackRate",
                            "read-only": "1",
                            "type": "AudioParam"
                        }
                    ]
                }
            },
            {
                "name": "AudioContext",
                "extends": "EventTarget",
                "constructor": {},
                "methods": {
                    "method": [
                        {
                            "name": "close",
                            "type": "Promise<void>"
                        },
                        {
                            "name": "createAnalyser",
                            "type": "AnalyserNode"
                        },
                        {
                            "name": "createBiquadFilter",
                            "type": "BiquadFilterNode"
                        },
                        {
                            "name": "createBuffer",
                            "type": "AudioBuffer",
                            "param": [
                                {
                                    "name": "numberOfChannels",
                                    "type": "unsigned long"
                                },
                                {
                                    "name": "length",
                                    "type": "unsigned long"
                                },
                                {
                                    "name": "sampleRate",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "createBufferSource",
                            "type": "AudioBufferSourceNode"
                        },
                        {
                            "name": "createChannelMerger",
                            "type": "ChannelMergerNode",
                            "param": [
                                {
                                    "name": "numberOfInputs",
                                    "default": "6",
                                    "optional": "1",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "createChannelSplitter",
                            "type": "ChannelSplitterNode",
                            "param": [
                                {
                                    "name": "numberOfOutputs",
                                    "default": "6",
                                    "optional": "1",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "createConvolver",
                            "type": "ConvolverNode"
                        },
                        {
                            "name": "createDelay",
                            "type": "DelayNode",
                            "param": [
                                {
                                    "name": "maxDelayTime",
                                    "default": "1.0",
                                    "optional": "1",
                                    "type": "double"
                                }
                            ]
                        },
                        {
                            "name": "createDynamicsCompressor",
                            "type": "DynamicsCompressorNode"
                        },
                        {
                            "name": "createGain",
                            "type": "GainNode"
                        },
                        {
                            "name": "createIIRFilter",
                            "type": "IIRFilterNode",
                            "param": [
                                {
                                    "name": "feedforward",
                                    "type": "sequence<double>"
                                },
                                {
                                    "name": "feedback",
                                    "type": "sequence<double>"
                                }
                            ]
                        },
                        {
                            "name": "createMediaElementSource",
                            "type": "MediaElementAudioSourceNode",
                            "param": [
                                {
                                    "name": "mediaElement",
                                    "type": "HTMLMediaElement"
                                }
                            ]
                        },
                        {
                            "name": "createMediaStreamSource",
                            "type": "MediaStreamAudioSourceNode",
                            "param": [
                                {
                                    "name": "mediaStream",
                                    "type": "MediaStream"
                                }
                            ]
                        },
                        {
                            "name": "createOscillator",
                            "type": "OscillatorNode"
                        },
                        {
                            "name": "createPanner",
                            "type": "PannerNode"
                        },
                        {
                            "name": "createPeriodicWave",
                            "type": "PeriodicWave",
                            "param": [
                                {
                                    "name": "real",
                                    "type": "Float32Array"
                                },
                                {
                                    "name": "imag",
                                    "type": "Float32Array"
                                },
                                {
                                    "name": "constraints",
                                    "optional": "1",
                                    "type": "PeriodicWaveConstraints"
                                }
                            ]
                        },
                        {
                            "name": "createScriptProcessor",
                            "type": "ScriptProcessorNode",
                            "param": [
                                {
                                    "name": "bufferSize",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "unsigned long"
                                },
                                {
                                    "name": "numberOfInputChannels",
                                    "default": "2",
                                    "optional": "1",
                                    "type": "unsigned long"
                                },
                                {
                                    "name": "numberOfOutputChannels",
                                    "default": "2",
                                    "optional": "1",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "createStereoPanner",
                            "type": "StereoPannerNode"
                        },
                        {
                            "name": "createWaveShaper",
                            "type": "WaveShaperNode"
                        },
                        {
                            "name": "decodeAudioData",
                            "type": "Promise<AudioBuffer>",
                            "param": [
                                {
                                    "name": "audioData",
                                    "type": "ArrayBuffer"
                                },
                                {
                                    "name": "successCallback",
                                    "optional": "1",
                                    "type": "DecodeSuccessCallback"
                                },
                                {
                                    "name": "errorCallback",
                                    "optional": "1",
                                    "type": "DecodeErrorCallback"
                                }
                            ]
                        },
                        {
                            "name": "resume",
                            "type": "Promise<void>"
                        },
                        {
                            "name": "suspend",
                            "type": "Promise<void>"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "currentTime",
                            "read-only": "1",
                            "type": "double"
                        },
                        {
                            "name": "destination",
                            "read-only": "1",
                            "type": "AudioDestinationNode"
                        },
                        {
                            "name": "listener",
                            "read-only": "1",
                            "type": "AudioListener"
                        },
                        {
                            "name": "onstatechange",
                            "event-handler": "statechange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "sampleRate",
                            "read-only": "1",
                            "type": "float"
                        },
                        {
                            "name": "state",
                            "read-only": "1",
                            "type": "AudioContextState"
                        }
                    ]
                }
            },
            {
                "name": "AudioDestinationNode",
                "extends": "AudioNode",
                "properties": {
                    "property": [
                        {
                            "name": "maxChannelCount",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "AudioListener",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "setOrientation",
                            "type": "void",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "double"
                                },
                                {
                                    "name": "y",
                                    "type": "double"
                                },
                                {
                                    "name": "z",
                                    "type": "double"
                                },
                                {
                                    "name": "xUp",
                                    "type": "double"
                                },
                                {
                                    "name": "yUp",
                                    "type": "double"
                                },
                                {
                                    "name": "zUp",
                                    "type": "double"
                                }
                            ]
                        },
                        {
                            "name": "setPosition",
                            "type": "void",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "double"
                                },
                                {
                                    "name": "y",
                                    "type": "double"
                                },
                                {
                                    "name": "z",
                                    "type": "double"
                                }
                            ]
                        },
                        {
                            "name": "setVelocity",
                            "type": "void",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "double"
                                },
                                {
                                    "name": "y",
                                    "type": "double"
                                },
                                {
                                    "name": "z",
                                    "type": "double"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "dopplerFactor",
                            "type": "double"
                        },
                        {
                            "name": "speedOfSound",
                            "type": "double"
                        }
                    ]
                }
            },
            {
                "name": "AudioNode",
                "extends": "EventTarget",
                "methods": {
                    "method": [
                        {
                            "name": "connect",
                            "type": "AudioNode",
                            "param": [
                                {
                                    "name": "destination",
                                    "type": "AudioNode"
                                },
                                {
                                    "name": "output",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "unsigned long"
                                },
                                {
                                    "name": "input",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "disconnect",
                            "type": "void"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "channelCount",
                            "type": "unsigned long"
                        },
                        {
                            "name": "channelCountMode",
                            "type": "ChannelCountMode"
                        },
                        {
                            "name": "channelInterpretation",
                            "type": "ChannelInterpretation"
                        },
                        {
                            "name": "context",
                            "read-only": "1",
                            "type": "AudioContext"
                        },
                        {
                            "name": "numberOfInputs",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "numberOfOutputs",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "AudioParam",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "cancelScheduledValues",
                            "type": "AudioParam",
                            "param": [
                                {
                                    "name": "startTime",
                                    "type": "double"
                                }
                            ]
                        },
                        {
                            "name": "exponentialRampToValueAtTime",
                            "type": "AudioParam",
                            "param": [
                                {
                                    "name": "value",
                                    "type": "float"
                                },
                                {
                                    "name": "endTime",
                                    "type": "double"
                                }
                            ]
                        },
                        {
                            "name": "linearRampToValueAtTime",
                            "type": "AudioParam",
                            "param": [
                                {
                                    "name": "value",
                                    "type": "float"
                                },
                                {
                                    "name": "endTime",
                                    "type": "double"
                                }
                            ]
                        },
                        {
                            "name": "setTargetAtTime",
                            "type": "AudioParam",
                            "param": [
                                {
                                    "name": "target",
                                    "type": "float"
                                },
                                {
                                    "name": "startTime",
                                    "type": "double"
                                },
                                {
                                    "name": "timeConstant",
                                    "type": "double"
                                }
                            ]
                        },
                        {
                            "name": "setValueAtTime",
                            "type": "AudioParam",
                            "param": [
                                {
                                    "name": "value",
                                    "type": "float"
                                },
                                {
                                    "name": "startTime",
                                    "type": "double"
                                }
                            ]
                        },
                        {
                            "name": "setValueCurveAtTime",
                            "type": "AudioParam",
                            "param": [
                                {
                                    "name": "values",
                                    "type": "Float32Array"
                                },
                                {
                                    "name": "startTime",
                                    "type": "double"
                                },
                                {
                                    "name": "duration",
                                    "type": "double"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "defaultValue",
                            "read-only": "1",
                            "type": "float"
                        },
                        {
                            "name": "value",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "AudioProcessingEvent",
                "extends": "Event",
                "properties": {
                    "property": [
                        {
                            "name": "inputBuffer",
                            "read-only": "1",
                            "type": "AudioBuffer"
                        },
                        {
                            "name": "outputBuffer",
                            "read-only": "1",
                            "type": "AudioBuffer"
                        },
                        {
                            "name": "playbackTime",
                            "read-only": "1",
                            "type": "double"
                        }
                    ]
                }
            },
            {
                "name": "AudioTrack",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "enabled",
                            "type": "boolean"
                        },
                        {
                            "name": "id",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "kind",
                            "type": "DOMString"
                        },
                        {
                            "name": "label",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "language",
                            "type": "DOMString"
                        },
                        {
                            "name": "sourceBuffer",
                            "read-only": "1",
                            "type": "SourceBuffer"
                        }
                    ]
                }
            },
            {
                "name": "AudioTrackList",
                "extends": "EventTarget",
                "events": {
                    "event": [
                        {
                            "name": "addtrack",
                            "dispatch": "async",
                            "skips-window": "1",
                            "type": "TrackEvent"
                        },
                        {
                            "name": "removetrack",
                            "dispatch": "async",
                            "skips-window": "1",
                            "type": "TrackEvent"
                        },
                        {
                            "name": "change",
                            "dispatch": "async",
                            "skips-window": "1",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "getTrackById",
                            "nullable": "1",
                            "type": "AudioTrack",
                            "param": [
                                {
                                    "name": "id",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "item",
                            "getter": "1",
                            "type": "AudioTrack",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "length",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "onaddtrack",
                            "event-handler": "addtrack",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onchange",
                            "event-handler": "change",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onremovetrack",
                            "event-handler": "removetrack",
                            "type": "EventHandler"
                        }
                    ]
                }
            },
            {
                "name": "BarProp",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "visible",
                            "read-only": "1",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "BeforeUnloadEvent",
                "extends": "Event",
                "properties": {
                    "property": [
                        {
                            "name": "returnValue",
                            "nullable": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "BiquadFilterNode",
                "extends": "AudioNode",
                "methods": {
                    "method": [
                        {
                            "name": "getFrequencyResponse",
                            "type": "void",
                            "param": [
                                {
                                    "name": "frequencyHz",
                                    "type": "Float32Array"
                                },
                                {
                                    "name": "magResponse",
                                    "type": "Float32Array"
                                },
                                {
                                    "name": "phaseResponse",
                                    "type": "Float32Array"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "detune",
                            "read-only": "1",
                            "type": "AudioParam"
                        },
                        {
                            "name": "frequency",
                            "read-only": "1",
                            "type": "AudioParam"
                        },
                        {
                            "name": "gain",
                            "read-only": "1",
                            "type": "AudioParam"
                        },
                        {
                            "name": "Q",
                            "read-only": "1",
                            "type": "AudioParam"
                        },
                        {
                            "name": "type",
                            "type": "BiquadFilterType"
                        }
                    ]
                }
            },
            {
                "name": "Blob",
                "extends": "Object",
                "constructor": {},
                "methods": {
                    "method": [
                        {
                            "name": "msClose",
                            "type": "void"
                        },
                        {
                            "name": "msDetachStream",
                            "type": "any"
                        },
                        {
                            "name": "slice",
                            "type": "Blob",
                            "param": [
                                {
                                    "name": "start",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "long long"
                                },
                                {
                                    "name": "end",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "long long"
                                },
                                {
                                    "name": "contentType",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "size",
                            "read-only": "1",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "type",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "Cache",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "add",
                            "new-object": "1",
                            "type": "Promise<void>",
                            "param": [
                                {
                                    "name": "request",
                                    "type": "RequestInfo"
                                }
                            ]
                        },
                        {
                            "name": "addAll",
                            "new-object": "1",
                            "type": "Promise<void>",
                            "param": [
                                {
                                    "name": "requests",
                                    "type": "sequence<RequestInfo>"
                                }
                            ]
                        },
                        {
                            "name": "delete",
                            "new-object": "1",
                            "type": "Promise<boolean>",
                            "param": [
                                {
                                    "name": "request",
                                    "type": "RequestInfo"
                                },
                                {
                                    "name": "options",
                                    "optional": "1",
                                    "type": "CacheQueryOptions"
                                }
                            ]
                        },
                        {
                            "name": "keys",
                            "new-object": "1",
                            "type": "Promise<sequence<Request>>",
                            "param": [
                                {
                                    "name": "request",
                                    "optional": "1",
                                    "type": "RequestInfo"
                                },
                                {
                                    "name": "options",
                                    "optional": "1",
                                    "type": "CacheQueryOptions"
                                }
                            ]
                        },
                        {
                            "name": "match",
                            "new-object": "1",
                            "type": "Promise<Response>",
                            "param": [
                                {
                                    "name": "request",
                                    "type": "RequestInfo"
                                },
                                {
                                    "name": "options",
                                    "optional": "1",
                                    "type": "CacheQueryOptions"
                                }
                            ]
                        },
                        {
                            "name": "matchAll",
                            "new-object": "1",
                            "type": "Promise<sequence<Response>>",
                            "param": [
                                {
                                    "name": "request",
                                    "optional": "1",
                                    "type": "RequestInfo"
                                },
                                {
                                    "name": "options",
                                    "optional": "1",
                                    "type": "CacheQueryOptions"
                                }
                            ]
                        },
                        {
                            "name": "put",
                            "new-object": "1",
                            "type": "Promise<void>",
                            "param": [
                                {
                                    "name": "request",
                                    "type": "RequestInfo"
                                },
                                {
                                    "name": "response",
                                    "type": "Response"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "CacheStorage",
                "extends": "Object",
                "secure-context": "1",
                "methods": {
                    "method": [
                        {
                            "name": "delete",
                            "new-object": "1",
                            "type": "Promise<boolean>",
                            "param": [
                                {
                                    "name": "cacheName",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "has",
                            "new-object": "1",
                            "type": "Promise<boolean>",
                            "param": [
                                {
                                    "name": "cacheName",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "keys",
                            "new-object": "1",
                            "type": "Promise<sequence<DOMString>>"
                        },
                        {
                            "name": "match",
                            "new-object": "1",
                            "type": "Promise<any>",
                            "param": [
                                {
                                    "name": "request",
                                    "type": "RequestInfo"
                                },
                                {
                                    "name": "options",
                                    "optional": "1",
                                    "type": "CacheQueryOptions"
                                }
                            ]
                        },
                        {
                            "name": "open",
                            "new-object": "1",
                            "type": "Promise<Cache>",
                            "param": [
                                {
                                    "name": "cacheName",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "CanvasGradient",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "addColorStop",
                            "type": "void",
                            "param": [
                                {
                                    "name": "offset",
                                    "type": "float"
                                },
                                {
                                    "name": "color",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "CanvasPattern",
                "extends": "Object"
            },
            {
                "name": "CanvasRenderingContext2D",
                "extends": "Object",
                "implements": [
                    "CanvasPathMethods"
                ],
                "methods": {
                    "method": [
                        {
                            "name": "beginPath",
                            "type": "void"
                        },
                        {
                            "name": "clearRect",
                            "type": "void",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                },
                                {
                                    "name": "w",
                                    "type": "float"
                                },
                                {
                                    "name": "h",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "clip",
                            "type": "void",
                            "param": [
                                {
                                    "name": "fillRule",
                                    "default": "\"nonzero\"",
                                    "optional": "1",
                                    "type": "CanvasFillRule"
                                }
                            ]
                        },
                        {
                            "name": "createImageData",
                            "type": "ImageData",
                            "param": [
                                {
                                    "name": "imageDataOrSw",
                                    "type": "(float or ImageData)"
                                },
                                {
                                    "name": "sh",
                                    "optional": "1",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "createLinearGradient",
                            "type": "CanvasGradient",
                            "param": [
                                {
                                    "name": "x0",
                                    "type": "float"
                                },
                                {
                                    "name": "y0",
                                    "type": "float"
                                },
                                {
                                    "name": "x1",
                                    "type": "float"
                                },
                                {
                                    "name": "y1",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "createPattern",
                            "type": "CanvasPattern",
                            "param": [
                                {
                                    "name": "image",
                                    "type": "(HTMLImageElement or HTMLCanvasElement or HTMLVideoElement)"
                                },
                                {
                                    "name": "repetition",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "createRadialGradient",
                            "type": "CanvasGradient",
                            "param": [
                                {
                                    "name": "x0",
                                    "type": "float"
                                },
                                {
                                    "name": "y0",
                                    "type": "float"
                                },
                                {
                                    "name": "r0",
                                    "type": "float"
                                },
                                {
                                    "name": "x1",
                                    "type": "float"
                                },
                                {
                                    "name": "y1",
                                    "type": "float"
                                },
                                {
                                    "name": "r1",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "drawFocusIfNeeded",
                            "type": "void",
                            "param": [
                                {
                                    "name": "element",
                                    "type": "Element"
                                }
                            ]
                        },
                        {
                            "name": "drawImage",
                            "type": "void",
                            "param": [
                                {
                                    "name": "image",
                                    "type": "(HTMLImageElement or HTMLCanvasElement or HTMLVideoElement)"
                                },
                                {
                                    "name": "offsetX",
                                    "type": "float"
                                },
                                {
                                    "name": "offsetY",
                                    "type": "float"
                                },
                                {
                                    "name": "width",
                                    "optional": "1",
                                    "type": "float"
                                },
                                {
                                    "name": "height",
                                    "optional": "1",
                                    "type": "float"
                                },
                                {
                                    "name": "canvasOffsetX",
                                    "optional": "1",
                                    "type": "float"
                                },
                                {
                                    "name": "canvasOffsetY",
                                    "optional": "1",
                                    "type": "float"
                                },
                                {
                                    "name": "canvasImageWidth",
                                    "optional": "1",
                                    "type": "float"
                                },
                                {
                                    "name": "canvasImageHeight",
                                    "optional": "1",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "fill",
                            "type": "void",
                            "param": [
                                {
                                    "name": "fillRule",
                                    "default": "\"nonzero\"",
                                    "optional": "1",
                                    "type": "CanvasFillRule"
                                }
                            ]
                        },
                        {
                            "name": "fillRect",
                            "type": "void",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                },
                                {
                                    "name": "w",
                                    "type": "float"
                                },
                                {
                                    "name": "h",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "fillText",
                            "type": "void",
                            "param": [
                                {
                                    "name": "text",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                },
                                {
                                    "name": "maxWidth",
                                    "optional": "1",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "getImageData",
                            "type": "ImageData",
                            "param": [
                                {
                                    "name": "sx",
                                    "type": "float"
                                },
                                {
                                    "name": "sy",
                                    "type": "float"
                                },
                                {
                                    "name": "sw",
                                    "type": "float"
                                },
                                {
                                    "name": "sh",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "getLineDash",
                            "type": "sequence<UnrestrictedDouble>"
                        },
                        {
                            "name": "isPointInPath",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                },
                                {
                                    "name": "fillRule",
                                    "default": "\"nonzero\"",
                                    "optional": "1",
                                    "type": "CanvasFillRule"
                                }
                            ]
                        },
                        {
                            "name": "measureText",
                            "type": "TextMetrics",
                            "param": [
                                {
                                    "name": "text",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "putImageData",
                            "type": "void",
                            "param": [
                                {
                                    "name": "imagedata",
                                    "type": "ImageData"
                                },
                                {
                                    "name": "dx",
                                    "type": "float"
                                },
                                {
                                    "name": "dy",
                                    "type": "float"
                                },
                                {
                                    "name": "dirtyX",
                                    "optional": "1",
                                    "type": "float"
                                },
                                {
                                    "name": "dirtyY",
                                    "optional": "1",
                                    "type": "float"
                                },
                                {
                                    "name": "dirtyWidth",
                                    "optional": "1",
                                    "type": "float"
                                },
                                {
                                    "name": "dirtyHeight",
                                    "optional": "1",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "restore",
                            "type": "void"
                        },
                        {
                            "name": "rotate",
                            "type": "void",
                            "param": [
                                {
                                    "name": "angle",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "save",
                            "type": "void"
                        },
                        {
                            "name": "scale",
                            "type": "void",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "setLineDash",
                            "type": "void",
                            "param": [
                                {
                                    "name": "segments",
                                    "type": "sequence<UnrestrictedDouble>"
                                }
                            ]
                        },
                        {
                            "name": "setTransform",
                            "type": "void",
                            "param": [
                                {
                                    "name": "m11",
                                    "type": "float"
                                },
                                {
                                    "name": "m12",
                                    "type": "float"
                                },
                                {
                                    "name": "m21",
                                    "type": "float"
                                },
                                {
                                    "name": "m22",
                                    "type": "float"
                                },
                                {
                                    "name": "dx",
                                    "type": "float"
                                },
                                {
                                    "name": "dy",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "stroke",
                            "type": "void",
                            "param": [
                                {
                                    "name": "path",
                                    "optional": "1",
                                    "type": "Path2D"
                                }
                            ]
                        },
                        {
                            "name": "strokeRect",
                            "type": "void",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                },
                                {
                                    "name": "w",
                                    "type": "float"
                                },
                                {
                                    "name": "h",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "strokeText",
                            "type": "void",
                            "param": [
                                {
                                    "name": "text",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                },
                                {
                                    "name": "maxWidth",
                                    "optional": "1",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "transform",
                            "type": "void",
                            "param": [
                                {
                                    "name": "m11",
                                    "type": "float"
                                },
                                {
                                    "name": "m12",
                                    "type": "float"
                                },
                                {
                                    "name": "m21",
                                    "type": "float"
                                },
                                {
                                    "name": "m22",
                                    "type": "float"
                                },
                                {
                                    "name": "dx",
                                    "type": "float"
                                },
                                {
                                    "name": "dy",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "translate",
                            "type": "void",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "canvas",
                            "read-only": "1",
                            "type": "HTMLCanvasElement"
                        },
                        {
                            "name": "fillStyle",
                            "type": "any"
                        },
                        {
                            "name": "font",
                            "type": "DOMString"
                        },
                        {
                            "name": "globalAlpha",
                            "type": "float"
                        },
                        {
                            "name": "globalCompositeOperation",
                            "type": "DOMString"
                        },
                        {
                            "name": "imageSmoothingEnabled",
                            "type": "bool"
                        },
                        {
                            "name": "lineCap",
                            "type": "DOMString"
                        },
                        {
                            "name": "lineDashOffset",
                            "type": "UnrestrictedDouble"
                        },
                        {
                            "name": "lineJoin",
                            "type": "DOMString"
                        },
                        {
                            "name": "lineWidth",
                            "type": "float"
                        },
                        {
                            "name": "miterLimit",
                            "type": "float"
                        },
                        {
                            "name": "msFillRule",
                            "type": "CanvasFillRule"
                        },
                        {
                            "name": "shadowBlur",
                            "type": "float"
                        },
                        {
                            "name": "shadowColor",
                            "type": "DOMString"
                        },
                        {
                            "name": "shadowOffsetX",
                            "type": "float"
                        },
                        {
                            "name": "shadowOffsetY",
                            "type": "float"
                        },
                        {
                            "name": "strokeStyle",
                            "type": "any"
                        },
                        {
                            "name": "textAlign",
                            "type": "DOMString"
                        },
                        {
                            "name": "textBaseline",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "CDATASection",
                "extends": "Text"
            },
            {
                "name": "ChannelMergerNode",
                "extends": "AudioNode"
            },
            {
                "name": "ChannelSplitterNode",
                "extends": "AudioNode"
            },
            {
                "name": "CharacterData",
                "extends": "Node",
                "events": {
                    "event": [
                        {
                            "name": "DOMCharacterDataModified",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "type": "MutationEvent"
                        },
                        {
                            "name": "DOMSubtreeModified",
                            "bubbles": "1",
                            "dispatch": "async-and-combine",
                            "type": "MutationEvent"
                        }
                    ]
                },
                "implements": [
                    "ChildNode"
                ],
                "methods": {
                    "method": [
                        {
                            "name": "appendData",
                            "type": "void",
                            "param": [
                                {
                                    "name": "arg",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "deleteData",
                            "type": "void",
                            "param": [
                                {
                                    "name": "offset",
                                    "type": "unsigned long"
                                },
                                {
                                    "name": "count",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "insertData",
                            "type": "void",
                            "param": [
                                {
                                    "name": "offset",
                                    "type": "unsigned long"
                                },
                                {
                                    "name": "arg",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "replaceData",
                            "type": "void",
                            "param": [
                                {
                                    "name": "offset",
                                    "type": "unsigned long"
                                },
                                {
                                    "name": "count",
                                    "type": "unsigned long"
                                },
                                {
                                    "name": "arg",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "substringData",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "offset",
                                    "type": "unsigned long"
                                },
                                {
                                    "name": "count",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "data",
                            "type": "DOMString"
                        },
                        {
                            "name": "length",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "ClientRect",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "bottom",
                            "type": "long"
                        },
                        {
                            "name": "height",
                            "read-only": "1",
                            "type": "float"
                        },
                        {
                            "name": "left",
                            "type": "long"
                        },
                        {
                            "name": "right",
                            "type": "long"
                        },
                        {
                            "name": "top",
                            "type": "long"
                        },
                        {
                            "name": "width",
                            "read-only": "1",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "ClientRectList",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "item",
                            "getter": "1",
                            "type": "ClientRect",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "length",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "ClipboardEvent",
                "extends": "Event",
                "properties": {
                    "property": [
                        {
                            "name": "clipboardData",
                            "read-only": "1",
                            "type": "DataTransfer"
                        }
                    ]
                }
            },
            {
                "name": "CloseEvent",
                "extends": "Event",
                "constructor": {
                    "param": [
                        {
                            "name": "typeArg",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "optional": "1",
                            "type": "CloseEventInit"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "initCloseEvent",
                            "type": "void",
                            "param": [
                                {
                                    "name": "typeArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "canBubbleArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "cancelableArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "wasCleanArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "codeArg",
                                    "type": "unsigned short"
                                },
                                {
                                    "name": "reasonArg",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "code",
                            "read-only": "1",
                            "type": "unsigned short"
                        },
                        {
                            "name": "reason",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "wasClean",
                            "read-only": "1",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "Comment",
                "extends": "CharacterData",
                "properties": {
                    "property": [
                        {
                            "name": "text",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "CompositionEvent",
                "extends": "UIEvent",
                "constructor": {
                    "param": [
                        {
                            "name": "typeArg",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "optional": "1",
                            "type": "CompositionEventInit"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "initCompositionEvent",
                            "type": "void",
                            "param": [
                                {
                                    "name": "typeArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "canBubbleArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "cancelableArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "viewArg",
                                    "type": "Window"
                                },
                                {
                                    "name": "dataArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "locale",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "data",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "locale",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "Console",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "assert",
                            "type": "void",
                            "param": [
                                {
                                    "name": "test",
                                    "optional": "1",
                                    "type": "boolean"
                                },
                                {
                                    "name": "message",
                                    "optional": "1",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "optionalParams",
                                    "type": "any",
                                    "variadic": "1"
                                }
                            ]
                        },
                        {
                            "name": "clear",
                            "type": "void"
                        },
                        {
                            "name": "count",
                            "type": "void",
                            "param": [
                                {
                                    "name": "countTitle",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "debug",
                            "type": "void",
                            "param": [
                                {
                                    "name": "message",
                                    "optional": "1",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "optionalParams",
                                    "type": "any",
                                    "variadic": "1"
                                }
                            ]
                        },
                        {
                            "name": "dir",
                            "type": "void",
                            "param": [
                                {
                                    "name": "value",
                                    "optional": "1",
                                    "type": "any"
                                },
                                {
                                    "name": "optionalParams",
                                    "type": "any",
                                    "variadic": "1"
                                }
                            ]
                        },
                        {
                            "name": "dirxml",
                            "type": "void",
                            "param": [
                                {
                                    "name": "value",
                                    "type": "any"
                                }
                            ]
                        },
                        {
                            "name": "error",
                            "type": "void",
                            "param": [
                                {
                                    "name": "message",
                                    "optional": "1",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "optionalParams",
                                    "type": "any",
                                    "variadic": "1"
                                }
                            ]
                        },
                        {
                            "name": "exception",
                            "type": "void",
                            "param": [
                                {
                                    "name": "message",
                                    "optional": "1",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "optionalParams",
                                    "type": "any",
                                    "variadic": "1"
                                }
                            ]
                        },
                        {
                            "name": "group",
                            "type": "void",
                            "param": [
                                {
                                    "name": "groupTitle",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "groupCollapsed",
                            "type": "void",
                            "param": [
                                {
                                    "name": "groupTitle",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "groupEnd",
                            "type": "void"
                        },
                        {
                            "name": "info",
                            "type": "void",
                            "param": [
                                {
                                    "name": "message",
                                    "optional": "1",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "optionalParams",
                                    "type": "any",
                                    "variadic": "1"
                                }
                            ]
                        },
                        {
                            "name": "log",
                            "type": "void",
                            "param": [
                                {
                                    "name": "message",
                                    "optional": "1",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "optionalParams",
                                    "type": "any",
                                    "variadic": "1"
                                }
                            ]
                        },
                        {
                            "name": "msIsIndependentlyComposed",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "element",
                                    "type": "Element"
                                }
                            ]
                        },
                        {
                            "name": "profile",
                            "type": "void",
                            "param": [
                                {
                                    "name": "reportName",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "profileEnd",
                            "type": "void"
                        },
                        {
                            "name": "select",
                            "type": "void",
                            "param": [
                                {
                                    "name": "element",
                                    "type": "Element"
                                }
                            ]
                        },
                        {
                            "name": "table",
                            "type": "void",
                            "param": [
                                {
                                    "name": "data",
                                    "type": "any",
                                    "variadic": "1"
                                }
                            ]
                        },
                        {
                            "name": "time",
                            "type": "void",
                            "param": [
                                {
                                    "name": "timerName",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "timeEnd",
                            "type": "void",
                            "param": [
                                {
                                    "name": "timerName",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "trace",
                            "type": "void"
                        },
                        {
                            "name": "warn",
                            "type": "void",
                            "param": [
                                {
                                    "name": "message",
                                    "optional": "1",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "optionalParams",
                                    "type": "any",
                                    "variadic": "1"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "ConvolverNode",
                "extends": "AudioNode",
                "properties": {
                    "property": [
                        {
                            "name": "buffer",
                            "nullable": "1",
                            "type": "AudioBuffer"
                        },
                        {
                            "name": "normalize",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "Coordinates",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "accuracy",
                            "read-only": "1",
                            "type": "double"
                        },
                        {
                            "name": "altitude",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "double"
                        },
                        {
                            "name": "altitudeAccuracy",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "double"
                        },
                        {
                            "name": "heading",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "double"
                        },
                        {
                            "name": "latitude",
                            "read-only": "1",
                            "type": "double"
                        },
                        {
                            "name": "longitude",
                            "read-only": "1",
                            "type": "double"
                        },
                        {
                            "name": "speed",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "double"
                        }
                    ]
                }
            },
            {
                "name": "Crypto",
                "extends": "Object",
                "implements": [
                    "RandomSource"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "subtle",
                            "read-only": "1",
                            "type": "SubtleCrypto"
                        }
                    ]
                }
            },
            {
                "name": "CryptoKey",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "algorithm",
                            "read-only": "1",
                            "type": "KeyAlgorithm"
                        },
                        {
                            "name": "extractable",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "type",
                            "read-only": "1",
                            "type": "DOMString",
                            "type-original": "KeyType"
                        },
                        {
                            "name": "usages",
                            "read-only": "1",
                            "type": "sequence<DOMString>"
                        }
                    ]
                }
            },
            {
                "name": "CryptoKeyPair",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "privateKey",
                            "type": "CryptoKey"
                        },
                        {
                            "name": "publicKey",
                            "type": "CryptoKey"
                        }
                    ]
                }
            },
            {
                "name": "CSS",
                "extends": "Object",
                "static": "1",
                "methods": {
                    "method": [
                        {
                            "name": "supports",
                            "static": "1",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "property",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "value",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "CSSConditionRule",
                "extends": "CSSGroupingRule",
                "properties": {
                    "property": [
                        {
                            "name": "conditionText",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "CSSFontFaceRule",
                "extends": "CSSRule",
                "properties": {
                    "property": [
                        {
                            "name": "style",
                            "read-only": "1",
                            "type": "CSSStyleDeclaration"
                        }
                    ]
                }
            },
            {
                "name": "CSSGroupingRule",
                "extends": "CSSRule",
                "methods": {
                    "method": [
                        {
                            "name": "deleteRule",
                            "type": "void",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "insertRule",
                            "type": "unsigned long",
                            "param": [
                                {
                                    "name": "rule",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "cssRules",
                            "read-only": "1",
                            "type": "CSSRuleList"
                        }
                    ]
                }
            },
            {
                "name": "CSSImportRule",
                "extends": "CSSRule",
                "properties": {
                    "property": [
                        {
                            "name": "href",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "media",
                            "put-forwards": "mediaText",
                            "read-only": "1",
                            "type": "MediaList"
                        },
                        {
                            "name": "styleSheet",
                            "read-only": "1",
                            "type": "CSSStyleSheet"
                        }
                    ]
                }
            },
            {
                "name": "CSSKeyframeRule",
                "extends": "CSSRule",
                "properties": {
                    "property": [
                        {
                            "name": "keyText",
                            "type": "DOMString"
                        },
                        {
                            "name": "style",
                            "read-only": "1",
                            "type": "CSSStyleDeclaration"
                        }
                    ]
                }
            },
            {
                "name": "CSSKeyframesRule",
                "extends": "CSSRule",
                "methods": {
                    "method": [
                        {
                            "name": "appendRule",
                            "type": "void",
                            "param": [
                                {
                                    "name": "rule",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "deleteRule",
                            "type": "void",
                            "param": [
                                {
                                    "name": "rule",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "findRule",
                            "type": "CSSKeyframeRule",
                            "param": [
                                {
                                    "name": "rule",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "cssRules",
                            "read-only": "1",
                            "type": "CSSRuleList"
                        },
                        {
                            "name": "name",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "CSSMediaRule",
                "extends": "CSSConditionRule",
                "properties": {
                    "property": [
                        {
                            "name": "media",
                            "put-forwards": "mediaText",
                            "read-only": "1",
                            "type": "MediaList"
                        }
                    ]
                }
            },
            {
                "name": "CSSNamespaceRule",
                "extends": "CSSRule",
                "properties": {
                    "property": [
                        {
                            "name": "namespaceURI",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "prefix",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "CSSPageRule",
                "extends": "CSSRule",
                "properties": {
                    "property": [
                        {
                            "name": "pseudoClass",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "selector",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "selectorText",
                            "type": "DOMString"
                        },
                        {
                            "name": "style",
                            "read-only": "1",
                            "type": "CSSStyleDeclaration"
                        }
                    ]
                }
            },
            {
                "name": "CSSRule",
                "extends": "Object",
                "constants": {
                    "constant": [
                        {
                            "name": "CHARSET_RULE",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "FONT_FACE_RULE",
                            "type": "unsigned short",
                            "value": [
                                "5"
                            ]
                        },
                        {
                            "name": "IMPORT_RULE",
                            "type": "unsigned short",
                            "value": [
                                "3"
                            ]
                        },
                        {
                            "name": "KEYFRAME_RULE",
                            "type": "unsigned short",
                            "value": [
                                "8"
                            ]
                        },
                        {
                            "name": "KEYFRAMES_RULE",
                            "type": "unsigned short",
                            "value": [
                                "7"
                            ]
                        },
                        {
                            "name": "MEDIA_RULE",
                            "type": "unsigned short",
                            "value": [
                                "4"
                            ]
                        },
                        {
                            "name": "NAMESPACE_RULE",
                            "type": "unsigned short",
                            "value": [
                                "10"
                            ]
                        },
                        {
                            "name": "PAGE_RULE",
                            "type": "unsigned short",
                            "value": [
                                "6"
                            ]
                        },
                        {
                            "name": "STYLE_RULE",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "SUPPORTS_RULE",
                            "type": "unsigned short",
                            "value": [
                                "12"
                            ]
                        },
                        {
                            "name": "UNKNOWN_RULE",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        },
                        {
                            "name": "VIEWPORT_RULE",
                            "type": "unsigned short",
                            "value": [
                                "15"
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "cssText",
                            "type": "DOMString"
                        },
                        {
                            "name": "parentRule",
                            "read-only": "1",
                            "type": "CSSRule"
                        },
                        {
                            "name": "parentStyleSheet",
                            "read-only": "1",
                            "type": "CSSStyleSheet"
                        },
                        {
                            "name": "type",
                            "read-only": "1",
                            "type": "unsigned short"
                        }
                    ]
                }
            },
            {
                "name": "CSSRuleList",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "item",
                            "getter": "1",
                            "type": "CSSRule",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "length",
                            "read-only": "1",
                            "type": "long"
                        }
                    ]
                }
            },
            {
                "name": "CSSStyleDeclaration",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "getPropertyPriority",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "propertyName",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "getPropertyValue",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "propertyName",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "item",
                            "getter": "1",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "removeProperty",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "propertyName",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "setProperty",
                            "type": "void",
                            "param": [
                                {
                                    "name": "propertyName",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "value",
                                    "nullable": "1",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "priority",
                                    "nullable": "1",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "alignContent",
                            "css-property": "align-content",
                            "css-property-enum-values": "stretch flex-start flex-end center space-between space-around inherit initial",
                            "css-property-initial": "stretch",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "alignItems",
                            "css-property": "align-items",
                            "css-property-enum-values": "stretch flex-start flex-end center baseline inherit initial",
                            "css-property-initial": "stretch",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "alignmentBaseline",
                            "css-property": "alignment-baseline",
                            "css-property-enum-values": "auto baseline before-edge text-before-edge middle central after-edge text-after-edge ideographic alphabetic hanging mathematical inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "alignSelf",
                            "css-property": "align-self",
                            "css-property-enum-values": "auto flex-start flex-end center baseline stretch inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "animation",
                            "css-property": "animation",
                            "css-property-enum-values": "inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "animation-duration animation-timing-function animation-delay animation-iteration-count animation-direction animation-fill-mode animation-play-state animation-name",
                            "css-property-value-syntax": "css_animation",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "animationDelay",
                            "css-property": "animation-delay",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "comma_separated_css_times",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "animationDirection",
                            "css-property": "animation-direction",
                            "css-property-enum-values": "normal reverse alternate alternate-reverse inherit initial",
                            "css-property-initial": "normal",
                            "css-property-value-syntax": "comma_separated_enums",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "animationDuration",
                            "css-property": "animation-duration",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "comma_separated_css_times",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "animationFillMode",
                            "css-property": "animation-fill-mode",
                            "css-property-enum-values": "none forwards backwards both inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "comma_separated_enums",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "animationIterationCount",
                            "css-property": "animation-iteration-count",
                            "css-property-enum-values": "infinite inherit initial",
                            "css-property-initial": "1",
                            "css-property-value-syntax": "comma_separated_non_negative_integer",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "animationName",
                            "css-property": "animation-name",
                            "css-property-enum-values": "none inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "comma_separated_keyframes_refs",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "animationPlayState",
                            "css-property": "animation-play-state",
                            "css-property-enum-values": "running paused inherit initial",
                            "css-property-initial": "running",
                            "css-property-value-syntax": "comma_separated_enums",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "animationTimingFunction",
                            "css-property": "animation-timing-function",
                            "css-property-enum-values": "step-start step-end ease ease-in ease-out ease-in-out linear inherit initial",
                            "css-property-initial": "ease",
                            "css-property-value-syntax": "comma_separated_css_timing_functions",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "backfaceVisibility",
                            "css-property": "backface-visibility",
                            "css-property-enum-values": "visible hidden inherit initial",
                            "css-property-initial": "visible",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "background",
                            "css-property": "background",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "none left center right top bottom scroll fixed local repeat-x repeat-y repeat space round no-repeat inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "background-attachment background-clip background-color background-image background-origin background-position background-repeat background-size",
                            "css-property-value-syntax": "css_background",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "backgroundAttachment",
                            "css-property": "background-attachment",
                            "css-property-enum-values": "scroll fixed local inherit initial",
                            "css-property-initial": "scroll",
                            "css-property-value-syntax": "comma_separated_enums",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "backgroundClip",
                            "css-property": "background-clip",
                            "css-property-enum-values": "border-box padding-box content-box inherit initial",
                            "css-property-initial": "border-box",
                            "css-property-value-syntax": "comma_separated_enums",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "backgroundColor",
                            "css-property": "background-color",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "transparent",
                            "css-property-value-syntax": "css_color",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "backgroundImage",
                            "css-property": "background-image",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "none inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "comma_separated_css_urls",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "backgroundOrigin",
                            "css-property": "background-origin",
                            "css-property-enum-values": "border-box padding-box content-box inherit initial",
                            "css-property-initial": "padding-box",
                            "css-property-value-syntax": "comma_separated_enums",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "backgroundPosition",
                            "css-property": "background-position",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "left center right top bottom inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "background-position-x background-position-y",
                            "css-property-value-syntax": "comma_separated_0_to_2_css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "backgroundPositionX",
                            "css-property": "background-position-x",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "left center right inherit initial",
                            "css-property-initial": "0%",
                            "css-property-value-syntax": "css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "backgroundPositionY",
                            "css-property": "background-position-y",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "top center bottom inherit initial",
                            "css-property-initial": "0%",
                            "css-property-value-syntax": "css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "backgroundRepeat",
                            "css-property": "background-repeat",
                            "css-property-enum-values": "repeat-x repeat-y repeat space round no-repeat initial",
                            "css-property-initial": "repeat",
                            "css-property-value-syntax": "comma_separated_enums",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "backgroundSize",
                            "css-property": "background-size",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "auto cover contain inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "comma_separated_1_or_2_space_separated_css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "baselineShift",
                            "css-property": "baseline-shift",
                            "css-property-enum-values": "baseline sub super inherit initial",
                            "css-property-initial": "baseline",
                            "css-property-value-syntax": "css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "border",
                            "css-property": "border",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "none hidden dotted dashed solid double groove ridge inset outset thin medium thick inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "border-top border-right border-bottom border-left",
                            "css-property-value-syntax": "1_to_3_space_separated_of_css_length_css_color_and_enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderBottom",
                            "css-property": "border-bottom",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "none hidden dotted dashed solid double groove ridge inset outset thin medium thick inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "border-bottom-width border-bottom-style border-bottom-color",
                            "css-property-value-syntax": "1_to_3_space_separated_of_css_length_css_color_and_enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderBottomColor",
                            "css-property": "border-bottom-color",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "currentColor",
                            "css-property-value-syntax": "css_color",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderBottomLeftRadius",
                            "css-property": "border-bottom-left-radius",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "1_or_2_space_separated_css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderBottomRightRadius",
                            "css-property": "border-bottom-right-radius",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "1_or_2_space_separated_css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderBottomStyle",
                            "css-property": "border-bottom-style",
                            "css-property-enum-values": "none hidden dotted dashed solid double groove ridge inset outset inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderBottomWidth",
                            "css-property": "border-bottom-width",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "thin medium thick inherit initial",
                            "css-property-initial": "medium",
                            "css-property-value-syntax": "css_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderCollapse",
                            "css-property": "border-collapse",
                            "css-property-enum-values": "separate collapse inherit initial",
                            "css-property-initial": "separate",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderColor",
                            "css-property": "border-color",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "border-top-color border-right-color border-bottom-color border-left-color",
                            "css-property-value-syntax": "1_to_4_space_separated_css_color",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderImage",
                            "css-property": "border-image",
                            "css-property-enum-values": "none fill auto stretch repeat round space inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "border-image-source border-image-slice border-image-width border-image-outset border-image-repeat",
                            "css-property-value-syntax": "css_border_image",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderImageOutset",
                            "css-property": "border-image-outset",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "1_to_4_space_separated_css_length_or_non_negative_integer",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderImageRepeat",
                            "css-property": "border-image-repeat",
                            "css-property-enum-values": "stretch repeat round space inherit initial",
                            "css-property-initial": "stretch",
                            "css-property-value-syntax": "1_or_2_space_separated_enums",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderImageSlice",
                            "css-property": "border-image-slice",
                            "css-property-enum-values": "fill inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "1_to_4_space_separated_css_percentage_or_non_negative_integer",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderImageSource",
                            "css-property": "border-image-source",
                            "css-property-enum-values": "none inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "css_url",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderImageWidth",
                            "css-property": "border-image-width",
                            "css-property-enum-values": "auto inherit initial",
                            "css-property-initial": "1px",
                            "css-property-value-syntax": "1_to_4_space_separated_css_percentage_or_length_or_non_negative_integer",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderLeft",
                            "css-property": "border-left",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "none hidden dotted dashed solid double groove ridge inset outset thin medium thick inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "border-left-width border-left-style border-left-color",
                            "css-property-value-syntax": "1_to_3_space_separated_of_css_length_css_color_and_enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderLeftColor",
                            "css-property": "border-left-color",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "currentColor",
                            "css-property-value-syntax": "css_color",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderLeftStyle",
                            "css-property": "border-left-style",
                            "css-property-enum-values": "none hidden dotted dashed solid double groove ridge inset outset inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderLeftWidth",
                            "css-property": "border-left-width",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "thin medium thick inherit initial",
                            "css-property-initial": "medium",
                            "css-property-value-syntax": "css_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderRadius",
                            "css-property": "border-radius",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "border-top-left-radius border-top-right-radius border-bottom-right-radius border-bottom-left-radius",
                            "css-property-value-syntax": "0_or_1_slash_separated_1_to_4_css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderRight",
                            "css-property": "border-right",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "none hidden dotted dashed solid double groove ridge inset outset thin medium thick inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "border-right-width border-right-style border-right-color",
                            "css-property-value-syntax": "1_to_3_space_separated_of_css_length_css_color_and_enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderRightColor",
                            "css-property": "border-right-color",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "currentColor",
                            "css-property-value-syntax": "css_color",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderRightStyle",
                            "css-property": "border-right-style",
                            "css-property-enum-values": "none hidden dotted dashed solid double groove ridge inset outset inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderRightWidth",
                            "css-property": "border-right-width",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "thin medium thick inherit initial",
                            "css-property-initial": "medium",
                            "css-property-value-syntax": "css_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderSpacing",
                            "css-property": "border-spacing",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "1_or_2_space_separated_css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderStyle",
                            "css-property": "border-style",
                            "css-property-enum-values": "none hidden dotted dashed solid double groove ridge inset outset inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "border-top-style border-right-style border-bottom-style border-left-style",
                            "css-property-value-syntax": "1_to_4_space_separated_enums",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderTop",
                            "css-property": "border-top",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "none hidden dotted dashed solid double groove ridge inset outset thin medium thick inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "border-top-width border-top-style border-top-color",
                            "css-property-value-syntax": "1_to_3_space_separated_of_css_length_css_color_and_enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderTopColor",
                            "css-property": "border-top-color",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "currentColor",
                            "css-property-value-syntax": "css_color",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderTopLeftRadius",
                            "css-property": "border-top-left-radius",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "1_or_2_space_separated_css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderTopRightRadius",
                            "css-property": "border-top-right-radius",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "1_or_2_space_separated_css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderTopStyle",
                            "css-property": "border-top-style",
                            "css-property-enum-values": "none hidden dotted dashed solid double groove ridge inset outset inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderTopWidth",
                            "css-property": "border-top-width",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "thin medium thick inherit initial",
                            "css-property-initial": "medium",
                            "css-property-value-syntax": "css_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderWidth",
                            "css-property": "border-width",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "thin medium thick inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "border-top-width border-right-width border-bottom-width border-left-width",
                            "css-property-value-syntax": "1_to_4_space_separated_css_lengths",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "bottom",
                            "css-property": "bottom",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "auto inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "boxShadow",
                            "css-property": "box-shadow",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "none inset inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "comma_separated_2_or_4_css_lengths_with_optional_css_color",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "boxSizing",
                            "css-property": "box-sizing",
                            "css-property-enum-values": "content-box border-box inherit initial",
                            "css-property-initial": "content-box",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "breakAfter",
                            "css-property": "break-after",
                            "css-property-enum-values": "auto always avoid left right page column avoid-page avoid-column inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "breakBefore",
                            "css-property": "break-before",
                            "css-property-enum-values": "auto always avoid left right page column avoid-page avoid-column inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "breakInside",
                            "css-property": "break-inside",
                            "css-property-enum-values": "auto avoid avoid-page avoid-column inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "captionSide",
                            "css-property": "caption-side",
                            "css-property-enum-values": "top bottom left right inherit initial",
                            "css-property-initial": "top",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "clear",
                            "css-property": "clear",
                            "css-property-enum-values": "none left right both inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "clip",
                            "css-property": "clip",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "auto inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "css_shape_rect",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "clipPath",
                            "css-property": "clip-path",
                            "css-property-enum-values": "none inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "css_url_of_local_id_ref",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "clipRule",
                            "css-property": "clip-rule",
                            "css-property-enum-values": "nonzero evenodd inherit initial",
                            "css-property-initial": "nonzero",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "color",
                            "css-property": "color",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "black",
                            "css-property-value-syntax": "css_color",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "colorInterpolationFilters",
                            "css-property": "color-interpolation-filters",
                            "css-property-enum-values": "linearRGB auto sRGB inherit initial",
                            "css-property-initial": "linearRGB",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "columnCount",
                            "css-property": "column-count",
                            "css-property-enum-values": "auto inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "css_length",
                            "type": "any"
                        },
                        {
                            "name": "columnFill",
                            "css-property": "column-fill",
                            "css-property-enum-values": "auto balance inherit initial",
                            "css-property-initial": "balance",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "columnGap",
                            "css-property": "column-gap",
                            "css-property-enum-values": "normal inherit initial",
                            "css-property-initial": "normal",
                            "css-property-value-syntax": "css_length",
                            "type": "any"
                        },
                        {
                            "name": "columnRule",
                            "css-property": "column-rule",
                            "css-property-enum-values": "transparent thin medium thick inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "column-rule-width column-rule-style column-rule-color",
                            "css-property-value-syntax": "1_to_3_space_separated_of_css_length_css_color_and_enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "columnRuleColor",
                            "css-property": "column-rule-color",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "currentColor",
                            "css-property-value-syntax": "css_color",
                            "type": "any"
                        },
                        {
                            "name": "columnRuleStyle",
                            "css-property": "column-rule-style",
                            "css-property-enum-values": "none hidden dotted dashed solid double groove ridge inset outset inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "columnRuleWidth",
                            "css-property": "column-rule-width",
                            "css-property-enum-values": "thin medium thick inherit initial",
                            "css-property-initial": "medium",
                            "css-property-value-syntax": "css_length",
                            "type": "any"
                        },
                        {
                            "name": "columns",
                            "css-property": "columns",
                            "css-property-enum-values": "auto inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "column-width column-count",
                            "css-property-value-syntax": "1_or_2_space_separated_css_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "columnSpan",
                            "css-property": "column-span",
                            "css-property-enum-values": "none all inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "columnWidth",
                            "css-property": "column-width",
                            "css-property-enum-values": "auto inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "css_length",
                            "type": "any"
                        },
                        {
                            "name": "content",
                            "css-property": "content",
                            "css-property-enum-values": "normal none inherit initial",
                            "css-property-initial": "normal",
                            "css-property-value-syntax": "css_content",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "counterIncrement",
                            "css-property": "counter-increment",
                            "css-property-enum-values": "none inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "space_separated_token_and_optional_signed_integer",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "counterReset",
                            "css-property": "counter-reset",
                            "css-property-enum-values": "none inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "space_separated_token_and_optional_signed_integer",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "cssFloat",
                            "css-property": "float",
                            "css-property-enum-values": "left right none inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "cssText",
                            "type": "DOMString"
                        },
                        {
                            "name": "cursor",
                            "css-property": "cursor",
                            "css-property-enum-values": "auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "comma_separated_css_url_with_optional_x_y_offset_followed_by_enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "direction",
                            "css-property": "direction",
                            "css-property-enum-values": "ltr rtl inherit initial",
                            "css-property-initial": "ltr",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "display",
                            "css-property": "display",
                            "css-property-enum-values": "inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit initial",
                            "css-property-initial": "inline",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "dominantBaseline",
                            "css-property": "dominant-baseline",
                            "css-property-enum-values": "auto use-script no-change reset-size ideographic alphabetic hanging mathematical central middle text-after-edge text-before-edge inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "emptyCells",
                            "css-property": "empty-cells",
                            "css-property-enum-values": "show hide inherit initial",
                            "css-property-initial": "show",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "enableBackground",
                            "css-property": "enable-background",
                            "css-property-enum-values": "accumulate inherit initial",
                            "css-property-initial": "accumulate",
                            "css-property-value-syntax": "svg_enum_new_followed_by_svg_viewbox",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "fill",
                            "css-property": "fill",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "none currentColor inherit initial",
                            "css-property-initial": "black",
                            "css-property-value-syntax": "svg_paint_or_css_color",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "fillOpacity",
                            "css-property": "fill-opacity",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "1",
                            "css-property-value-syntax": "0_to_1_floating_point_number",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "fillRule",
                            "css-property": "fill-rule",
                            "css-property-enum-values": "nonzero evenodd inherit initial",
                            "css-property-initial": "nonzero",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "filter",
                            "css-property": "filter",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "space_separated_filter_functions",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "flex",
                            "css-property": "flex",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "auto content none inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "flex-grow flex-shrink flex-basis",
                            "css-property-value-syntax": "css_flex",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "flexBasis",
                            "css-property": "flex-basis",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "auto content inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "flexDirection",
                            "css-property": "flex-direction",
                            "css-property-enum-values": "row row-reverse column column-reverse inherit initial",
                            "css-property-initial": "row",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "flexFlow",
                            "css-property": "flex-flow",
                            "css-property-enum-values": "row row-reverse column column-reverse nowrap wrap wrap-reverse inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "flex-direction flex-wrap",
                            "css-property-value-syntax": "1_or_2_space_separated_enums",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "flexGrow",
                            "css-property": "flex-grow",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "1_or_greater_integer",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "flexShrink",
                            "css-property": "flex-shrink",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "1",
                            "css-property-value-syntax": "1_or_greater_integer",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "flexWrap",
                            "css-property": "flex-wrap",
                            "css-property-enum-values": "nowrap wrap wrap-reverse inherit initial",
                            "css-property-initial": "nowrap",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "floodColor",
                            "css-property": "flood-color",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "currentColor inherit initial",
                            "css-property-initial": "black",
                            "css-property-value-syntax": "css_color",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "floodOpacity",
                            "css-property": "flood-opacity",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "1",
                            "css-property-value-syntax": "0_to_1_floating_point_number",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "font",
                            "css-property": "font",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "caption icon menu message-box small-caption status-bar inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "font-style font-variant font-weight font-stretch font-size line-height font-family",
                            "css-property-value-syntax": "css_font",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "fontFamily",
                            "css-property": "font-family",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "serif",
                            "css-property-value-syntax": "comma_separated_css_font_family_followed_by_generic_family",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "fontFeatureSettings",
                            "css-property": "font-feature-settings",
                            "css-property-enum-values": "normal inherit initial",
                            "css-property-initial": "normal",
                            "css-property-value-syntax": "comma_separated_font_feature_tag",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "fontSize",
                            "css-property": "font-size",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "smaller larger xx-small x-small small medium large x-large xx-large inherit initial",
                            "css-property-initial": "medium",
                            "css-property-value-syntax": "css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "fontSizeAdjust",
                            "css-property": "font-size-adjust",
                            "css-property-enum-values": "none inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "floating_point_number",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "fontStretch",
                            "css-property": "font-stretch",
                            "css-property-enum-values": "normal wider narrower ultra-condensed extra-condensed condensed semi-condensed semi-expanded expanded extra-expanded ultra-expanded inherit initial",
                            "css-property-initial": "normal",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "fontStyle",
                            "css-property": "font-style",
                            "css-property-enum-values": "normal italic oblique inherit initial",
                            "css-property-initial": "normal",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "fontVariant",
                            "css-property": "font-variant",
                            "css-property-enum-values": "normal small-caps inherit initial",
                            "css-property-initial": "normal",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "fontWeight",
                            "css-property": "font-weight",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "normal bold bolder lighter 100 200 300 400 500 600 700 800 900 inherit initial",
                            "css-property-initial": "normal",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "glyphOrientationHorizontal",
                            "css-property": "glyph-orientation-horizontal",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "css_angle",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "glyphOrientationVertical",
                            "css-property": "glyph-orientation-vertical",
                            "css-property-enum-values": "auto inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "css_angle",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "height",
                            "css-property": "height",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "auto inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "imeMode",
                            "css-property": "ime-mode",
                            "css-property-enum-values": "auto active inactive disabled initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "justifyContent",
                            "css-property": "justify-content",
                            "css-property-enum-values": "flex-start flex-end center space-between space-around inherit initial",
                            "css-property-initial": "flex-start",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "kerning",
                            "css-property": "kerning",
                            "css-property-enum-values": "auto inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "css_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "layoutGrid",
                            "css-property": "layout-grid",
                            "css-property-enum-values": "none auto line char both loose strict fixed inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "layout-grid-mode layout-grid-type layout-grid-line layout-grid-char",
                            "css-property-value-syntax": "css_layout_grid",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "layoutGridChar",
                            "css-property": "layout-grid-char",
                            "css-property-enum-values": "none auto inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "layoutGridLine",
                            "css-property": "layout-grid-line",
                            "css-property-enum-values": "none auto inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "layoutGridMode",
                            "css-property": "layout-grid-mode",
                            "css-property-enum-values": "none line char both inherit initial",
                            "css-property-initial": "both",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "layoutGridType",
                            "css-property": "layout-grid-type",
                            "css-property-enum-values": "loose strict fixed inherit initial",
                            "css-property-initial": "loose",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "left",
                            "css-property": "left",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "auto inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "length",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "letterSpacing",
                            "css-property": "letter-spacing",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "normal inherit initial",
                            "css-property-initial": "normal",
                            "css-property-value-syntax": "css_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "lightingColor",
                            "css-property": "lighting-color",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "currentColor inherit initial",
                            "css-property-initial": "white",
                            "css-property-value-syntax": "css_color",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "lineBreak",
                            "css-property": "line-break",
                            "css-property-enum-values": "normal strict inherit initial",
                            "css-property-initial": "normal",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "lineHeight",
                            "css-property": "line-height",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "normal",
                            "css-property-value-syntax": "css_percentage_or_length_or_floating_point_number",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "listStyle",
                            "css-property": "list-style",
                            "css-property-enum-values": "none inside outside disc circle square decimal decimal-leading-zero lower-roman upper-roman lower-greek lower-latin upper-latin armenian georgian lower-alpha upper-alpha none inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "list-style-type list-style-position list-style-image",
                            "css-property-value-syntax": "css_list_style",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "listStyleImage",
                            "css-property": "list-style-image",
                            "css-property-enum-values": "none inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "css_url",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "listStylePosition",
                            "css-property": "list-style-position",
                            "css-property-enum-values": "inside outside inherit initial",
                            "css-property-initial": "outside",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "listStyleType",
                            "css-property": "list-style-type",
                            "css-property-enum-values": "disc circle square decimal decimal-leading-zero lower-roman upper-roman lower-greek lower-latin upper-latin armenian georgian lower-alpha upper-alpha none inherit initial",
                            "css-property-initial": "disc",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "margin",
                            "css-property": "margin",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "auto inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "margin-top margin-right margin-bottom margin-left",
                            "css-property-value-syntax": "1_to_4_space_separated_css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "marginBottom",
                            "css-property": "margin-bottom",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "auto inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "marginLeft",
                            "css-property": "margin-left",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "auto inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "marginRight",
                            "css-property": "margin-right",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "auto inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "marginTop",
                            "css-property": "margin-top",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "auto inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "marker",
                            "css-property": "marker",
                            "css-property-enum-values": "none inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "marker-start marker-mid marker-end",
                            "css-property-value-syntax": "css_url_of_local_id_ref",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "markerEnd",
                            "css-property": "marker-end",
                            "css-property-enum-values": "none inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "css_url_of_local_id_ref",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "markerMid",
                            "css-property": "marker-mid",
                            "css-property-enum-values": "none inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "css_url_of_local_id_ref",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "markerStart",
                            "css-property": "marker-start",
                            "css-property-enum-values": "none inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "css_url_of_local_id_ref",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "mask",
                            "css-property": "mask",
                            "css-property-enum-values": "none inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "css_url_of_local_id_ref",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "maxHeight",
                            "css-property": "max-height",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "none inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "maxWidth",
                            "css-property": "max-width",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "none inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "minHeight",
                            "css-property": "min-height",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "none inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "minWidth",
                            "css-property": "min-width",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "none inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "msContentZoomChaining",
                            "css-property": "-ms-content-zoom-chaining",
                            "css-property-enum-values": "none chained inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "msContentZooming",
                            "css-property": "-ms-content-zooming",
                            "css-property-enum-values": "none zoom inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "msContentZoomLimit",
                            "css-property": "-ms-content-zoom-limit",
                            "css-property-enum-values": "inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "-ms-content-zoom-limit-min -ms-content-zoom-limit-max",
                            "css-property-value-syntax": "1_or_2_space_separated_css_percentage",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "msContentZoomLimitMax",
                            "css-property": "-ms-content-zoom-limit-max",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "400%",
                            "css-property-value-syntax": "css_percentage",
                            "type": "any"
                        },
                        {
                            "name": "msContentZoomLimitMin",
                            "css-property": "-ms-content-zoom-limit-min",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "100%",
                            "css-property-value-syntax": "css_percentage",
                            "type": "any"
                        },
                        {
                            "name": "msContentZoomSnap",
                            "css-property": "-ms-content-zoom-snap",
                            "css-property-enum-values": "inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "-ms-content-zoom-snap-type -ms-content-zoom-snap-points",
                            "css-property-value-syntax": "css_snap_type_and_points",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "msContentZoomSnapPoints",
                            "css-property": "-ms-content-zoom-snap-points",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "snapInterval(0%, 100%)",
                            "css-property-value-syntax": "snap_interval_or_snap_list",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "msContentZoomSnapType",
                            "css-property": "-ms-content-zoom-snap-type",
                            "css-property-enum-values": "none proximity mandatory inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "msFlowFrom",
                            "css-property": "-ms-flow-from",
                            "css-property-enum-values": "none inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "comma_separated_tokens",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "msFlowInto",
                            "css-property": "-ms-flow-into",
                            "css-property-enum-values": "none inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "comma_separated_tokens",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "msFontFeatureSettings",
                            "css-property": "-ms-font-feature-settings",
                            "css-property-enum-values": "normal inherit initial",
                            "css-property-initial": "normal",
                            "css-property-value-syntax": "comma_separated_font_feature_tag",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "msGridColumn",
                            "css-property": "-ms-grid-column",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "1",
                            "css-property-value-syntax": "1_or_greater_integer",
                            "type": "any"
                        },
                        {
                            "name": "msGridColumnAlign",
                            "css-property": "-ms-grid-column-align",
                            "css-property-enum-values": "stretch start end center inherit initial",
                            "css-property-initial": "stretch",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "msGridColumns",
                            "css-property": "-ms-grid-columns",
                            "css-property-enum-values": "none auto min-content max-content inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "css_grid_dimension_list",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "msGridColumnSpan",
                            "css-property": "-ms-grid-column-span",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "1",
                            "css-property-value-syntax": "non_negative_integer",
                            "type": "any"
                        },
                        {
                            "name": "msGridRow",
                            "css-property": "-ms-grid-row",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "1",
                            "css-property-value-syntax": "1_or_greater_integer",
                            "type": "any"
                        },
                        {
                            "name": "msGridRowAlign",
                            "css-property": "-ms-grid-row-align",
                            "css-property-enum-values": "stretch start end center inherit initial",
                            "css-property-initial": "stretch",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "msGridRows",
                            "css-property": "-ms-grid-rows",
                            "css-property-enum-values": "none auto min-content max-content inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "css_grid_dimension_list",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "msGridRowSpan",
                            "css-property": "-ms-grid-row-span",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "1",
                            "css-property-value-syntax": "non_negative_integer",
                            "type": "any"
                        },
                        {
                            "name": "msHighContrastAdjust",
                            "css-property": "-ms-high-contrast-adjust",
                            "css-property-enum-values": "auto none inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "msHyphenateLimitChars",
                            "css-property": "-ms-hyphenate-limit-chars",
                            "css-property-enum-values": "auto inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "1_to_3_space_separated_non_negative_integer",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "msHyphenateLimitLines",
                            "css-property": "-ms-hyphenate-limit-lines",
                            "css-property-enum-values": "no-limit inherit initial",
                            "css-property-initial": "no-limit",
                            "css-property-value-syntax": "non_negative_integer",
                            "type": "any"
                        },
                        {
                            "name": "msHyphenateLimitZone",
                            "css-property": "-ms-hyphenate-limit-zone",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "css_percentage_or_length",
                            "type": "any"
                        },
                        {
                            "name": "msHyphens",
                            "css-property": "-ms-hyphens",
                            "css-property-enum-values": "none manual auto inherit initial",
                            "css-property-initial": "manual",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "msImeAlign",
                            "css-property": "-ms-ime-align",
                            "css-property-enum-values": "auto after inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "msOverflowStyle",
                            "css-property": "-ms-overflow-style",
                            "css-property-enum-values": "auto none scrollbar -ms-autohiding-scrollbar inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "msScrollChaining",
                            "css-property": "-ms-scroll-chaining",
                            "css-property-enum-values": "chained none inherit initial",
                            "css-property-initial": "chained",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "msScrollLimit",
                            "css-property": "-ms-scroll-limit",
                            "css-property-enum-values": "auto inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "-ms-scroll-limit-x-min -ms-scroll-limit-y-min -ms-scroll-limit-x-max -ms-scroll-limit-y-max",
                            "css-property-value-syntax": "1_to_4_space_separated_css_lengths",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "msScrollLimitXMax",
                            "css-property": "-ms-scroll-limit-x-max",
                            "css-property-enum-values": "auto inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "css_length",
                            "type": "any"
                        },
                        {
                            "name": "msScrollLimitXMin",
                            "css-property": "-ms-scroll-limit-x-min",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "css_length",
                            "type": "any"
                        },
                        {
                            "name": "msScrollLimitYMax",
                            "css-property": "-ms-scroll-limit-y-max",
                            "css-property-enum-values": "auto inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "css_length",
                            "type": "any"
                        },
                        {
                            "name": "msScrollLimitYMin",
                            "css-property": "-ms-scroll-limit-y-min",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "css_length",
                            "type": "any"
                        },
                        {
                            "name": "msScrollRails",
                            "css-property": "-ms-scroll-rails",
                            "css-property-enum-values": "railed none inherit initial",
                            "css-property-initial": "railed",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "msScrollSnapPointsX",
                            "css-property": "-ms-scroll-snap-points-x",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "snapInterval(0, 100%)",
                            "css-property-value-syntax": "snap_interval_or_snap_list",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "msScrollSnapPointsY",
                            "css-property": "-ms-scroll-snap-points-y",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "snapInterval(0, 100%)",
                            "css-property-value-syntax": "snap_interval_or_snap_list",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "msScrollSnapType",
                            "css-property": "-ms-scroll-snap-type",
                            "css-property-enum-values": "none proximity mandatory inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "msScrollSnapX",
                            "css-property": "-ms-scroll-snap-x",
                            "css-property-enum-values": "none proximity mandatory inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "-ms-scroll-snap-type -ms-scroll-snap-points-x",
                            "css-property-value-syntax": "css_snap_type_and_points",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "msScrollSnapY",
                            "css-property": "-ms-scroll-snap-y",
                            "css-property-enum-values": "none proximity mandatory inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "-ms-scroll-snap-type -ms-scroll-snap-points-y",
                            "css-property-value-syntax": "css_snap_type_and_points",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "msScrollTranslation",
                            "css-property": "-ms-scroll-translation",
                            "css-property-enum-values": "inherit none vertical-to-horizontal",
                            "css-property-initial": "inherit",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "msTextCombineHorizontal",
                            "css-property": "-ms-text-combine-horizontal",
                            "css-property-enum-values": "none all digits inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "css_text_combine_enum_and_digit",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "msTextSizeAdjust",
                            "css-property": "-ms-text-size-adjust",
                            "css-property-enum-values": "auto none inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "css_percentage",
                            "type": "any"
                        },
                        {
                            "name": "msTouchAction",
                            "css-property": "-ms-touch-action",
                            "css-property-enum-values": "auto none pan-x pan-y manipulation pinch-zoom double-tap-zoom inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "msTouchSelect",
                            "css-property": "-ms-touch-select",
                            "css-property-enum-values": "grippers none inherit initial",
                            "css-property-initial": "grippers",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "msUserSelect",
                            "css-property": "-ms-user-select",
                            "css-property-enum-values": "text none element all inherit initial",
                            "css-property-initial": "text",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "msWrapFlow",
                            "css-property": "-ms-wrap-flow",
                            "css-property-enum-values": "auto both start end maximum clear inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "msWrapMargin",
                            "css-property": "-ms-wrap-margin",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "css_length",
                            "type": "any"
                        },
                        {
                            "name": "msWrapThrough",
                            "css-property": "-ms-wrap-through",
                            "css-property-enum-values": "wrap none inherit initial",
                            "css-property-initial": "wrap",
                            "css-property-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "opacity",
                            "css-property": "opacity",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "1",
                            "css-property-value-syntax": "0_to_1_floating_point_number",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "order",
                            "css-property": "order",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "signed_integer",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "orphans",
                            "css-property": "orphans",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "2",
                            "css-property-value-syntax": "1_or_greater_integer",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "outline",
                            "css-property": "outline",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "invert thin medium thick none dotted dashed solid double groove ridge inset outset inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "outline-width outline-style outline-color",
                            "css-property-value-syntax": "1_to_3_space_separated_of_css_length_css_color_and_enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "outlineColor",
                            "css-property": "outline-color",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "invert inherit initial",
                            "css-property-initial": "invert",
                            "css-property-value-syntax": "css_color",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "outlineOffset",
                            "css-property": "outline-offset",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "css_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "outlineStyle",
                            "css-property": "outline-style",
                            "css-property-enum-values": "auto none dotted dashed solid double groove ridge inset outset inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "outlineWidth",
                            "css-property": "outline-width",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "thin medium thick inherit initial",
                            "css-property-initial": "medium",
                            "css-property-value-syntax": "css_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "overflow",
                            "css-property": "overflow",
                            "css-property-enum-values": "visible hidden scroll auto inherit initial",
                            "css-property-initial": "visible",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "overflowX",
                            "css-property": "overflow-x",
                            "css-property-enum-values": "visible scroll hidden auto inherit initial",
                            "css-property-initial": "visible",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "overflowY",
                            "css-property": "overflow-y",
                            "css-property-enum-values": "visible scroll hidden auto inherit initial",
                            "css-property-initial": "visible",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "padding",
                            "css-property": "padding",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "auto inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "padding-top padding-right padding-bottom padding-left",
                            "css-property-value-syntax": "1_to_4_space_separated_css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "paddingBottom",
                            "css-property": "padding-bottom",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "auto inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "paddingLeft",
                            "css-property": "padding-left",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "auto inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "paddingRight",
                            "css-property": "padding-right",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "auto inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "paddingTop",
                            "css-property": "padding-top",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "auto inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "pageBreakAfter",
                            "css-property": "page-break-after",
                            "css-property-enum-values": "auto always avoid left right inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "pageBreakBefore",
                            "css-property": "page-break-before",
                            "css-property-enum-values": "auto always avoid left right inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "pageBreakInside",
                            "css-property": "page-break-inside",
                            "css-property-enum-values": "auto avoid inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "parentRule",
                            "read-only": "1",
                            "type": "CSSRule"
                        },
                        {
                            "name": "perspective",
                            "css-property": "perspective",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "none inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "css_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "perspectiveOrigin",
                            "css-property": "perspective-origin",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "left right center top bottom inherit initial",
                            "css-property-initial": "50% 50%",
                            "css-property-value-syntax": "1_or_2_space_separated_css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "pointerEvents",
                            "css-property": "pointer-events",
                            "css-property-enum-values": "auto none visiblePainted visibleFill visibleStroke visible painted fill stroke all inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "position",
                            "css-property": "position",
                            "css-property-enum-values": "static relative absolute fixed inherit initial",
                            "css-property-initial": "static",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "quotes",
                            "css-property": "quotes",
                            "css-property-enum-values": "none inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "space_separated_strings",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "right",
                            "css-property": "right",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "auto inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "rotate",
                            "css-property": "rotate",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0deg 0 0 1",
                            "css-property-value-syntax": "1_css_angle_followed_by_optional_3_space_separated_floating_point_number",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "rubyAlign",
                            "css-property": "ruby-align",
                            "css-property-enum-values": "auto left center right distribute-letter distribute-space line-edge inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "rubyOverhang",
                            "css-property": "ruby-overhang",
                            "css-property-enum-values": "auto whitespace none inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "rubyPosition",
                            "css-property": "ruby-position",
                            "css-property-enum-values": "above inline inherit initial",
                            "css-property-initial": "above",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "scale",
                            "css-property": "scale",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0 0 0",
                            "css-property-value-syntax": "1_to_3_space_separated_floating_point_number",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "stopColor",
                            "css-property": "stop-color",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "currentColor inherit initial",
                            "css-property-initial": "black",
                            "css-property-value-syntax": "css_color",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "stopOpacity",
                            "css-property": "stop-opacity",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "1",
                            "css-property-value-syntax": "0_to_1_floating_point_number",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "stroke",
                            "css-property": "stroke",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "none currentColor inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "svg_paint_or_css_color",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "strokeDasharray",
                            "css-property": "stroke-dasharray",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "none inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "comma_or_space_separated_css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "strokeDashoffset",
                            "css-property": "stroke-dashoffset",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "strokeLinecap",
                            "css-property": "stroke-linecap",
                            "css-property-enum-values": "butt round square inherit initial",
                            "css-property-initial": "butt",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "strokeLinejoin",
                            "css-property": "stroke-linejoin",
                            "css-property-enum-values": "miter round bevel inherit initial",
                            "css-property-initial": "miter",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "strokeMiterlimit",
                            "css-property": "stroke-miterlimit",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "4",
                            "css-property-value-syntax": "1_or_greater_floating_point_number",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "strokeOpacity",
                            "css-property": "stroke-opacity",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "1",
                            "css-property-value-syntax": "0_to_1_floating_point_number",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "strokeWidth",
                            "css-property": "stroke-width",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "1",
                            "css-property-value-syntax": "css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "tableLayout",
                            "css-property": "table-layout",
                            "css-property-enum-values": "auto fixed inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "textAlign",
                            "css-property": "text-align",
                            "css-property-enum-values": "left right center justify inherit initial",
                            "css-property-initial": "left",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "textAlignLast",
                            "css-property": "text-align-last",
                            "css-property-enum-values": "auto center inherit justify left right inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "textAnchor",
                            "css-property": "text-anchor",
                            "css-property-enum-values": "start middle end inherit initial",
                            "css-property-initial": "start",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "textDecoration",
                            "css-property": "text-decoration",
                            "css-property-enum-values": "none underline overline line-through blink inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "textIndent",
                            "css-property": "text-indent",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "textJustify",
                            "css-property": "text-justify",
                            "css-property-enum-values": "auto distribute distribute-all-lines distribute-center-last inter-cluster inter-ideograph inter-word kashida newspaper inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "textKashida",
                            "css-property": "text-kashida",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "css_percentage",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "textKashidaSpace",
                            "css-property": "text-kashida-space",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "css_percentage",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "textOverflow",
                            "css-property": "text-overflow",
                            "css-property-enum-values": "clip ellipsis inherit initial",
                            "css-property-initial": "clip",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "textShadow",
                            "css-property": "text-shadow",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "css_text_shadow_list",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "textTransform",
                            "css-property": "text-transform",
                            "css-property-enum-values": "none capitalize uppercase lowercase inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "textUnderlinePosition",
                            "css-property": "text-underline-position",
                            "css-property-enum-values": "auto above below auto-pos inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "top",
                            "css-property": "top",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "auto inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "touchAction",
                            "css-property": "touch-action",
                            "css-property-enum-values": "auto none pan-x pan-y manipulation pinch-zoom double-tap-zoom inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "transform",
                            "css-property": "transform",
                            "css-property-aliases": "-ms-transform",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "none inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "css_transform_list",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "transformOrigin",
                            "css-property": "transform-origin",
                            "css-property-aliases": "-ms-transform-origin",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "left center right top bottom inherit initial",
                            "css-property-initial": "50% 50%",
                            "css-property-value-syntax": "css_transform_origin",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "transformStyle",
                            "css-property": "transform-style",
                            "css-property-enum-values": "flat preserve-3d inherit initial",
                            "css-property-initial": "flat",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "transition",
                            "css-property": "transition",
                            "css-property-aliases": "-ms-transition",
                            "css-property-enum-values": "inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "transition-property transition-duration transition-timing-function transition-delay",
                            "css-property-value-syntax": "css_transition",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "transitionDelay",
                            "css-property": "transition-delay",
                            "css-property-aliases": "-ms-transition-delay",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "comma_separated_css_times",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "transitionDuration",
                            "css-property": "transition-duration",
                            "css-property-aliases": "-ms-transition-duration",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "comma_separated_css_times",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "transitionProperty",
                            "css-property": "transition-property",
                            "css-property-aliases": "-ms-transition-property",
                            "css-property-enum-values": "none all inherit initial",
                            "css-property-initial": "all",
                            "css-property-value-syntax": "comma_separated_tokens",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "transitionTimingFunction",
                            "css-property": "transition-timing-function",
                            "css-property-aliases": "-ms-transition-timing-function",
                            "css-property-enum-values": "step-start step-end ease ease-in ease-out ease-in-out linear inherit initial",
                            "css-property-initial": "ease",
                            "css-property-value-syntax": "comma_separated_css_timing_functions",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "translate",
                            "css-property": "translate",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0px 0px 0px",
                            "css-property-value-syntax": "1_to_3_space_separated_css_length_and_first_two_optionally_percentage",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "unicodeBidi",
                            "css-property": "unicode-bidi",
                            "css-property-enum-values": "normal embed bidi-override inherit",
                            "css-property-initial": "normal",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "verticalAlign",
                            "css-property": "vertical-align",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "baseline auto sub super top middle bottom text-top text-bottom inherit initial",
                            "css-property-initial": "baseline",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "visibility",
                            "css-property": "visibility",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "visible hidden collapse inherit initial",
                            "css-property-initial": "visible",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitAlignContent",
                            "css-property": "-webkit-align-content",
                            "css-property-enum-values": "stretch flex-start flex-end center space-between space-around inherit initial",
                            "css-property-initial": "stretch",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitAlignItems",
                            "css-property": "-webkit-align-items",
                            "css-property-enum-values": "stretch flex-start flex-end center baseline inherit initial",
                            "css-property-initial": "stretch",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitAlignSelf",
                            "css-property": "-webkit-align-self",
                            "css-property-enum-values": "auto flex-start flex-end center baseline stretch inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitAnimation",
                            "css-property": "-webkit-animation",
                            "css-property-enum-values": "inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "-webkit-animation-duration -webkit-animation-timing-function -webkit-animation-delay -webkit-animation-iteration-count -webkit-animation-direction -webkit-animation-fill-mode -webkit-animation-play-state -webkit-animation-name",
                            "css-property-value-syntax": "css_animation",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitAnimationDelay",
                            "css-property": "-webkit-animation-delay",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "comma_separated_css_times",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitAnimationDirection",
                            "css-property": "-webkit-animation-direction",
                            "css-property-enum-values": "normal reverse alternate alternate-reverse inherit initial",
                            "css-property-initial": "normal",
                            "css-property-value-syntax": "comma_separated_enums",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitAnimationDuration",
                            "css-property": "-webkit-animation-duration",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "comma_separated_css_times",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitAnimationFillMode",
                            "css-property": "-webkit-animation-fill-mode",
                            "css-property-enum-values": "none forwards backwards both inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "comma_separated_enums",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitAnimationIterationCount",
                            "css-property": "-webkit-animation-iteration-count",
                            "css-property-enum-values": "infinite inherit initial",
                            "css-property-initial": "1",
                            "css-property-value-syntax": "comma_separated_non_negative_integer",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitAnimationName",
                            "css-property": "-webkit-animation-name",
                            "css-property-enum-values": "none inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "comma_separated_keyframes_refs",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitAnimationPlayState",
                            "css-property": "-webkit-animation-play-state",
                            "css-property-enum-values": "running paused inherit initial",
                            "css-property-initial": "running",
                            "css-property-value-syntax": "comma_separated_enums",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitAnimationTimingFunction",
                            "css-property": "-webkit-animation-timing-function",
                            "css-property-enum-values": "step-start step-end ease ease-in ease-out ease-in-out linear inherit initial",
                            "css-property-initial": "ease",
                            "css-property-value-syntax": "comma_separated_css_timing_functions",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitAppearance",
                            "css-property": "-webkit-appearance",
                            "css-property-enum-values": "none button textfield inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitBackfaceVisibility",
                            "css-property": "-webkit-backface-visibility",
                            "css-property-enum-values": "visible hidden inherit initial",
                            "css-property-initial": "visible",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitBackgroundClip",
                            "css-property": "-webkit-background-clip",
                            "css-property-enum-values": "border-box padding-box content-box inherit initial",
                            "css-property-initial": "border-box",
                            "css-property-value-syntax": "comma_separated_enums",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitBackgroundOrigin",
                            "css-property": "-webkit-background-origin",
                            "css-property-enum-values": "border-box padding-box content-box inherit initial",
                            "css-property-initial": "padding-box",
                            "css-property-value-syntax": "comma_separated_enums",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitBackgroundSize",
                            "css-property": "-webkit-background-size",
                            "css-property-enum-values": "auto cover contain inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "comma_separated_1_or_2_space_separated_css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitBorderBottomLeftRadius",
                            "css-property": "-webkit-border-bottom-left-radius",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "1_or_2_space_separated_css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitBorderBottomRightRadius",
                            "css-property": "-webkit-border-bottom-right-radius",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "1_or_2_space_separated_css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitBorderImage",
                            "css-property": "-webkit-border-image",
                            "css-property-enum-values": "none fill auto stretch repeat round space inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "border-image-source border-image-slice border-image-width border-image-outset border-image-repeat",
                            "css-property-value-syntax": "css_border_image",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitBorderRadius",
                            "css-property": "-webkit-border-radius",
                            "css-property-enum-values": "inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "-webkit-border-top-left-radius -webkit-border-top-right-radius -webkit-border-bottom-right-radius -webkit-border-bottom-left-radius",
                            "css-property-value-syntax": "0_or_1_slash_separated_1_to_4_css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitBorderTopLeftRadius",
                            "css-property": "-webkit-border-top-left-radius",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "1_or_2_space_separated_css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitBorderTopRightRadius",
                            "css-property": "-webkit-border-top-right-radius",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "1_or_2_space_separated_css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitBoxAlign",
                            "css-property": "-webkit-box-align",
                            "css-property-enum-values": "start center end baseline stretch inherit initial",
                            "css-property-initial": "stretch",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitBoxDirection",
                            "css-property": "-webkit-box-direction",
                            "css-property-initial": "normal",
                            "css-property-value-syntax": "normal reverse inherit initial",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitBoxFlex",
                            "css-property": "-webkit-box-flex",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "non_negative_integer",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitBoxOrdinalGroup",
                            "css-property": "-webkit-box-ordinal-group",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "1",
                            "css-property-value-syntax": "1_or_greater_integer",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitBoxOrient",
                            "css-property": "-webkit-box-orient",
                            "css-property-initial": "inline-axis",
                            "css-property-value-syntax": "horizontal vertical inline-axis block-axis inherit initial",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitBoxPack",
                            "css-property": "-webkit-box-pack",
                            "css-property-enum-values": "start center end justify inherit initial",
                            "css-property-initial": "start",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitBoxSizing",
                            "css-property": "-webkit-box-sizing",
                            "css-property-enum-values": "content-box border-box inherit initial",
                            "css-property-initial": "content-box",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitColumnBreakAfter",
                            "css-property": "-webkit-column-break-after",
                            "css-property-enum-values": "auto always avoid inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitColumnBreakBefore",
                            "css-property": "-webkit-column-break-before",
                            "css-property-enum-values": "auto always avoid inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitColumnBreakInside",
                            "css-property": "-webkit-column-break-inside",
                            "css-property-enum-values": "auto always avoid inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitColumnCount",
                            "css-property": "-webkit-column-count",
                            "css-property-enum-values": "auto inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "css_length",
                            "type": "any"
                        },
                        {
                            "name": "webkitColumnGap",
                            "css-property": "-webkit-column-gap",
                            "css-property-enum-values": "normal inherit initial",
                            "css-property-initial": "normal",
                            "css-property-value-syntax": "css_length",
                            "type": "any"
                        },
                        {
                            "name": "webkitColumnRule",
                            "css-property": "-webkit-column-rule",
                            "css-property-enum-values": "transparent thin medium thick inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "-webkit-column-rule-color -webkit-column-rule-style -webkit-column-rule-width",
                            "css-property-value-syntax": "1_to_3_space_separated_of_css_length_css_color_and_enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitColumnRuleColor",
                            "css-property": "-webkit-column-rule-color",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "currentColor",
                            "css-property-value-syntax": "css_color",
                            "type": "any"
                        },
                        {
                            "name": "webkitColumnRuleStyle",
                            "css-property": "-webkit-column-rule-style",
                            "css-property-enum-values": "none hidden dotted dashed solid double groove ridge inset outset inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitColumnRuleWidth",
                            "css-property": "-webkit-column-rule-width",
                            "css-property-enum-values": "thin medium thick inherit initial",
                            "css-property-initial": "medium",
                            "css-property-value-syntax": "css_length",
                            "type": "any"
                        },
                        {
                            "name": "webkitColumns",
                            "css-property": "-webkit-columns",
                            "css-property-enum-values": "auto inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "-webkit-column-width -webkit-column-count",
                            "css-property-value-syntax": "1_or_2_space_separated_css_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitColumnSpan",
                            "css-property": "-webkit-column-span",
                            "css-property-enum-values": "none all inherit initial",
                            "css-property-initial": "medium",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitColumnWidth",
                            "css-property": "-webkit-column-width",
                            "css-property-enum-values": "auto inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "css_length",
                            "type": "any"
                        },
                        {
                            "name": "webkitFilter",
                            "css-property": "-webkit-filter",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "space_separated_filter_functions",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitFlex",
                            "css-property": "-webkit-flex",
                            "css-property-enum-values": "auto content none inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "-webkit-flex-grow -webkit-flex-shrink -webkit-flex-basis",
                            "css-property-value-syntax": "css_flex",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitFlexBasis",
                            "css-property": "-webkit-flex-basis",
                            "css-property-enum-values": "auto content inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitFlexDirection",
                            "css-property": "-webkit-flex-direction",
                            "css-property-enum-values": "row row-reverse column column-reverse inherit initial",
                            "css-property-initial": "row",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitFlexFlow",
                            "css-property": "-webkit-flex-flow",
                            "css-property-enum-values": "row row-reverse column column-reverse nowrap wrap wrap-reverse inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "-webkit-flex-direction -webkit-flex-wrap",
                            "css-property-value-syntax": "1_or_2_space_separated_enums",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitFlexGrow",
                            "css-property": "-webkit-flex-grow",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "1_or_greater_integer",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitFlexShrink",
                            "css-property": "-webkit-flex-shrink",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "1",
                            "css-property-value-syntax": "1_or_greater_integer",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitFlexWrap",
                            "css-property": "-webkit-flex-wrap",
                            "css-property-enum-values": "nowrap wrap wrap-reverse inherit initial",
                            "css-property-initial": "nowrap",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitJustifyContent",
                            "css-property": "-webkit-justify-content",
                            "css-property-enum-values": "flex-start flex-end center space-between space-around inherit initial",
                            "css-property-initial": "flex-start",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitOrder",
                            "css-property": "-webkit-order",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "signed_integer",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitPerspective",
                            "css-property": "-webkit-perspective",
                            "css-property-enum-values": "none inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "css_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitPerspectiveOrigin",
                            "css-property": "-webkit-perspective-origin",
                            "css-property-enum-values": "left right center top bottom inherit initial",
                            "css-property-initial": "50% 50%",
                            "css-property-value-syntax": "1_or_2_space_separated_css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitTapHighlightColor",
                            "css-property": "-webkit-tap-highlight-color",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "rgba(0,0,0,0.180392)",
                            "css-property-value-syntax": "css_color",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitTextFillColor",
                            "css-property": "-webkit-text-fill-color",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "black",
                            "css-property-value-syntax": "css_color",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitTextSizeAdjust",
                            "css-property": "-webkit-text-size-adjust",
                            "css-property-enum-values": "auto none inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "css_percentage",
                            "type": "any"
                        },
                        {
                            "name": "webkitTextStroke",
                            "css-property": "-webkit-text-stroke",
                            "css-property-enum-values": "thin medium thick unset inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "-webkit-text-stroke-width -webkit-text-stroke-color",
                            "css-property-value-syntax": "1_or_2_space_separated_of_css_length_css_color_and_enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitTextStrokeColor",
                            "css-property": "-webkit-text-stroke-color",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "black",
                            "css-property-value-syntax": "css_color",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitTextStrokeWidth",
                            "css-property": "-webkit-text-stroke-width",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "inherit initial unset thin medium thick",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "css_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitTransform",
                            "css-property": "-webkit-transform",
                            "css-property-enum-values": "none inherit initial",
                            "css-property-initial": "none",
                            "css-property-value-syntax": "css_transform_list",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitTransformOrigin",
                            "css-property": "-webkit-transform-origin",
                            "css-property-enum-values": "left center right top bottom inherit initial",
                            "css-property-initial": "50% 50%",
                            "css-property-value-syntax": "css_transform_origin",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitTransformStyle",
                            "css-property": "-webkit-transform-style",
                            "css-property-enum-values": "flat preserve-3d inherit initial",
                            "css-property-initial": "flat",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitTransition",
                            "css-property": "-webkit-transition",
                            "css-property-enum-values": "inherit initial",
                            "css-property-shorthand": "1",
                            "css-property-subproperties": "-webkit-transition-property -webkit-transition-duration -webkit-transition-timing-function -webkit-transition-delay",
                            "css-property-value-syntax": "css_transition",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitTransitionDelay",
                            "css-property": "-webkit-transition-delay",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "comma_separated_css_times",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitTransitionDuration",
                            "css-property": "-webkit-transition-duration",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "0",
                            "css-property-value-syntax": "comma_separated_css_times",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitTransitionProperty",
                            "css-property": "-webkit-transition-property",
                            "css-property-enum-values": "none all inherit initial",
                            "css-property-initial": "all",
                            "css-property-value-syntax": "comma_separated_tokens",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitTransitionTimingFunction",
                            "css-property": "-webkit-transition-timing-function",
                            "css-property-enum-values": "step-start step-end ease ease-in ease-out ease-in-out linear inherit initial",
                            "css-property-initial": "ease",
                            "css-property-value-syntax": "comma_separated_css_timing_functions",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitUserModify",
                            "css-property": "-webkit-user-modify",
                            "css-property-enum-values": "read-only read-write read-write-plaintext-only inherit initial",
                            "css-property-initial": "read-only",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitUserSelect",
                            "css-property": "-webkit-user-select",
                            "css-property-enum-values": "text none element all inherit initial",
                            "css-property-initial": "text",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitWritingMode",
                            "css-property": "-webkit-writing-mode",
                            "css-property-enum-values": "horizontal-tb vertical-lr vertical-rl inherit initial",
                            "css-property-initial": "horizontal-tb",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "whiteSpace",
                            "css-property": "white-space",
                            "css-property-enum-values": "normal pre nowrap pre-wrap pre-line inherit initial",
                            "css-property-initial": "normal",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "widows",
                            "css-property": "widows",
                            "css-property-enum-values": "inherit initial",
                            "css-property-initial": "2",
                            "css-property-value-syntax": "1_or_greater_integer",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "width",
                            "css-property": "width",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "auto inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "css_percentage_or_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "wordBreak",
                            "css-property": "word-break",
                            "css-property-enum-values": "normal break-all keep-all inherit initial",
                            "css-property-initial": "normal",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "wordSpacing",
                            "css-property": "word-spacing",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "normal inherit initial",
                            "css-property-initial": "normal",
                            "css-property-value-syntax": "css_length",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "wordWrap",
                            "css-property": "word-wrap",
                            "css-property-enum-values": "normal break-word inherit initial",
                            "css-property-initial": "normal",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "writingMode",
                            "css-property": "writing-mode",
                            "css-property-enum-values": "lr-tb tb-rl rl-tb bt-rl tb-lr bt-lr lr-bt rl-bt lr rl tb horizontal-tb vertical-lr vertical-rl inherit initial",
                            "css-property-initial": "horizontal-tb",
                            "css-property-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "zIndex",
                            "css-property": "z-index",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "auto inherit initial",
                            "css-property-initial": "auto",
                            "css-property-value-syntax": "signed_integer",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "zoom",
                            "css-property": "zoom",
                            "css-property-aliases": "-ms-zoom",
                            "css-property-animatable": "1",
                            "css-property-enum-values": "normal inherit initial",
                            "css-property-initial": "normal",
                            "css-property-value-syntax": "css_percentage_or_non_negative_floating_point_number",
                            "nullable": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "CSSStyleRule",
                "extends": "CSSRule",
                "properties": {
                    "property": [
                        {
                            "name": "readOnly",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "selectorText",
                            "type": "DOMString"
                        },
                        {
                            "name": "style",
                            "read-only": "1",
                            "type": "CSSStyleDeclaration"
                        }
                    ]
                }
            },
            {
                "name": "CSSStyleSheet",
                "extends": "StyleSheet",
                "methods": {
                    "method": [
                        {
                            "name": "addImport",
                            "type": "long",
                            "param": [
                                {
                                    "name": "bstrURL",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "lIndex",
                                    "default": "-1",
                                    "optional": "1",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "addPageRule",
                            "type": "long",
                            "param": [
                                {
                                    "name": "bstrSelector",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "bstrStyle",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "lIndex",
                                    "default": "-1",
                                    "optional": "1",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "addRule",
                            "type": "long",
                            "param": [
                                {
                                    "name": "bstrSelector",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "bstrStyle",
                                    "optional": "1",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "lIndex",
                                    "default": "-1",
                                    "optional": "1",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "deleteRule",
                            "type": "void",
                            "param": [
                                {
                                    "name": "index",
                                    "default": "-1",
                                    "optional": "1",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "insertRule",
                            "type": "unsigned long",
                            "param": [
                                {
                                    "name": "rule",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "index",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "removeImport",
                            "type": "void",
                            "param": [
                                {
                                    "name": "lIndex",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "removeRule",
                            "type": "void",
                            "param": [
                                {
                                    "name": "lIndex",
                                    "type": "long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "cssRules",
                            "read-only": "1",
                            "type": "CSSRuleList"
                        },
                        {
                            "name": "cssText",
                            "type": "DOMString"
                        },
                        {
                            "name": "id",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "imports",
                            "read-only": "1",
                            "type": "StyleSheetList"
                        },
                        {
                            "name": "isAlternate",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "isPrefAlternate",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "ownerRule",
                            "read-only": "1",
                            "type": "CSSRule"
                        },
                        {
                            "name": "owningElement",
                            "read-only": "1",
                            "type": "Element"
                        },
                        {
                            "name": "pages",
                            "read-only": "1",
                            "type": "StyleSheetPageList"
                        },
                        {
                            "name": "readOnly",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "rules",
                            "read-only": "1",
                            "type": "CSSRuleList"
                        }
                    ]
                }
            },
            {
                "name": "CSSSupportsRule",
                "extends": "CSSConditionRule"
            },
            {
                "name": "CustomEvent",
                "extends": "Event",
                "constructor": {
                    "param": [
                        {
                            "name": "typeArg",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "optional": "1",
                            "type": "CustomEventInit"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "initCustomEvent",
                            "type": "void",
                            "param": [
                                {
                                    "name": "typeArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "canBubbleArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "cancelableArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "detailArg",
                                    "type": "object"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "detail",
                            "read-only": "1",
                            "type": "object"
                        }
                    ]
                }
            },
            {
                "name": "DataCue",
                "extends": "TextTrackCue",
                "properties": {
                    "property": [
                        {
                            "name": "data",
                            "type": "ArrayBuffer"
                        }
                    ]
                }
            },
            {
                "name": "DataTransfer",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "clearData",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "format",
                                    "default": "\"null\"",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "getData",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "format",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "setData",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "format",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "data",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "dropEffect",
                            "type": "DOMString"
                        },
                        {
                            "name": "effectAllowed",
                            "type": "DOMString"
                        },
                        {
                            "name": "files",
                            "read-only": "1",
                            "same-object": "1",
                            "type": "FileList"
                        },
                        {
                            "name": "items",
                            "read-only": "1",
                            "type": "DataTransferItemList"
                        },
                        {
                            "name": "types",
                            "read-only": "1",
                            "same-object": "1",
                            "type": "DOMStringList"
                        }
                    ]
                }
            },
            {
                "name": "DataTransferItem",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "getAsFile",
                            "nullable": "1",
                            "type": "File"
                        },
                        {
                            "name": "getAsString",
                            "type": "void",
                            "param": [
                                {
                                    "name": "_callback",
                                    "nullable": "1",
                                    "type": "FunctionStringCallback"
                                }
                            ]
                        },
                        {
                            "name": "webkitGetAsEntry",
                            "nullable": "1",
                            "type": "Entry"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "kind",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "type",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "DataTransferItemList",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "add",
                            "nullable": "1",
                            "type": "DataTransferItem",
                            "param": [
                                {
                                    "name": "data",
                                    "type": "File"
                                }
                            ]
                        },
                        {
                            "name": "clear",
                            "type": "void"
                        },
                        {
                            "name": "item",
                            "getter": "1",
                            "type": "File",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "remove",
                            "type": "void",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "length",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "DeferredPermissionRequest",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "allow",
                            "type": "void"
                        },
                        {
                            "name": "deny",
                            "type": "void"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "id",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "type",
                            "read-only": "1",
                            "type": "MSWebViewPermissionType"
                        },
                        {
                            "name": "uri",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "DelayNode",
                "extends": "AudioNode",
                "properties": {
                    "property": [
                        {
                            "name": "delayTime",
                            "read-only": "1",
                            "type": "AudioParam"
                        }
                    ]
                }
            },
            {
                "name": "DeviceAcceleration",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "x",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "double"
                        },
                        {
                            "name": "y",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "double"
                        },
                        {
                            "name": "z",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "double"
                        }
                    ]
                }
            },
            {
                "name": "DeviceLightEvent",
                "extends": "Event",
                "constructor": {
                    "param": [
                        {
                            "name": "typeArg",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "optional": "1",
                            "type": "DeviceLightEventInit"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "value",
                            "read-only": "1",
                            "type": "double"
                        }
                    ]
                }
            },
            {
                "name": "DeviceMotionEvent",
                "extends": "Event",
                "constructor": {
                    "param": [
                        {
                            "name": "typeArg",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "optional": "1",
                            "type": "DeviceMotionEventInit"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "initDeviceMotionEvent",
                            "type": "void",
                            "param": [
                                {
                                    "name": "type",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "bubbles",
                                    "type": "boolean"
                                },
                                {
                                    "name": "cancelable",
                                    "type": "boolean"
                                },
                                {
                                    "name": "acceleration",
                                    "nullable": "1",
                                    "type": "DeviceAccelerationDict"
                                },
                                {
                                    "name": "accelerationIncludingGravity",
                                    "nullable": "1",
                                    "type": "DeviceAccelerationDict"
                                },
                                {
                                    "name": "rotationRate",
                                    "nullable": "1",
                                    "type": "DeviceRotationRateDict"
                                },
                                {
                                    "name": "interval",
                                    "nullable": "1",
                                    "type": "double"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "acceleration",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "DeviceAcceleration"
                        },
                        {
                            "name": "accelerationIncludingGravity",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "DeviceAcceleration"
                        },
                        {
                            "name": "interval",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "double"
                        },
                        {
                            "name": "rotationRate",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "DeviceRotationRate"
                        }
                    ]
                }
            },
            {
                "name": "DeviceOrientationEvent",
                "extends": "Event",
                "constructor": {
                    "param": [
                        {
                            "name": "typeArg",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "optional": "1",
                            "type": "DeviceOrientationEventInit"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "initDeviceOrientationEvent",
                            "type": "void",
                            "param": [
                                {
                                    "name": "type",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "bubbles",
                                    "type": "boolean"
                                },
                                {
                                    "name": "cancelable",
                                    "type": "boolean"
                                },
                                {
                                    "name": "alpha",
                                    "nullable": "1",
                                    "type": "double"
                                },
                                {
                                    "name": "beta",
                                    "nullable": "1",
                                    "type": "double"
                                },
                                {
                                    "name": "gamma",
                                    "nullable": "1",
                                    "type": "double"
                                },
                                {
                                    "name": "absolute",
                                    "type": "boolean"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "absolute",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "alpha",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "double"
                        },
                        {
                            "name": "beta",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "double"
                        },
                        {
                            "name": "gamma",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "double"
                        }
                    ]
                }
            },
            {
                "name": "DeviceRotationRate",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "alpha",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "double"
                        },
                        {
                            "name": "beta",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "double"
                        },
                        {
                            "name": "gamma",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "double"
                        }
                    ]
                }
            },
            {
                "name": "Document",
                "extends": "Node",
                "anonymous-methods": {
                    "method": [
                        {
                            "getter": "1",
                            "type": "(Window or Element or HTMLCollection)",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                },
                "events": {
                    "event": [
                        {
                            "name": "DOMContentLoaded",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "follows": "readystatechange",
                            "precedes": "load",
                            "type": "Event"
                        },
                        {
                            "name": "readystatechange",
                            "dispatch": "sync",
                            "precedes": "load DOMContentLoaded",
                            "type": "Event"
                        },
                        {
                            "name": "stop",
                            "dispatch": "sync",
                            "type": "Event"
                        },
                        {
                            "name": "visibilitychanged",
                            "dispatch": "async",
                            "type": "Event"
                        },
                        {
                            "name": "MSManipulationStateChanged",
                            "dispatch": "async",
                            "type": "MSManipulationEvent"
                        },
                        {
                            "name": "MSContentZoom",
                            "dispatch": "sync",
                            "tags": "IEOnly",
                            "type": "UIEvent"
                        },
                        {
                            "name": "selectionchange",
                            "dispatch": "async",
                            "follows": "selectstart",
                            "precedes": "select",
                            "tags": "IEOnly",
                            "type": "Event"
                        },
                        {
                            "name": "fullscreenchange",
                            "aliases": "webkitfullscreenchange",
                            "bubbles": "1",
                            "dispatch": "async",
                            "tags": "IEOnly",
                            "type": "Event"
                        },
                        {
                            "name": "fullscreenerror",
                            "aliases": "webkitfullscreenerror",
                            "bubbles": "1",
                            "dispatch": "async",
                            "tags": "IEOnly",
                            "type": "Event"
                        },
                        {
                            "name": "mssitepinned",
                            "dispatch": "sync",
                            "type": "Event"
                        },
                        {
                            "name": "mssitemodejumplistitemremoved",
                            "dispatch": "sync",
                            "type": "MSSiteModeEvent"
                        },
                        {
                            "name": "msthumbnailclick",
                            "dispatch": "sync",
                            "type": "MSSiteModeEvent"
                        }
                    ]
                },
                "implements": [
                    "GlobalEventHandlers",
                    "NodeSelector",
                    "DocumentEvent"
                ],
                "methods": {
                    "method": [
                        {
                            "name": "adoptNode",
                            "type": "Node",
                            "param": [
                                {
                                    "name": "source",
                                    "type": "Node"
                                }
                            ]
                        },
                        {
                            "name": "captureEvents",
                            "type": "void"
                        },
                        {
                            "name": "caretRangeFromPoint",
                            "type": "Range",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "clear",
                            "type": "void"
                        },
                        {
                            "name": "close",
                            "type": "void"
                        },
                        {
                            "name": "createAttribute",
                            "type": "Attr",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "createAttributeNS",
                            "type": "Attr",
                            "param": [
                                {
                                    "name": "namespaceURI",
                                    "nullable": "1",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "qualifiedName",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "createCDATASection",
                            "type": "CDATASection",
                            "param": [
                                {
                                    "name": "data",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "createComment",
                            "type": "Comment",
                            "param": [
                                {
                                    "name": "data",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "createDocumentFragment",
                            "type": "DocumentFragment"
                        },
                        {
                            "name": "createElement",
                            "type": "Element",
                            "param": [
                                {
                                    "name": "tagName",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "createElementNS",
                            "type": "Element",
                            "param": [
                                {
                                    "name": "namespaceURI",
                                    "nullable": "1",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "qualifiedName",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "createExpression",
                            "type": "XPathExpression",
                            "param": [
                                {
                                    "name": "expression",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "resolver",
                                    "type": "XPathNSResolver"
                                }
                            ]
                        },
                        {
                            "name": "createNodeIterator",
                            "type": "NodeIterator",
                            "param": [
                                {
                                    "name": "root",
                                    "type": "Node"
                                },
                                {
                                    "name": "whatToShow",
                                    "default": "0xFFFFFFFF",
                                    "optional": "1",
                                    "type": "unsigned long"
                                },
                                {
                                    "name": "filter",
                                    "default": "null",
                                    "optional": "1",
                                    "type": "NodeFilter"
                                },
                                {
                                    "name": "entityReferenceExpansion",
                                    "default": "false",
                                    "optional": "1",
                                    "type": "boolean"
                                }
                            ]
                        },
                        {
                            "name": "createNSResolver",
                            "type": "XPathNSResolver",
                            "param": [
                                {
                                    "name": "nodeResolver",
                                    "type": "Node"
                                }
                            ]
                        },
                        {
                            "name": "createProcessingInstruction",
                            "type": "ProcessingInstruction",
                            "param": [
                                {
                                    "name": "target",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "data",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "createRange",
                            "type": "Range"
                        },
                        {
                            "name": "createTextNode",
                            "type": "Text",
                            "param": [
                                {
                                    "name": "data",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "createTouch",
                            "type": "Touch",
                            "param": [
                                {
                                    "name": "view",
                                    "type": "Window"
                                },
                                {
                                    "name": "target",
                                    "type": "EventTarget"
                                },
                                {
                                    "name": "identifier",
                                    "type": "long"
                                },
                                {
                                    "name": "pageX",
                                    "type": "long"
                                },
                                {
                                    "name": "pageY",
                                    "type": "long"
                                },
                                {
                                    "name": "screenX",
                                    "type": "long"
                                },
                                {
                                    "name": "screenY",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "createTouchList",
                            "type": "TouchList",
                            "param": [
                                {
                                    "name": "touches",
                                    "type": "Touch",
                                    "variadic": "1"
                                }
                            ]
                        },
                        {
                            "name": "createTreeWalker",
                            "type": "TreeWalker",
                            "param": [
                                {
                                    "name": "root",
                                    "type": "Node"
                                },
                                {
                                    "name": "whatToShow",
                                    "default": "0xFFFFFFFF",
                                    "optional": "1",
                                    "type": "unsigned long"
                                },
                                {
                                    "name": "filter",
                                    "default": "null",
                                    "optional": "1",
                                    "type": "NodeFilter"
                                },
                                {
                                    "name": "entityReferenceExpansion",
                                    "default": "false",
                                    "optional": "1",
                                    "type": "boolean"
                                }
                            ]
                        },
                        {
                            "name": "elementFromPoint",
                            "type": "Element",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "long"
                                },
                                {
                                    "name": "y",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "evaluate",
                            "type": "XPathResult",
                            "param": [
                                {
                                    "name": "expression",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "contextNode",
                                    "type": "Node"
                                },
                                {
                                    "name": "resolver",
                                    "type": "XPathNSResolver"
                                },
                                {
                                    "name": "type",
                                    "type": "unsigned short"
                                },
                                {
                                    "name": "result",
                                    "type": "XPathResult"
                                }
                            ]
                        },
                        {
                            "name": "execCommand",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "commandId",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "showUI",
                                    "default": "false",
                                    "optional": "1",
                                    "type": "boolean"
                                },
                                {
                                    "name": "value",
                                    "optional": "1",
                                    "type": "any"
                                }
                            ]
                        },
                        {
                            "name": "execCommandShowHelp",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "commandId",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "exitFullscreen",
                            "type": "void"
                        },
                        {
                            "name": "exitPointerLock",
                            "type": "void"
                        },
                        {
                            "name": "focus",
                            "type": "void"
                        },
                        {
                            "name": "getElementById",
                            "type": "Element",
                            "param": [
                                {
                                    "name": "elementId",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "getElementsByClassName",
                            "type": "NodeList",
                            "param": [
                                {
                                    "name": "classNames",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "getElementsByName",
                            "type": "NodeList",
                            "param": [
                                {
                                    "name": "elementName",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "getElementsByTagName",
                            "type": "NodeList",
                            "param": [
                                {
                                    "name": "tagname",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "getElementsByTagNameNS",
                            "type": "NodeList",
                            "param": [
                                {
                                    "name": "namespaceURI",
                                    "nullable": "1",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "localName",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "getSelection",
                            "type": "Selection"
                        },
                        {
                            "name": "hasFocus",
                            "type": "boolean"
                        },
                        {
                            "name": "importNode",
                            "type": "Node",
                            "param": [
                                {
                                    "name": "importedNode",
                                    "type": "Node"
                                },
                                {
                                    "name": "deep",
                                    "type": "boolean"
                                }
                            ]
                        },
                        {
                            "name": "msElementsFromPoint",
                            "type": "NodeList",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "msElementsFromRect",
                            "type": "NodeList",
                            "param": [
                                {
                                    "name": "left",
                                    "type": "float"
                                },
                                {
                                    "name": "top",
                                    "type": "float"
                                },
                                {
                                    "name": "width",
                                    "type": "float"
                                },
                                {
                                    "name": "height",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "open",
                            "type": "(Document or Window)",
                            "param": [
                                {
                                    "name": "url",
                                    "default": "\"text/html\"",
                                    "optional": "1",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "name",
                                    "optional": "1",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "features",
                                    "optional": "1",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "replace",
                                    "optional": "1",
                                    "type": "boolean"
                                }
                            ]
                        },
                        {
                            "name": "queryCommandEnabled",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "commandId",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "queryCommandIndeterm",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "commandId",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "queryCommandState",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "commandId",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "queryCommandSupported",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "commandId",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "queryCommandText",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "commandId",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "queryCommandValue",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "commandId",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "releaseEvents",
                            "type": "void"
                        },
                        {
                            "name": "updateSettings",
                            "type": "void"
                        },
                        {
                            "name": "webkitCancelFullScreen",
                            "type": "void"
                        },
                        {
                            "name": "webkitExitFullscreen",
                            "type": "void"
                        },
                        {
                            "name": "write",
                            "type": "void",
                            "param": [
                                {
                                    "name": "content",
                                    "type": "DOMString",
                                    "variadic": "1"
                                }
                            ]
                        },
                        {
                            "name": "writeln",
                            "type": "void",
                            "param": [
                                {
                                    "name": "content",
                                    "type": "DOMString",
                                    "variadic": "1"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "activeElement",
                            "read-only": "1",
                            "type": "Element"
                        },
                        {
                            "name": "alinkColor",
                            "type": "DOMString"
                        },
                        {
                            "name": "all",
                            "read-only": "1",
                            "type": "HTMLAllCollection"
                        },
                        {
                            "name": "anchors",
                            "read-only": "1",
                            "type": "HTMLCollection"
                        },
                        {
                            "name": "applets",
                            "read-only": "1",
                            "type": "HTMLCollection"
                        },
                        {
                            "name": "bgColor",
                            "type": "DOMString"
                        },
                        {
                            "name": "body",
                            "type": "HTMLElement"
                        },
                        {
                            "name": "characterSet",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "charset",
                            "type": "DOMString"
                        },
                        {
                            "name": "compatMode",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "cookie",
                            "type": "DOMString"
                        },
                        {
                            "name": "currentScript",
                            "read-only": "1",
                            "type": "(HTMLScriptElement? or SVGScriptElement?)"
                        },
                        {
                            "name": "defaultView",
                            "read-only": "1",
                            "type": "Window"
                        },
                        {
                            "name": "designMode",
                            "type": "DOMString"
                        },
                        {
                            "name": "dir",
                            "type": "DOMString"
                        },
                        {
                            "name": "doctype",
                            "read-only": "1",
                            "type": "DocumentType"
                        },
                        {
                            "name": "documentElement",
                            "read-only": "1",
                            "type": "Element"
                        },
                        {
                            "name": "domain",
                            "property-descriptor-not-configurable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "embeds",
                            "read-only": "1",
                            "type": "HTMLCollection"
                        },
                        {
                            "name": "fgColor",
                            "type": "DOMString"
                        },
                        {
                            "name": "forms",
                            "read-only": "1",
                            "type": "HTMLCollection"
                        },
                        {
                            "name": "fullscreenElement",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "Element"
                        },
                        {
                            "name": "fullscreenEnabled",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "head",
                            "read-only": "1",
                            "type": "HTMLHeadElement"
                        },
                        {
                            "name": "hidden",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "images",
                            "read-only": "1",
                            "type": "HTMLCollection"
                        },
                        {
                            "name": "implementation",
                            "read-only": "1",
                            "type": "DOMImplementation"
                        },
                        {
                            "name": "inputEncoding",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "lastModified",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "linkColor",
                            "type": "DOMString"
                        },
                        {
                            "name": "links",
                            "read-only": "1",
                            "type": "HTMLCollection"
                        },
                        {
                            "name": "location",
                            "put-forwards": "href",
                            "read-only": "1",
                            "type": "Location"
                        },
                        {
                            "name": "msCapsLockWarningOff",
                            "type": "boolean"
                        },
                        {
                            "name": "msCSSOMElementFloatMetrics",
                            "type": "boolean"
                        },
                        {
                            "name": "onabort",
                            "event-handler": "abort",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onactivate",
                            "event-handler": "activate",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onbeforeactivate",
                            "event-handler": "beforeactivate",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onbeforedeactivate",
                            "event-handler": "beforedeactivate",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onblur",
                            "event-handler": "blur",
                            "type": "EventHandler"
                        },
                        {
                            "name": "oncanplay",
                            "event-handler": "canplay",
                            "type": "EventHandler"
                        },
                        {
                            "name": "oncanplaythrough",
                            "event-handler": "canplaythrough",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onchange",
                            "event-handler": "change",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onclick",
                            "event-handler": "click",
                            "type": "EventHandler"
                        },
                        {
                            "name": "oncontextmenu",
                            "event-handler": "contextmenu",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondblclick",
                            "event-handler": "dblclick",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondeactivate",
                            "event-handler": "deactivate",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondrag",
                            "event-handler": "drag",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondragend",
                            "event-handler": "dragend",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondragenter",
                            "event-handler": "dragenter",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondragleave",
                            "event-handler": "dragleave",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondragover",
                            "event-handler": "dragover",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondragstart",
                            "event-handler": "dragstart",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondrop",
                            "event-handler": "drop",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondurationchange",
                            "event-handler": "durationchange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onemptied",
                            "event-handler": "emptied",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onended",
                            "event-handler": "ended",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onerror",
                            "event-handler": "error",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onfocus",
                            "event-handler": "focus",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onfullscreenchange",
                            "event-handler": "fullscreenchange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onfullscreenerror",
                            "event-handler": "fullscreenerror",
                            "type": "EventHandler"
                        },
                        {
                            "name": "oninput",
                            "event-handler": "input",
                            "type": "EventHandler"
                        },
                        {
                            "name": "oninvalid",
                            "event-handler": "invalid",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onkeydown",
                            "event-handler": "keydown",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onkeypress",
                            "event-handler": "keypress",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onkeyup",
                            "event-handler": "keyup",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onload",
                            "event-handler": "load",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onloadeddata",
                            "event-handler": "loadeddata",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onloadedmetadata",
                            "event-handler": "loadedmetadata",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onloadstart",
                            "event-handler": "loadstart",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmousedown",
                            "event-handler": "mousedown",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmousemove",
                            "event-handler": "mousemove",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmouseout",
                            "event-handler": "mouseout",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmouseover",
                            "event-handler": "mouseover",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmouseup",
                            "event-handler": "mouseup",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmousewheel",
                            "event-handler": "mousewheel",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmscontentzoom",
                            "event-handler": "MSContentZoom",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmsgesturechange",
                            "event-handler": "MSGestureChange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmsgesturedoubletap",
                            "event-handler": "MSGestureDoubleTap",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmsgestureend",
                            "event-handler": "MSGestureEnd",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmsgesturehold",
                            "event-handler": "MSGestureHold",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmsgesturestart",
                            "event-handler": "MSGestureStart",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmsgesturetap",
                            "event-handler": "MSGestureTap",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmsinertiastart",
                            "event-handler": "MSInertiaStart",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmsmanipulationstatechanged",
                            "event-handler": "MSManipulationStateChanged",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmspointercancel",
                            "event-handler": "MSPointerCancel",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmspointerdown",
                            "event-handler": "MSPointerDown",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmspointerenter",
                            "content-attribute": "onmspointerenter",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "MSPointerEnter",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmspointerleave",
                            "content-attribute": "onmspointerleave",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "MSPointerLeave",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmspointermove",
                            "event-handler": "MSPointerMove",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmspointerout",
                            "event-handler": "MSPointerOut",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmspointerover",
                            "event-handler": "MSPointerOver",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmspointerup",
                            "event-handler": "MSPointerUp",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmssitemodejumplistitemremoved",
                            "event-handler": "mssitemodejumplistitemremoved",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmsthumbnailclick",
                            "event-handler": "msthumbnailclick",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onpause",
                            "event-handler": "pause",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onplay",
                            "event-handler": "play",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onplaying",
                            "event-handler": "playing",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onpointerlockchange",
                            "event-handler": "pointerlockchange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onpointerlockerror",
                            "event-handler": "pointerlockerror",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onprogress",
                            "event-handler": "progress",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onratechange",
                            "event-handler": "ratechange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onreadystatechange",
                            "event-handler": "readystatechange",
                            "lenient-this": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onreset",
                            "event-handler": "reset",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onscroll",
                            "event-handler": "scroll",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onseeked",
                            "event-handler": "seeked",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onseeking",
                            "event-handler": "seeking",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onselect",
                            "event-handler": "select",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onselectionchange",
                            "event-handler": "selectionchange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onselectstart",
                            "event-handler": "selectstart",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onstalled",
                            "event-handler": "stalled",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onstop",
                            "event-handler": "stop",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onsubmit",
                            "event-handler": "submit",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onsuspend",
                            "event-handler": "suspend",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ontimeupdate",
                            "event-handler": "timeupdate",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ontouchcancel",
                            "event-handler": "touchcancel",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ontouchend",
                            "event-handler": "touchend",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ontouchmove",
                            "event-handler": "touchmove",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ontouchstart",
                            "event-handler": "touchstart",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onvolumechange",
                            "event-handler": "volumechange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onwaiting",
                            "event-handler": "waiting",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onwebkitfullscreenchange",
                            "event-handler": "webkitfullscreenchange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onwebkitfullscreenerror",
                            "event-handler": "webkitfullscreenerror",
                            "type": "EventHandler"
                        },
                        {
                            "name": "plugins",
                            "read-only": "1",
                            "type": "HTMLCollection"
                        },
                        {
                            "name": "pointerLockElement",
                            "read-only": "1",
                            "type": "Element"
                        },
                        {
                            "name": "readyState",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "referrer",
                            "property-descriptor-not-configurable": "1",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "rootElement",
                            "read-only": "1",
                            "type": "SVGSVGElement"
                        },
                        {
                            "name": "scripts",
                            "read-only": "1",
                            "type": "HTMLCollection"
                        },
                        {
                            "name": "scrollingElement",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "Element"
                        },
                        {
                            "name": "styleSheets",
                            "read-only": "1",
                            "type": "StyleSheetList"
                        },
                        {
                            "name": "title",
                            "type": "DOMString"
                        },
                        {
                            "name": "URL",
                            "property-descriptor-not-configurable": "1",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "URLUnencoded",
                            "property-descriptor-not-configurable": "1",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "visibilityState",
                            "read-only": "1",
                            "type": "VisibilityState"
                        },
                        {
                            "name": "vlinkColor",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitCurrentFullScreenElement",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "Element"
                        },
                        {
                            "name": "webkitFullscreenElement",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "Element"
                        },
                        {
                            "name": "webkitFullscreenEnabled",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "webkitIsFullScreen",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "xmlEncoding",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "xmlStandalone",
                            "type": "boolean"
                        },
                        {
                            "name": "xmlVersion",
                            "nullable": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "DocumentFragment",
                "extends": "Node",
                "implements": [
                    "NodeSelector"
                ]
            },
            {
                "name": "DocumentType",
                "extends": "Node",
                "implements": [
                    "ChildNode"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "entities",
                            "read-only": "1",
                            "type": "NamedNodeMap"
                        },
                        {
                            "name": "internalSubset",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "name",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "notations",
                            "read-only": "1",
                            "type": "NamedNodeMap"
                        },
                        {
                            "name": "publicId",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "systemId",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "DOMError",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "toString",
                            "stringifier": "1",
                            "type": "DOMString"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "name",
                            "read-only": "1",
                            "stringifier": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "DOMException",
                "extends": "Object",
                "constants": {
                    "constant": [
                        {
                            "name": "ABORT_ERR",
                            "type": "unsigned short",
                            "value": [
                                "20"
                            ]
                        },
                        {
                            "name": "DATA_CLONE_ERR",
                            "type": "unsigned short",
                            "value": [
                                "25"
                            ]
                        },
                        {
                            "name": "DOMSTRING_SIZE_ERR",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "HIERARCHY_REQUEST_ERR",
                            "type": "unsigned short",
                            "value": [
                                "3"
                            ]
                        },
                        {
                            "name": "INDEX_SIZE_ERR",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "INUSE_ATTRIBUTE_ERR",
                            "type": "unsigned short",
                            "value": [
                                "10"
                            ]
                        },
                        {
                            "name": "INVALID_ACCESS_ERR",
                            "type": "unsigned short",
                            "value": [
                                "15"
                            ]
                        },
                        {
                            "name": "INVALID_CHARACTER_ERR",
                            "type": "unsigned short",
                            "value": [
                                "5"
                            ]
                        },
                        {
                            "name": "INVALID_MODIFICATION_ERR",
                            "type": "unsigned short",
                            "value": [
                                "13"
                            ]
                        },
                        {
                            "name": "INVALID_NODE_TYPE_ERR",
                            "type": "unsigned short",
                            "value": [
                                "24"
                            ]
                        },
                        {
                            "name": "INVALID_STATE_ERR",
                            "type": "unsigned short",
                            "value": [
                                "11"
                            ]
                        },
                        {
                            "name": "NAMESPACE_ERR",
                            "type": "unsigned short",
                            "value": [
                                "14"
                            ]
                        },
                        {
                            "name": "NETWORK_ERR",
                            "type": "unsigned short",
                            "value": [
                                "19"
                            ]
                        },
                        {
                            "name": "NO_DATA_ALLOWED_ERR",
                            "type": "unsigned short",
                            "value": [
                                "6"
                            ]
                        },
                        {
                            "name": "NO_MODIFICATION_ALLOWED_ERR",
                            "type": "unsigned short",
                            "value": [
                                "7"
                            ]
                        },
                        {
                            "name": "NOT_FOUND_ERR",
                            "type": "unsigned short",
                            "value": [
                                "8"
                            ]
                        },
                        {
                            "name": "NOT_SUPPORTED_ERR",
                            "type": "unsigned short",
                            "value": [
                                "9"
                            ]
                        },
                        {
                            "name": "PARSE_ERR",
                            "type": "unsigned short",
                            "value": [
                                "81"
                            ]
                        },
                        {
                            "name": "QUOTA_EXCEEDED_ERR",
                            "type": "unsigned short",
                            "value": [
                                "22"
                            ]
                        },
                        {
                            "name": "SECURITY_ERR",
                            "type": "unsigned short",
                            "value": [
                                "18"
                            ]
                        },
                        {
                            "name": "SERIALIZE_ERR",
                            "type": "unsigned short",
                            "value": [
                                "82"
                            ]
                        },
                        {
                            "name": "SYNTAX_ERR",
                            "type": "unsigned short",
                            "value": [
                                "12"
                            ]
                        },
                        {
                            "name": "TIMEOUT_ERR",
                            "type": "unsigned short",
                            "value": [
                                "23"
                            ]
                        },
                        {
                            "name": "TYPE_MISMATCH_ERR",
                            "type": "unsigned short",
                            "value": [
                                "17"
                            ]
                        },
                        {
                            "name": "URL_MISMATCH_ERR",
                            "type": "unsigned short",
                            "value": [
                                "21"
                            ]
                        },
                        {
                            "name": "VALIDATION_ERR",
                            "type": "unsigned short",
                            "value": [
                                "16"
                            ]
                        },
                        {
                            "name": "WRONG_DOCUMENT_ERR",
                            "type": "unsigned short",
                            "value": [
                                "4"
                            ]
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "toString",
                            "stringifier": "1",
                            "type": "DOMString"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "code",
                            "read-only": "1",
                            "type": "unsigned short"
                        },
                        {
                            "name": "message",
                            "read-only": "1",
                            "stringifier": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "name",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "DOMImplementation",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "createDocument",
                            "type": "Document",
                            "param": [
                                {
                                    "name": "namespaceURI",
                                    "nullable": "1",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "qualifiedName",
                                    "nullable": "1",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "doctype",
                                    "type": "DocumentType"
                                }
                            ]
                        },
                        {
                            "name": "createDocumentType",
                            "type": "DocumentType",
                            "param": [
                                {
                                    "name": "qualifiedName",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "publicId",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "systemId",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "createHTMLDocument",
                            "type": "Document",
                            "param": [
                                {
                                    "name": "title",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "hasFeature",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "DOMParser",
                "extends": "Object",
                "constructor": {},
                "methods": {
                    "method": [
                        {
                            "name": "parseFromString",
                            "type": "Document",
                            "param": [
                                {
                                    "name": "source",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "mimeType",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "DOMSettableTokenList",
                "extends": "DOMTokenList",
                "properties": {
                    "property": [
                        {
                            "name": "value",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "DOMStringList",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "contains",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "str",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "item",
                            "getter": "1",
                            "nullable": "1",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "length",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "DOMStringMap",
                "extends": "Object",
                "anonymous-methods": {
                    "method": [
                        {
                            "getter": "1",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "creator": "1",
                            "setter": "1",
                            "type": "void",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "value",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "deleter": "1",
                            "type": "void",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "DOMTokenList",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "add",
                            "type": "void",
                            "param": [
                                {
                                    "name": "token",
                                    "type": "DOMString",
                                    "variadic": "1"
                                }
                            ]
                        },
                        {
                            "name": "contains",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "token",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "item",
                            "getter": "1",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "remove",
                            "type": "void",
                            "param": [
                                {
                                    "name": "token",
                                    "type": "DOMString",
                                    "variadic": "1"
                                }
                            ]
                        },
                        {
                            "name": "toggle",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "token",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "force",
                                    "optional": "1",
                                    "type": "boolean"
                                }
                            ]
                        },
                        {
                            "name": "toString",
                            "stringifier": "1",
                            "type": "DOMString"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "length",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "DragEvent",
                "extends": "MouseEvent",
                "methods": {
                    "method": [
                        {
                            "name": "initDragEvent",
                            "type": "void",
                            "param": [
                                {
                                    "name": "typeArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "canBubbleArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "cancelableArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "viewArg",
                                    "type": "Window"
                                },
                                {
                                    "name": "detailArg",
                                    "type": "long"
                                },
                                {
                                    "name": "screenXArg",
                                    "type": "long"
                                },
                                {
                                    "name": "screenYArg",
                                    "type": "long"
                                },
                                {
                                    "name": "clientXArg",
                                    "type": "long"
                                },
                                {
                                    "name": "clientYArg",
                                    "type": "long"
                                },
                                {
                                    "name": "ctrlKeyArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "altKeyArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "shiftKeyArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "metaKeyArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "buttonArg",
                                    "type": "unsigned short"
                                },
                                {
                                    "name": "relatedTargetArg",
                                    "type": "EventTarget"
                                },
                                {
                                    "name": "dataTransferArg",
                                    "type": "DataTransfer"
                                }
                            ]
                        },
                        {
                            "name": "msConvertURL",
                            "type": "void",
                            "param": [
                                {
                                    "name": "file",
                                    "type": "File"
                                },
                                {
                                    "name": "targetType",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "targetURL",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "dataTransfer",
                            "read-only": "1",
                            "type": "DataTransfer"
                        }
                    ]
                }
            },
            {
                "name": "DynamicsCompressorNode",
                "extends": "AudioNode",
                "properties": {
                    "property": [
                        {
                            "name": "attack",
                            "read-only": "1",
                            "type": "AudioParam"
                        },
                        {
                            "name": "knee",
                            "read-only": "1",
                            "type": "AudioParam"
                        },
                        {
                            "name": "ratio",
                            "read-only": "1",
                            "type": "AudioParam"
                        },
                        {
                            "name": "reduction",
                            "read-only": "1",
                            "type": "float"
                        },
                        {
                            "name": "release",
                            "read-only": "1",
                            "type": "AudioParam"
                        },
                        {
                            "name": "threshold",
                            "read-only": "1",
                            "type": "AudioParam"
                        }
                    ]
                }
            },
            {
                "name": "Element",
                "extends": "Node",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "name": "title"
                        },
                        {
                            "name": "xml:id"
                        },
                        {
                            "name": "xml:base",
                            "value-syntax": "url"
                        },
                        {
                            "name": "xml:lang"
                        },
                        {
                            "name": "aria-activedescendant",
                            "value-syntax": "id_ref"
                        },
                        {
                            "enum-values": "false true",
                            "name": "aria-atomic",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none inline list both",
                            "name": "aria-autocomplete",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "false true",
                            "name": "aria-busy",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "true false mixed",
                            "name": "aria-checked",
                            "value-syntax": "enum"
                        },
                        {
                            "name": "aria-controls",
                            "value-syntax": "space_separated_id_refs"
                        },
                        {
                            "name": "aria-describedby",
                            "value-syntax": "space_separated_id_refs"
                        },
                        {
                            "enum-values": "false true",
                            "name": "aria-disabled",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none copy move link execute popup",
                            "name": "aria-dropeffect",
                            "value-syntax": "space_separated_enums"
                        },
                        {
                            "enum-values": "undefined true false",
                            "name": "aria-expanded",
                            "value-syntax": "enum"
                        },
                        {
                            "name": "aria-flowto",
                            "value-syntax": "space_separated_id_refs"
                        },
                        {
                            "enum-values": "undefined true false",
                            "name": "aria-grabbed",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "false true",
                            "name": "aria-haspopup",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "false true",
                            "name": "aria-hidden",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "false grammar spelling true",
                            "name": "aria-invalid",
                            "value-syntax": "enum"
                        },
                        {
                            "name": "aria-label"
                        },
                        {
                            "name": "aria-labelledby",
                            "value-syntax": "space_separated_id_refs"
                        },
                        {
                            "name": "aria-level",
                            "value-syntax": "non_negative_integer"
                        },
                        {
                            "enum-values": "off polite assertive",
                            "name": "aria-live",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "false true",
                            "name": "aria-multiline",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "false true",
                            "name": "aria-multiselectable",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "horizontal vertical",
                            "name": "aria-orientation",
                            "value-syntax": "enum"
                        },
                        {
                            "name": "aria-owns",
                            "value-syntax": "space_separated_id_refs"
                        },
                        {
                            "name": "aria-posinset",
                            "value-syntax": "non_negative_integer"
                        },
                        {
                            "enum-values": "true false mixed",
                            "name": "aria-pressed",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "false true",
                            "name": "aria-readonly",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "additions removals text all",
                            "name": "aria-relevant",
                            "value-syntax": "space_separated_enums"
                        },
                        {
                            "enum-values": "false true",
                            "name": "aria-required",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "undefined true false",
                            "name": "aria-selected",
                            "value-syntax": "enum"
                        },
                        {
                            "name": "aria-setsize",
                            "value-syntax": "non_negative_integer"
                        },
                        {
                            "enum-values": "none ascending descending other",
                            "name": "aria-sort",
                            "value-syntax": "enum"
                        },
                        {
                            "name": "aria-valuemax",
                            "value-syntax": "floating_point_number"
                        },
                        {
                            "name": "aria-valuemin",
                            "value-syntax": "floating_point_number"
                        },
                        {
                            "name": "aria-valuenow",
                            "value-syntax": "floating_point_number"
                        },
                        {
                            "name": "x-ms-aria-flowfrom",
                            "value-syntax": "space_separated_id_refs"
                        },
                        {
                            "enum-values": "alert alertdialog application article banner button checkbox columnheader combobox complementary contentinfo definition dialog directory document form grid gridcell group heading img link list listbox listitem log main marquee math menu menubar menuitem menuitemcheckbox menuitemradio navigation note option presentation progressbar radio radiogroup region row rowgroup rowheader scrollbar search separator slider spinbutton status tab tablist tabpanel textbox timer toolbar tooltip tree treegrid treeitem",
                            "name": "role",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "events": {
                    "event": [
                        {
                            "name": "click",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "follows": "mouseup pointerup MSPointerUp",
                            "precedes": "dblclick",
                            "type": "MouseEvent"
                        },
                        {
                            "name": "dblclick",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "follows": "click",
                            "type": "MouseEvent"
                        },
                        {
                            "name": "mousemove",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "type": "MouseEvent"
                        },
                        {
                            "name": "mouseover",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "precedes": "mouseout",
                            "type": "MouseEvent"
                        },
                        {
                            "name": "mouseout",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "follows": "mouseover",
                            "type": "MouseEvent"
                        },
                        {
                            "name": "mousedown",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "precedes": "mouseup",
                            "type": "MouseEvent"
                        },
                        {
                            "name": "mouseup",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "follows": "mousedown",
                            "precedes": "click",
                            "type": "MouseEvent"
                        },
                        {
                            "name": "mouseenter",
                            "dispatch": "sync",
                            "precedes": "mouseleave",
                            "type": "MouseEvent"
                        },
                        {
                            "name": "mouseleave",
                            "dispatch": "sync",
                            "follows": "mouseenter",
                            "type": "MouseEvent"
                        },
                        {
                            "name": "MSHoldVisual",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "tags": "IEOnly",
                            "type": "MouseEvent"
                        },
                        {
                            "name": "wheel",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "type": "WheelEvent"
                        },
                        {
                            "name": "mousewheel",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "type": "WheelEvent"
                        },
                        {
                            "name": "MSPointerDown",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "precedes": "MSPointerMove",
                            "tags": "IEOnly",
                            "type": "MSPointerEvent"
                        },
                        {
                            "name": "MSPointerMove",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "follows": "MSPointerDown",
                            "precedes": "MSPointerUp MSPointerCancel",
                            "tags": "IEOnly",
                            "type": "MSPointerEvent"
                        },
                        {
                            "name": "MSPointerUp",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "follows": "MSPointerMove",
                            "precedes": "click",
                            "tags": "IEOnly",
                            "type": "MSPointerEvent"
                        },
                        {
                            "name": "MSPointerOver",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "precedes": "MSPointerOut",
                            "tags": "IEOnly",
                            "type": "MSPointerEvent"
                        },
                        {
                            "name": "MSPointerOut",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "follows": "MSPointerOver",
                            "tags": "IEOnly",
                            "type": "MSPointerEvent"
                        },
                        {
                            "name": "MSPointerCancel",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "follows": "MSPointerMove",
                            "tags": "IEOnly",
                            "type": "MSPointerEvent"
                        },
                        {
                            "name": "MSPointerHover",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "tags": "IEOnly",
                            "type": "MSPointerEvent"
                        },
                        {
                            "name": "MSGotPointerCapture",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "precedes": "MSLostPointerCapture",
                            "tags": "IEOnly",
                            "type": "MSPointerEvent"
                        },
                        {
                            "name": "MSLostPointerCapture",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "follows": "MSGotPointerCapture",
                            "tags": "IEOnly",
                            "type": "MSPointerEvent"
                        },
                        {
                            "name": "MSPointerEnter",
                            "dispatch": "sync",
                            "precedes": "MSPointerLeave",
                            "tags": "IEOnly",
                            "type": "MSPointerEvent"
                        },
                        {
                            "name": "MSPointerLeave",
                            "dispatch": "sync",
                            "follows": "MSPointerEnter",
                            "tags": "IEOnly",
                            "type": "MSPointerEvent"
                        },
                        {
                            "name": "MSGestureStart",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "precedes": "MSGestureChange",
                            "type": "MSGestureEvent"
                        },
                        {
                            "name": "MSGestureChange",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "follows": "MSGestureStart",
                            "precedes": "MSInertiaStart MSGestureEnd",
                            "type": "MSGestureEvent"
                        },
                        {
                            "name": "MSGestureEnd",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "follows": "MSGestureChange",
                            "type": "MSGestureEvent"
                        },
                        {
                            "name": "MSGestureHold",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "type": "MSGestureEvent"
                        },
                        {
                            "name": "MSGestureTap",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "type": "MSGestureEvent"
                        },
                        {
                            "name": "MSGestureDoubleTap",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "type": "MSGestureEvent"
                        },
                        {
                            "name": "MSInertiaStart",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "follows": "MSGestureChange",
                            "type": "MSGestureEvent"
                        },
                        {
                            "name": "pointerenter",
                            "aliases": "MSPointerEnter",
                            "dispatch": "sync",
                            "precedes": "pointerleave",
                            "type": "PointerEvent"
                        },
                        {
                            "name": "pointerleave",
                            "aliases": "MSPointerLeave",
                            "dispatch": "sync",
                            "follows": "pointerenter",
                            "type": "PointerEvent"
                        },
                        {
                            "name": "pointerdown",
                            "aliases": "MSPointerDown",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "precedes": "pointermove",
                            "type": "PointerEvent"
                        },
                        {
                            "name": "pointermove",
                            "aliases": "MSPointerMove",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "follows": "pointerdown",
                            "precedes": "pointerup pointercancel",
                            "type": "PointerEvent"
                        },
                        {
                            "name": "pointerup",
                            "aliases": "MSPointerUp",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "follows": "pointermove",
                            "precedes": "click",
                            "type": "PointerEvent"
                        },
                        {
                            "name": "pointerover",
                            "aliases": "MSPointerOver",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "precedes": "pointerout",
                            "type": "PointerEvent"
                        },
                        {
                            "name": "pointerout",
                            "aliases": "MSPointerOut",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "follows": "pointerover",
                            "type": "PointerEvent"
                        },
                        {
                            "name": "pointercancel",
                            "aliases": "MSPointerCancel",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "follows": "pointermove",
                            "type": "PointerEvent"
                        },
                        {
                            "name": "gotpointercapture",
                            "aliases": "MSGotPointerCapture",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "precedes": "lostpointercapture",
                            "type": "PointerEvent"
                        },
                        {
                            "name": "lostpointercapture",
                            "aliases": "MSLostPointerCapture",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "follows": "gotpointercapture",
                            "type": "PointerEvent"
                        },
                        {
                            "name": "contextmenu",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "type": "PointerEvent"
                        },
                        {
                            "name": "touchstart",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "precedes": "touchmove",
                            "tags": "WinPhoneOnly",
                            "type": "TouchEvent"
                        },
                        {
                            "name": "touchend",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "follows": "touchmove",
                            "tags": "WinPhoneOnly",
                            "type": "TouchEvent"
                        },
                        {
                            "name": "touchmove",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "follows": "touchstart",
                            "precedes": "touchend touchcancel",
                            "tags": "WinPhoneOnly",
                            "type": "TouchEvent"
                        },
                        {
                            "name": "touchcancel",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "follows": "touchmove",
                            "tags": "WinPhoneOnly",
                            "type": "TouchEvent"
                        },
                        {
                            "name": "selectstart",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "precedes": "select selectionchange",
                            "tags": "IEOnly",
                            "type": "Event"
                        },
                        {
                            "name": "select",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "follows": "selectstart selectionchange",
                            "type": "UIEvent"
                        },
                        {
                            "name": "mscontrolselect",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "tags": "IEOnly",
                            "type": "UIEvent"
                        },
                        {
                            "name": "mscontrolresizestart",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "precedes": "mscontrolresizeend",
                            "tags": "IEOnly",
                            "type": "UIEvent"
                        },
                        {
                            "name": "mscontrolresizeend",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "follows": "mscontrolresizestart",
                            "tags": "IEOnly",
                            "type": "UIEvent"
                        },
                        {
                            "name": "msbeforeeditfocus",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "tags": "IEOnly",
                            "type": "UIEvent"
                        },
                        {
                            "name": "keyup",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "follows": "keydown keypress",
                            "type": "KeyboardEvent"
                        },
                        {
                            "name": "keydown",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "precedes": "keyup keypress",
                            "type": "KeyboardEvent"
                        },
                        {
                            "name": "keypress",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "follows": "keydown",
                            "precedes": "keyup",
                            "type": "KeyboardEvent"
                        },
                        {
                            "name": "textInput",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "type": "TextEvent"
                        },
                        {
                            "name": "compositionstart",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "precedes": "compositionupdate compositionend",
                            "type": "CompositionEvent"
                        },
                        {
                            "name": "compositionupdate",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "follows": "compositionstart",
                            "precedes": "compositionend",
                            "type": "CompositionEvent"
                        },
                        {
                            "name": "compositionend",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "follows": "compositionstart compositionupdate",
                            "type": "CompositionEvent"
                        },
                        {
                            "name": "drag",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "follows": "dragstart",
                            "precedes": "dragend",
                            "type": "DragEvent"
                        },
                        {
                            "name": "dragstart",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "precedes": "drag",
                            "type": "DragEvent"
                        },
                        {
                            "name": "dragenter",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "follows": "drag",
                            "precedes": "dragover drop",
                            "type": "DragEvent"
                        },
                        {
                            "name": "dragover",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "follows": "dragenter",
                            "precedes": "dragleave drop",
                            "type": "DragEvent"
                        },
                        {
                            "name": "dragleave",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "follows": "dragover",
                            "precedes": "drag",
                            "type": "DragEvent"
                        },
                        {
                            "name": "dragend",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "follows": "drag",
                            "type": "DragEvent"
                        },
                        {
                            "name": "drop",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "follows": "dragenter dragover",
                            "type": "DragEvent"
                        },
                        {
                            "name": "copy",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "follows": "beforecopy",
                            "type": "ClipboardEvent"
                        },
                        {
                            "name": "cut",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "follows": "beforecut",
                            "type": "ClipboardEvent"
                        },
                        {
                            "name": "paste",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "follows": "beforepaste",
                            "type": "ClipboardEvent"
                        },
                        {
                            "name": "beforecopy",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "precedes": "copy",
                            "tags": "IEOnly",
                            "type": "ClipboardEvent"
                        },
                        {
                            "name": "beforecut",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "precedes": "cut",
                            "tags": "IEOnly",
                            "type": "ClipboardEvent"
                        },
                        {
                            "name": "beforepaste",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "precedes": "paste",
                            "tags": "IEOnly",
                            "type": "ClipboardEvent"
                        },
                        {
                            "name": "focus",
                            "dispatch": "sync",
                            "precedes": "blur",
                            "type": "FocusEvent"
                        },
                        {
                            "name": "blur",
                            "dispatch": "sync",
                            "follows": "focus",
                            "type": "FocusEvent"
                        },
                        {
                            "name": "focusin",
                            "aliases": "DOMFocusIn",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "precedes": "focusout",
                            "type": "FocusEvent"
                        },
                        {
                            "name": "focusout",
                            "aliases": "DOMFocusOut",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "follows": "focusin",
                            "type": "FocusEvent"
                        },
                        {
                            "name": "activate",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "follows": "beforeactivate",
                            "precedes": "beforedeactivate",
                            "tags": "IEOnly",
                            "type": "UIEvent"
                        },
                        {
                            "name": "deactivate",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "follows": "beforedeactivate",
                            "tags": "IEOnly",
                            "type": "UIEvent"
                        },
                        {
                            "name": "beforeactivate",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "precedes": "activate",
                            "tags": "IEOnly",
                            "type": "UIEvent"
                        },
                        {
                            "name": "beforedeactivate",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "follows": "activate",
                            "precedes": "deactivate",
                            "tags": "IEOnly",
                            "type": "UIEvent"
                        },
                        {
                            "name": "mselementresize",
                            "dispatch": "sync",
                            "tags": "IEOnly",
                            "type": "Event"
                        },
                        {
                            "name": "scroll",
                            "dispatch": "async",
                            "type": "UIEvent"
                        },
                        {
                            "name": "MSManipulationStateChanged",
                            "dispatch": "async",
                            "tags": "IEOnly",
                            "type": "MSManipulationEvent"
                        },
                        {
                            "name": "MSContentZoom",
                            "dispatch": "async",
                            "tags": "IEOnly",
                            "type": "UIEvent"
                        },
                        {
                            "name": "MSRegionUpdate",
                            "bubbles": "1",
                            "dispatch": "async",
                            "tags": "IEOnly",
                            "type": "Event"
                        },
                        {
                            "name": "transitionstart",
                            "aliases": "MSTransitionStart webkitTransitionStart",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "async",
                            "precedes": "transitionend",
                            "type": "TransitionEvent"
                        },
                        {
                            "name": "transitionend",
                            "aliases": "MSTransitionEnd webkitTransitionEnd",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "async",
                            "follows": "transitionstart",
                            "type": "TransitionEvent"
                        },
                        {
                            "name": "animationstart",
                            "aliases": "MSAnimationStart webkitAnimationStart",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "async",
                            "precedes": "animationend animationiteration",
                            "type": "AnimationEvent"
                        },
                        {
                            "name": "animationend",
                            "aliases": "MSAnimationEnd webkitAnimationEnd",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "async",
                            "follows": "animationstart animationiteration",
                            "type": "AnimationEvent"
                        },
                        {
                            "name": "animationiteration",
                            "aliases": "MSAnimationIteration webkitAnimationIteration",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "async",
                            "follows": "animationstart",
                            "precedes": "animationend",
                            "type": "AnimationEvent"
                        },
                        {
                            "name": "DOMAttrModified",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "type": "MutationEvent"
                        },
                        {
                            "name": "DOMNodeInserted",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "type": "MutationEvent"
                        },
                        {
                            "name": "DOMNodeRemoved",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "type": "MutationEvent"
                        },
                        {
                            "name": "DOMSubtreeModified",
                            "bubbles": "1",
                            "dispatch": "async-and-combine",
                            "type": "MutationEvent"
                        },
                        {
                            "name": "overflowchanged",
                            "dispatch": "async",
                            "type": "OverflowEvent"
                        }
                    ]
                },
                "implements": [
                    "GlobalEventHandlers",
                    "ElementTraversal",
                    "NodeSelector",
                    "ChildNode"
                ],
                "methods": {
                    "method": [
                        {
                            "name": "getAttribute",
                            "nullable": "1",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "qualifiedName",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "getAttributeNode",
                            "type": "Attr",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "getAttributeNodeNS",
                            "type": "Attr",
                            "param": [
                                {
                                    "name": "namespaceURI",
                                    "treat-null-as": "EmptyString",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "localName",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "getAttributeNS",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "namespaceURI",
                                    "treat-null-as": "EmptyString",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "localName",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "getBoundingClientRect",
                            "type": "ClientRect"
                        },
                        {
                            "name": "getClientRects",
                            "type": "ClientRectList"
                        },
                        {
                            "name": "getElementsByTagName",
                            "type": "NodeList",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "getElementsByTagNameNS",
                            "type": "NodeList",
                            "param": [
                                {
                                    "name": "namespaceURI",
                                    "nullable": "1",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "localName",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "hasAttribute",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "hasAttributeNS",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "namespaceURI",
                                    "treat-null-as": "EmptyString",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "localName",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "msGetRegionContent",
                            "type": "MSRangeCollection"
                        },
                        {
                            "name": "msGetUntransformedBounds",
                            "type": "ClientRect"
                        },
                        {
                            "name": "msMatchesSelector",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "selectors",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "msReleasePointerCapture",
                            "type": "void",
                            "param": [
                                {
                                    "name": "pointerId",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "msSetPointerCapture",
                            "type": "void",
                            "param": [
                                {
                                    "name": "pointerId",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "msZoomTo",
                            "type": "void",
                            "param": [
                                {
                                    "name": "args",
                                    "type": "MsZoomToOptions"
                                }
                            ]
                        },
                        {
                            "name": "releasePointerCapture",
                            "type": "void",
                            "param": [
                                {
                                    "name": "pointerId",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "removeAttribute",
                            "type": "void",
                            "param": [
                                {
                                    "name": "qualifiedName",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "removeAttributeNode",
                            "type": "Attr",
                            "param": [
                                {
                                    "name": "oldAttr",
                                    "type": "Attr"
                                }
                            ]
                        },
                        {
                            "name": "removeAttributeNS",
                            "type": "void",
                            "param": [
                                {
                                    "name": "namespaceURI",
                                    "treat-null-as": "EmptyString",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "localName",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "requestFullscreen",
                            "type": "void"
                        },
                        {
                            "name": "requestPointerLock",
                            "type": "void"
                        },
                        {
                            "name": "setAttribute",
                            "type": "void",
                            "param": [
                                {
                                    "name": "qualifiedName",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "value",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "setAttributeNode",
                            "type": "Attr",
                            "param": [
                                {
                                    "name": "newAttr",
                                    "type": "Attr"
                                }
                            ]
                        },
                        {
                            "name": "setAttributeNodeNS",
                            "type": "Attr",
                            "param": [
                                {
                                    "name": "newAttr",
                                    "type": "Attr"
                                }
                            ]
                        },
                        {
                            "name": "setAttributeNS",
                            "type": "void",
                            "param": [
                                {
                                    "name": "namespaceURI",
                                    "treat-null-as": "EmptyString",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "qualifiedName",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "value",
                                    "treat-null-as": "EmptyString",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "setPointerCapture",
                            "type": "void",
                            "param": [
                                {
                                    "name": "pointerId",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "webkitMatchesSelector",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "selectors",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "webkitRequestFullscreen",
                            "type": "void"
                        },
                        {
                            "name": "webkitRequestFullScreen",
                            "type": "void"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "classList",
                            "content-attribute": "class",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "space_separated_tokens",
                            "read-only": "1",
                            "type": "DOMTokenList"
                        },
                        {
                            "name": "className",
                            "content-attribute": "class",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "space_separated_tokens",
                            "type": "DOMString"
                        },
                        {
                            "name": "clientHeight",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "clientLeft",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "clientTop",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "clientWidth",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "id",
                            "content-attribute": "id",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "innerHTML",
                            "treat-null-as": "EmptyString",
                            "type": "DOMString"
                        },
                        {
                            "name": "msContentZoomFactor",
                            "type": "float"
                        },
                        {
                            "name": "msRegionOverflow",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "onariarequest",
                            "event-handler": "ariarequest",
                            "type": "EventHandler"
                        },
                        {
                            "name": "oncommand",
                            "event-handler": "command",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ongotpointercapture",
                            "content-attribute": "ongotpointercapture",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "gotpointercapture",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onlostpointercapture",
                            "content-attribute": "onlostpointercapture",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "lostpointercapture",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmsgesturechange",
                            "content-attribute": "onmsgesturechange",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "MSGestureChange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmsgesturedoubletap",
                            "content-attribute": "onmsgesturedoubletap",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "MSGestureDoubleTap",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmsgestureend",
                            "content-attribute": "onmsgestureend",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "MSGestureEnd",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmsgesturehold",
                            "content-attribute": "onmsgesturehold",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "MSGestureHold",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmsgesturestart",
                            "content-attribute": "onmsgesturestart",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "MSGestureStart",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmsgesturetap",
                            "content-attribute": "onmsgesturetap",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "MSGestureTap",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmsgotpointercapture",
                            "content-attribute": "onmsgotpointercapture",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "MSGotPointerCapture",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmsinertiastart",
                            "content-attribute": "onmsinertiastart",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "MSInertiaStart",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmslostpointercapture",
                            "content-attribute": "onmslostpointercapture",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "MSLostPointerCapture",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmspointercancel",
                            "content-attribute": "onmspointercancel",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "MSPointerCancel",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmspointerdown",
                            "content-attribute": "onmspointerdown",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "MSPointerDown",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmspointerenter",
                            "content-attribute": "onmspointerenter",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "MSPointerEnter",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmspointerleave",
                            "content-attribute": "onmspointerleave",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "MSPointerLeave",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmspointermove",
                            "content-attribute": "onmspointermove",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "MSPointerMove",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmspointerout",
                            "content-attribute": "onmspointerout",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "MSPointerOut",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmspointerover",
                            "content-attribute": "onmspointerover",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "MSPointerOver",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmspointerup",
                            "content-attribute": "onmspointerup",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "MSPointerUp",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ontouchcancel",
                            "content-attribute": "ontouchcancel",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "touchcancel",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ontouchend",
                            "content-attribute": "ontouchend",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "touchend",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ontouchmove",
                            "content-attribute": "ontouchmove",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "touchmove",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ontouchstart",
                            "content-attribute": "ontouchstart",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "touchstart",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onwebkitfullscreenchange",
                            "event-handler": "webkitfullscreenchange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onwebkitfullscreenerror",
                            "event-handler": "webkitfullscreenerror",
                            "type": "EventHandler"
                        },
                        {
                            "name": "outerHTML",
                            "treat-null-as": "EmptyString",
                            "type": "DOMString"
                        },
                        {
                            "name": "prefix",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "scrollHeight",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "scrollLeft",
                            "type": "long"
                        },
                        {
                            "name": "scrollTop",
                            "type": "long"
                        },
                        {
                            "name": "scrollWidth",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "tagName",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "ErrorEvent",
                "extends": "Event",
                "constructor": {
                    "param": [
                        {
                            "name": "typeArg",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "optional": "1",
                            "type": "ErrorEventInit"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "initErrorEvent",
                            "type": "void",
                            "param": [
                                {
                                    "name": "typeArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "canBubbleArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "cancelableArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "messageArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "filenameArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "linenoArg",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "colno",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "error",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "any"
                        },
                        {
                            "name": "filename",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "lineno",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "message",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "Event",
                "extends": "Object",
                "constants": {
                    "constant": [
                        {
                            "name": "AT_TARGET",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "BUBBLING_PHASE",
                            "type": "unsigned short",
                            "value": [
                                "3"
                            ]
                        },
                        {
                            "name": "CAPTURING_PHASE",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        }
                    ]
                },
                "constructor": {
                    "param": [
                        {
                            "name": "typeArg",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "optional": "1",
                            "type": "EventInit"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "initEvent",
                            "type": "void",
                            "param": [
                                {
                                    "name": "eventTypeArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "canBubbleArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "cancelableArg",
                                    "type": "boolean"
                                }
                            ]
                        },
                        {
                            "name": "preventDefault",
                            "type": "void"
                        },
                        {
                            "name": "stopImmediatePropagation",
                            "type": "void"
                        },
                        {
                            "name": "stopPropagation",
                            "type": "void"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "bubbles",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "cancelable",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "cancelBubble",
                            "type": "boolean"
                        },
                        {
                            "name": "currentTarget",
                            "read-only": "1",
                            "type": "EventTarget"
                        },
                        {
                            "name": "defaultPrevented",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "eventPhase",
                            "read-only": "1",
                            "type": "unsigned short"
                        },
                        {
                            "name": "isTrusted",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "returnValue",
                            "type": "boolean"
                        },
                        {
                            "name": "srcElement",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "Element"
                        },
                        {
                            "name": "target",
                            "read-only": "1",
                            "type": "EventTarget"
                        },
                        {
                            "name": "timeStamp",
                            "read-only": "1",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "type",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "EventTarget",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "addEventListener",
                            "type": "void",
                            "param": [
                                {
                                    "name": "type",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "listener",
                                    "nullable": "1",
                                    "optional": "1",
                                    "type": "EventListener"
                                },
                                {
                                    "name": "useCapture",
                                    "default": "FALSE",
                                    "optional": "1",
                                    "type": "boolean"
                                }
                            ]
                        },
                        {
                            "name": "dispatchEvent",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "evt",
                                    "type": "Event"
                                }
                            ]
                        },
                        {
                            "name": "removeEventListener",
                            "type": "void",
                            "param": [
                                {
                                    "name": "type",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "listener",
                                    "nullable": "1",
                                    "optional": "1",
                                    "type": "EventListener"
                                },
                                {
                                    "name": "useCapture",
                                    "default": "FALSE",
                                    "optional": "1",
                                    "type": "boolean"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "EXT_frag_depth",
                "extends": "Object"
            },
            {
                "name": "EXT_texture_filter_anisotropic",
                "extends": "Object",
                "constants": {
                    "constant": [
                        {
                            "name": "MAX_TEXTURE_MAX_ANISOTROPY_EXT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84FF"
                            ]
                        },
                        {
                            "name": "TEXTURE_MAX_ANISOTROPY_EXT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84FE"
                            ]
                        }
                    ]
                }
            },
            {
                "name": "ExtensionScriptApis",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "extensionIdToShortId",
                            "type": "long",
                            "param": [
                                {
                                    "name": "extensionId",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "fireExtensionApiTelemetry",
                            "type": "void",
                            "param": [
                                {
                                    "name": "functionName",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "isSucceeded",
                                    "type": "boolean"
                                },
                                {
                                    "name": "isSupported",
                                    "type": "boolean"
                                }
                            ]
                        },
                        {
                            "name": "genericFunction",
                            "type": "void",
                            "param": [
                                {
                                    "name": "routerAddress",
                                    "type": "object"
                                },
                                {
                                    "name": "parameters",
                                    "optional": "1",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "callbackId",
                                    "optional": "1",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "genericSynchronousFunction",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "functionId",
                                    "type": "long"
                                },
                                {
                                    "name": "parameters",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "getExtensionId",
                            "type": "DOMString"
                        },
                        {
                            "name": "registerGenericFunctionCallbackHandler",
                            "type": "void",
                            "param": [
                                {
                                    "name": "callbackHandler",
                                    "type": "function"
                                }
                            ]
                        },
                        {
                            "name": "registerGenericPersistentCallbackHandler",
                            "type": "void",
                            "param": [
                                {
                                    "name": "callbackHandler",
                                    "type": "function"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "External",
                "extends": "Object"
            },
            {
                "name": "File",
                "extends": "Blob",
                "properties": {
                    "property": [
                        {
                            "name": "lastModifiedDate",
                            "read-only": "1",
                            "type": "any"
                        },
                        {
                            "name": "name",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "webkitRelativePath",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "FileList",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "item",
                            "getter": "1",
                            "type": "File",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "length",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "FileReader",
                "extends": "EventTarget",
                "constructor": {},
                "events": {
                    "event": [
                        {
                            "name": "load",
                            "dispatch": "sync",
                            "follows": "progress",
                            "precedes": "loadend",
                            "skips-window": "1",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "loadstart",
                            "dispatch": "sync",
                            "precedes": "progress",
                            "skips-window": "1",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "loadend",
                            "dispatch": "sync",
                            "follows": "load",
                            "skips-window": "1",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "progress",
                            "dispatch": "sync",
                            "follows": "loadstart",
                            "precedes": "load",
                            "skips-window": "1",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "abort",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "error",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "ProgressEvent"
                        }
                    ]
                },
                "implements": [
                    "MSBaseReader"
                ],
                "methods": {
                    "method": [
                        {
                            "name": "readAsArrayBuffer",
                            "type": "void",
                            "param": [
                                {
                                    "name": "blob",
                                    "type": "Blob"
                                }
                            ]
                        },
                        {
                            "name": "readAsBinaryString",
                            "type": "void",
                            "param": [
                                {
                                    "name": "blob",
                                    "type": "Blob"
                                }
                            ]
                        },
                        {
                            "name": "readAsDataURL",
                            "type": "void",
                            "param": [
                                {
                                    "name": "blob",
                                    "type": "Blob"
                                }
                            ]
                        },
                        {
                            "name": "readAsText",
                            "type": "void",
                            "param": [
                                {
                                    "name": "blob",
                                    "type": "Blob"
                                },
                                {
                                    "name": "encoding",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "error",
                            "read-only": "1",
                            "type": "DOMError"
                        }
                    ]
                }
            },
            {
                "name": "FocusEvent",
                "extends": "UIEvent",
                "constructor": {
                    "param": [
                        {
                            "name": "typeArg",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "optional": "1",
                            "type": "FocusEventInit"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "initFocusEvent",
                            "type": "void",
                            "param": [
                                {
                                    "name": "typeArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "canBubbleArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "cancelableArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "viewArg",
                                    "type": "Window"
                                },
                                {
                                    "name": "detailArg",
                                    "type": "long"
                                },
                                {
                                    "name": "relatedTargetArg",
                                    "type": "EventTarget"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "relatedTarget",
                            "read-only": "1",
                            "type": "EventTarget"
                        }
                    ]
                }
            },
            {
                "name": "FocusNavigationEvent",
                "extends": "Event",
                "constructor": {
                    "param": [
                        {
                            "name": "type",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "optional": "1",
                            "type": "FocusNavigationEventInit"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "requestFocus",
                            "type": "void"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "navigationReason",
                            "read-only": "1",
                            "type": "NavigationReason"
                        },
                        {
                            "name": "originHeight",
                            "read-only": "1",
                            "type": "float"
                        },
                        {
                            "name": "originLeft",
                            "read-only": "1",
                            "type": "float"
                        },
                        {
                            "name": "originTop",
                            "read-only": "1",
                            "type": "float"
                        },
                        {
                            "name": "originWidth",
                            "read-only": "1",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "FormData",
                "extends": "Object",
                "constructor": {},
                "methods": {
                    "method": [
                        {
                            "name": "append",
                            "type": "void",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "any"
                                },
                                {
                                    "name": "value",
                                    "type": "any"
                                },
                                {
                                    "name": "blobName",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "GainNode",
                "extends": "AudioNode",
                "properties": {
                    "property": [
                        {
                            "name": "gain",
                            "read-only": "1",
                            "type": "AudioParam"
                        }
                    ]
                }
            },
            {
                "name": "Gamepad",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "axes",
                            "read-only": "1",
                            "type": "sequence<double>"
                        },
                        {
                            "name": "buttons",
                            "read-only": "1",
                            "type": "sequence<GamepadButton>"
                        },
                        {
                            "name": "connected",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "id",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "index",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "mapping",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "timestamp",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        }
                    ]
                }
            },
            {
                "name": "GamepadButton",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "pressed",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "value",
                            "read-only": "1",
                            "type": "double"
                        }
                    ]
                }
            },
            {
                "name": "GamepadEvent",
                "extends": "Event",
                "constructor": {
                    "param": [
                        {
                            "name": "typeArg",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "optional": "1",
                            "type": "GamepadEventInit"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "gamepad",
                            "read-only": "1",
                            "type": "Gamepad"
                        }
                    ]
                }
            },
            {
                "name": "Geolocation",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "clearWatch",
                            "type": "void",
                            "param": [
                                {
                                    "name": "watchId",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "getCurrentPosition",
                            "type": "void",
                            "param": [
                                {
                                    "name": "successCallback",
                                    "type": "PositionCallback"
                                },
                                {
                                    "name": "errorCallback",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "PositionErrorCallback"
                                },
                                {
                                    "name": "options",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "PositionOptions"
                                }
                            ]
                        },
                        {
                            "name": "watchPosition",
                            "type": "long",
                            "param": [
                                {
                                    "name": "successCallback",
                                    "type": "PositionCallback"
                                },
                                {
                                    "name": "errorCallback",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "PositionErrorCallback"
                                },
                                {
                                    "name": "options",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "PositionOptions"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "HashChangeEvent",
                "extends": "Event",
                "constructor": {
                    "param": [
                        {
                            "name": "typeArg",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "optional": "1",
                            "type": "HashChangeEventInit"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "newURL",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "oldURL",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "Headers",
                "extends": "Object",
                "constructor": {
                    "param": [
                        {
                            "name": "init",
                            "optional": "1",
                            "type": "(Headers or sequence<sequence<DOMString>>)",
                            "type-original": "HeadersInit"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "append",
                            "type": "void",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "DOMString",
                                    "type-original": "ByteString"
                                },
                                {
                                    "name": "value",
                                    "type": "DOMString",
                                    "type-original": "ByteString"
                                }
                            ]
                        },
                        {
                            "name": "delete",
                            "type": "void",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "DOMString",
                                    "type-original": "ByteString"
                                }
                            ]
                        },
                        {
                            "name": "forEach",
                            "type": "void",
                            "param": [
                                {
                                    "name": "callback",
                                    "type": "ForEachCallback"
                                }
                            ]
                        },
                        {
                            "name": "get",
                            "nullable": "1",
                            "type": "DOMString",
                            "type-original": "ByteString",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "DOMString",
                                    "type-original": "ByteString"
                                }
                            ]
                        },
                        {
                            "name": "has",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "DOMString",
                                    "type-original": "ByteString"
                                }
                            ]
                        },
                        {
                            "name": "set",
                            "type": "void",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "DOMString",
                                    "type-original": "ByteString"
                                },
                                {
                                    "name": "value",
                                    "type": "DOMString",
                                    "type-original": "ByteString"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "History",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "back",
                            "type": "void",
                            "param": [
                                {
                                    "name": "distance",
                                    "optional": "1",
                                    "type": "any"
                                }
                            ]
                        },
                        {
                            "name": "forward",
                            "type": "void",
                            "param": [
                                {
                                    "name": "distance",
                                    "optional": "1",
                                    "type": "any"
                                }
                            ]
                        },
                        {
                            "name": "go",
                            "type": "void",
                            "param": [
                                {
                                    "name": "delta",
                                    "optional": "1",
                                    "type": "any"
                                }
                            ]
                        },
                        {
                            "name": "pushState",
                            "type": "void",
                            "param": [
                                {
                                    "name": "statedata",
                                    "type": "any"
                                },
                                {
                                    "name": "title",
                                    "optional": "1",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "url",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "replaceState",
                            "type": "void",
                            "param": [
                                {
                                    "name": "statedata",
                                    "type": "any"
                                },
                                {
                                    "name": "title",
                                    "optional": "1",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "url",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "length",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "state",
                            "read-only": "1",
                            "type": "any"
                        }
                    ]
                }
            },
            {
                "name": "HTMLAllCollection",
                "extends": "Object",
                "anonymous-methods": {
                    "method": [
                        {
                            "getter": "1",
                            "nullable": "1",
                            "type": "Element",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "item",
                            "legacy-caller": "1",
                            "nullable": "1",
                            "type": "(HTMLCollection or Element)",
                            "param": [
                                {
                                    "name": "nameOrIndex",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "namedItem",
                            "getter": "1",
                            "nullable": "1",
                            "type": "(HTMLCollection or Element)",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "length",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "HTMLAnchorElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "a",
                        "namespace": "HTML"
                    }
                ],
                "methods": {
                    "method": [
                        {
                            "name": "toString",
                            "stringifier": "1",
                            "type": "DOMString"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "charset",
                            "content-attribute": "charset",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "character_encoding",
                            "type": "DOMString"
                        },
                        {
                            "name": "coords",
                            "content-attribute": "coords",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "comma_separated_signed_integers",
                            "type": "DOMString"
                        },
                        {
                            "name": "download",
                            "content-attribute": "download",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "hash",
                            "type": "DOMString"
                        },
                        {
                            "name": "host",
                            "type": "DOMString"
                        },
                        {
                            "name": "hostname",
                            "type": "DOMString"
                        },
                        {
                            "name": "href",
                            "content-attribute": "href",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "stringifier": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "hreflang",
                            "content-attribute": "hreflang",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "bcp47_lang",
                            "type": "DOMString"
                        },
                        {
                            "name": "Methods",
                            "type": "DOMString"
                        },
                        {
                            "name": "mimeType",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "name",
                            "content-attribute": "name",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "nameProp",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "pathname",
                            "type": "DOMString"
                        },
                        {
                            "name": "port",
                            "type": "DOMString"
                        },
                        {
                            "name": "protocol",
                            "type": "DOMString"
                        },
                        {
                            "name": "protocolLong",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "rel",
                            "content-attribute": "rel",
                            "content-attribute-enum-values": "alternate appendix bookmark chapter contents copyright dns-prefetch entry-content feedurl glossary help index next prefetch preload prev section start subsection",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "space_separated_enums",
                            "type": "DOMString"
                        },
                        {
                            "name": "rev",
                            "content-attribute": "rev",
                            "content-attribute-enum-values": "alternate appendix bookmark chapter contents copyright glossary help index next prev section start stylesheet subsection",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "space_separated_enums",
                            "type": "DOMString"
                        },
                        {
                            "name": "search",
                            "type": "DOMString"
                        },
                        {
                            "name": "shape",
                            "content-attribute": "shape",
                            "content-attribute-enum-values": "circ circle poly polygon rect rectangle",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "target",
                            "content-attribute": "target",
                            "content-attribute-enum-values": "_blank _self _parent _top",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "name_ref",
                            "type": "DOMString"
                        },
                        {
                            "name": "text",
                            "treat-null-as": "EmptyString",
                            "type": "DOMString"
                        },
                        {
                            "name": "type",
                            "content-attribute": "type",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "mime_type",
                            "type": "DOMString"
                        },
                        {
                            "name": "urn",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLAppletElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "applet",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "align",
                            "content-attribute": "align",
                            "content-attribute-enum-values": "absbottom absmiddle baseline bottom left middle right texttop top",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "alt",
                            "content-attribute": "alt",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "altHtml",
                            "type": "DOMString"
                        },
                        {
                            "name": "archive",
                            "content-attribute": "archive",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "BaseHref",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "border",
                            "content-attribute": "border",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "DOMString"
                        },
                        {
                            "name": "code",
                            "content-attribute": "code",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "type": "DOMString"
                        },
                        {
                            "name": "codeBase",
                            "content-attribute": "codebase",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "type": "DOMString"
                        },
                        {
                            "name": "codeType",
                            "type": "DOMString"
                        },
                        {
                            "name": "contentDocument",
                            "read-only": "1",
                            "type": "Document"
                        },
                        {
                            "name": "data",
                            "type": "DOMString"
                        },
                        {
                            "name": "declare",
                            "type": "boolean"
                        },
                        {
                            "name": "form",
                            "read-only": "1",
                            "type": "HTMLFormElement"
                        },
                        {
                            "name": "height",
                            "content-attribute": "height",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "DOMString"
                        },
                        {
                            "name": "hspace",
                            "content-attribute": "hspace",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "long"
                        },
                        {
                            "name": "name",
                            "content-attribute": "name",
                            "content-attribute-enum-values": "_blank _self _parent _top",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "name_ref",
                            "type": "DOMString"
                        },
                        {
                            "name": "object",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "standby",
                            "type": "DOMString"
                        },
                        {
                            "name": "type",
                            "type": "DOMString"
                        },
                        {
                            "name": "useMap",
                            "type": "DOMString"
                        },
                        {
                            "name": "vspace",
                            "content-attribute": "vspace",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "long"
                        },
                        {
                            "name": "width",
                            "content-attribute": "width",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "long"
                        }
                    ]
                }
            },
            {
                "name": "HTMLAreaElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "area",
                        "html-self-closing": "1",
                        "namespace": "HTML"
                    }
                ],
                "methods": {
                    "method": [
                        {
                            "name": "toString",
                            "stringifier": "1",
                            "type": "DOMString"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "alt",
                            "content-attribute": "alt",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "coords",
                            "content-attribute": "coords",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "comma_separated_signed_integers",
                            "type": "DOMString"
                        },
                        {
                            "name": "download",
                            "content-attribute": "download",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "hash",
                            "type": "DOMString"
                        },
                        {
                            "name": "host",
                            "type": "DOMString"
                        },
                        {
                            "name": "hostname",
                            "type": "DOMString"
                        },
                        {
                            "name": "href",
                            "content-attribute": "href",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "stringifier": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "noHref",
                            "content-attribute": "nohref",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "pathname",
                            "type": "DOMString"
                        },
                        {
                            "name": "port",
                            "type": "DOMString"
                        },
                        {
                            "name": "protocol",
                            "type": "DOMString"
                        },
                        {
                            "name": "rel",
                            "content-attribute": "rel",
                            "content-attribute-enum-values": "alternate appendix bookmark chapter contents copyright dns-prefetch entry-content feedurl glossary help index next prefetch preload prev section start subsection",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "space_separated_enums",
                            "type": "DOMString"
                        },
                        {
                            "name": "search",
                            "type": "DOMString"
                        },
                        {
                            "name": "shape",
                            "content-attribute": "shape",
                            "content-attribute-enum-values": "circ circle poly polygon rect rectangle",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "target",
                            "content-attribute": "target",
                            "content-attribute-enum-values": "_blank _self _parent _top",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "name_ref",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLAreasCollection",
                "extends": "HTMLCollection"
            },
            {
                "name": "HTMLAudioElement",
                "extends": "HTMLMediaElement",
                "element": [
                    {
                        "name": "audio",
                        "namespace": "HTML"
                    }
                ],
                "named-constructor": {
                    "name": "Audio",
                    "param": [
                        {
                            "name": "src",
                            "optional": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLBaseElement",
                "extends": "HTMLElement",
                "element": [
                    {
                        "name": "base",
                        "html-self-closing": "1",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "href",
                            "content-attribute": "href",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "type": "DOMString"
                        },
                        {
                            "name": "target",
                            "content-attribute": "target",
                            "content-attribute-enum-values": "_blank _self _parent _top",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "name_ref",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLBaseFontElement",
                "extends": "HTMLElement",
                "element": [
                    {
                        "name": "basefont",
                        "html-self-closing": "1",
                        "namespace": "HTML"
                    }
                ],
                "implements": [
                    "DOML2DeprecatedColorProperty"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "face",
                            "content-attribute": "face",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "font_family",
                            "type": "DOMString"
                        },
                        {
                            "name": "size",
                            "content-attribute": "size",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "1_or_greater_integer",
                            "type": "long"
                        }
                    ]
                }
            },
            {
                "name": "HTMLBodyElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "body",
                        "namespace": "HTML"
                    }
                ],
                "events": {
                    "event": [
                        {
                            "name": "offline",
                            "bubbles": "1",
                            "dispatch": "async",
                            "type": "Event"
                        },
                        {
                            "name": "online",
                            "bubbles": "1",
                            "dispatch": "async",
                            "type": "Event"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "aLink",
                            "content-attribute": "alink",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "simple_color",
                            "type": "any"
                        },
                        {
                            "name": "background",
                            "content-attribute": "background",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "simple_color",
                            "type": "DOMString"
                        },
                        {
                            "name": "bgColor",
                            "content-attribute": "bgcolor",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "simple_color",
                            "type": "any"
                        },
                        {
                            "name": "bgProperties",
                            "type": "DOMString"
                        },
                        {
                            "name": "link",
                            "content-attribute": "link",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "simple_color",
                            "type": "any"
                        },
                        {
                            "name": "noWrap",
                            "content-attribute": "nowrap",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "onafterprint",
                            "content-attribute": "onafterprint",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "afterprint",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onbeforeprint",
                            "content-attribute": "onbeforeprint",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "beforeprint",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onbeforeunload",
                            "content-attribute": "onbeforeunload",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "beforeunload",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onblur",
                            "event-handler": "blur",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onerror",
                            "event-handler": "error",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onfocus",
                            "event-handler": "focus",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onhashchange",
                            "content-attribute": "onhashchange",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "hashchange",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onload",
                            "event-handler": "load",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmessage",
                            "content-attribute": "onmessage",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "message",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onoffline",
                            "content-attribute": "onoffline",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "offline",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ononline",
                            "content-attribute": "ononline",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "online",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onorientationchange",
                            "content-attribute": "onorientationchange",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "orientationchange",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onpagehide",
                            "content-attribute": "onpagehide",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "pagehide",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onpageshow",
                            "content-attribute": "onpageshow",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "pageshow",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onpopstate",
                            "content-attribute": "onpopstate",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "popstate",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onresize",
                            "event-handler": "resize",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onscroll",
                            "event-handler": "scroll",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onstorage",
                            "content-attribute": "onstorage",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "storage",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onunload",
                            "content-attribute": "onunload",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "unload",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "text",
                            "content-attribute": "text",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "simple_color",
                            "type": "any"
                        },
                        {
                            "name": "vLink",
                            "content-attribute": "vlink",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "simple_color",
                            "type": "any"
                        }
                    ]
                }
            },
            {
                "name": "HTMLBRElement",
                "extends": "HTMLElement",
                "element": [
                    {
                        "name": "br",
                        "html-self-closing": "1",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "clear",
                            "content-attribute": "clear",
                            "content-attribute-enum-values": "all both left right",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLButtonElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "button",
                        "namespace": "HTML"
                    }
                ],
                "methods": {
                    "method": [
                        {
                            "name": "checkValidity",
                            "type": "boolean"
                        },
                        {
                            "name": "setCustomValidity",
                            "type": "void",
                            "param": [
                                {
                                    "name": "error",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "autofocus",
                            "content-attribute": "autofocus",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "disabled",
                            "content-attribute": "disabled",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "form",
                            "read-only": "1",
                            "type": "HTMLFormElement"
                        },
                        {
                            "name": "formAction",
                            "content-attribute": "formaction",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "type": "DOMString"
                        },
                        {
                            "name": "formEnctype",
                            "content-attribute": "formenctype",
                            "content-attribute-enum-values": "application/x-www-form-urlencoded multipart/form-data text/plain",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "formMethod",
                            "content-attribute": "formmethod",
                            "content-attribute-enum-values": "GET POST",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "formNoValidate",
                            "content-attribute": "formnovalidate",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "formTarget",
                            "content-attribute": "formtarget",
                            "content-attribute-enum-values": "_blank _self _parent _top",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "name_ref",
                            "type": "DOMString"
                        },
                        {
                            "name": "name",
                            "content-attribute": "name",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "status",
                            "type": "any"
                        },
                        {
                            "name": "type",
                            "content-attribute": "type",
                            "content-attribute-enum-values": "button submit reset",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "validationMessage",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "validity",
                            "read-only": "1",
                            "type": "ValidityState"
                        },
                        {
                            "name": "value",
                            "content-attribute": "value",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "willValidate",
                            "read-only": "1",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "HTMLCanvasElement",
                "extends": "HTMLElement",
                "element": [
                    {
                        "name": "canvas",
                        "namespace": "HTML"
                    }
                ],
                "events": {
                    "event": [
                        {
                            "name": "webglcontextlost",
                            "dispatch": "async",
                            "precedes": "webglcontextrestored",
                            "type": "WebGLContextEvent"
                        },
                        {
                            "name": "webglcontextrestored",
                            "dispatch": "async",
                            "follows": "webglcontextlost",
                            "type": "WebGLContextEvent"
                        },
                        {
                            "name": "webglcontextcreationerror",
                            "dispatch": "async",
                            "type": "WebGLContextEvent"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "getContext",
                            "type": "(CanvasRenderingContext2D or WebGLRenderingContext)",
                            "param": [
                                {
                                    "name": "contextId",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "args",
                                    "type": "any",
                                    "variadic": "1"
                                }
                            ]
                        },
                        {
                            "name": "msToBlob",
                            "type": "Blob"
                        },
                        {
                            "name": "toDataURL",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "type",
                                    "default": "\"image/png\"",
                                    "optional": "1",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "args",
                                    "type": "any",
                                    "variadic": "1"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "height",
                            "content-attribute": "height",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "unsigned long"
                        },
                        {
                            "name": "width",
                            "content-attribute": "width",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "HTMLCollection",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "item",
                            "getter": "1",
                            "nullable": "1",
                            "type": "Element",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "namedItem",
                            "getter": "1",
                            "nullable": "1",
                            "type": "Element",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "length",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "HTMLDataElement",
                "extends": "HTMLElement",
                "element": [
                    {
                        "name": "data",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "value",
                            "content-attribute": "value",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLDataListElement",
                "extends": "HTMLElement",
                "element": [
                    {
                        "name": "datalist",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "options",
                            "read-only": "1",
                            "type": "HTMLCollection"
                        }
                    ]
                }
            },
            {
                "name": "HTMLDirectoryElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "dir",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "compact",
                            "content-attribute": "compact",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "HTMLDivElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "div",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "align",
                            "content-attribute": "align",
                            "content-attribute-enum-values": "center justify left right",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "noWrap",
                            "content-attribute": "nowrap",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "HTMLDListElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "dl",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "compact",
                            "content-attribute": "compact",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "HTMLDocument",
                "extends": "Document"
            },
            {
                "name": "HTMLElement",
                "extends": "Element",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "name": "x-ms-acceleratorkey"
                        },
                        {
                            "enum-values": "all none phone",
                            "name": "x-ms-format-detection",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "noframes",
                        "namespace": "HTML"
                    },
                    {
                        "name": "noscript",
                        "namespace": "HTML"
                    },
                    {
                        "name": "wbr",
                        "html-self-closing": "1",
                        "namespace": "HTML"
                    },
                    {
                        "name": "section",
                        "namespace": "HTML"
                    },
                    {
                        "name": "nav",
                        "namespace": "HTML"
                    },
                    {
                        "name": "article",
                        "namespace": "HTML"
                    },
                    {
                        "name": "aside",
                        "namespace": "HTML"
                    },
                    {
                        "name": "hgroup",
                        "namespace": "HTML"
                    },
                    {
                        "name": "header",
                        "namespace": "HTML"
                    },
                    {
                        "name": "footer",
                        "namespace": "HTML"
                    },
                    {
                        "name": "figure",
                        "namespace": "HTML"
                    },
                    {
                        "name": "figcaption",
                        "namespace": "HTML"
                    },
                    {
                        "name": "mark",
                        "namespace": "HTML"
                    },
                    {
                        "name": "dd",
                        "namespace": "HTML"
                    },
                    {
                        "name": "dt",
                        "namespace": "HTML"
                    },
                    {
                        "name": "abbr",
                        "namespace": "HTML"
                    },
                    {
                        "name": "acronym",
                        "namespace": "HTML"
                    },
                    {
                        "name": "b",
                        "namespace": "HTML"
                    },
                    {
                        "name": "bdo",
                        "namespace": "HTML"
                    },
                    {
                        "name": "big",
                        "namespace": "HTML"
                    },
                    {
                        "name": "cite",
                        "namespace": "HTML"
                    },
                    {
                        "name": "code",
                        "namespace": "HTML"
                    },
                    {
                        "name": "dfn",
                        "namespace": "HTML"
                    },
                    {
                        "name": "em",
                        "namespace": "HTML"
                    },
                    {
                        "name": "i",
                        "namespace": "HTML"
                    },
                    {
                        "name": "kbd",
                        "namespace": "HTML"
                    },
                    {
                        "name": "nobr",
                        "namespace": "HTML"
                    },
                    {
                        "name": "rt",
                        "namespace": "HTML"
                    },
                    {
                        "name": "ruby",
                        "namespace": "HTML"
                    },
                    {
                        "name": "s",
                        "namespace": "HTML"
                    },
                    {
                        "name": "samp",
                        "namespace": "HTML"
                    },
                    {
                        "name": "small",
                        "namespace": "HTML"
                    },
                    {
                        "name": "strike",
                        "namespace": "HTML"
                    },
                    {
                        "name": "strong",
                        "namespace": "HTML"
                    },
                    {
                        "name": "sub",
                        "namespace": "HTML"
                    },
                    {
                        "name": "sup",
                        "namespace": "HTML"
                    },
                    {
                        "name": "tt",
                        "namespace": "HTML"
                    },
                    {
                        "name": "u",
                        "namespace": "HTML"
                    },
                    {
                        "name": "var",
                        "namespace": "HTML"
                    },
                    {
                        "name": "address",
                        "namespace": "HTML"
                    },
                    {
                        "name": "center",
                        "namespace": "HTML"
                    },
                    {
                        "name": "keygen",
                        "html-self-closing": "1",
                        "namespace": "HTML"
                    },
                    {
                        "name": "plaintext",
                        "namespace": "HTML"
                    }
                ],
                "methods": {
                    "method": [
                        {
                            "name": "blur",
                            "type": "void"
                        },
                        {
                            "name": "click",
                            "type": "void"
                        },
                        {
                            "name": "dragDrop",
                            "type": "boolean"
                        },
                        {
                            "name": "focus",
                            "type": "void"
                        },
                        {
                            "name": "getElementsByClassName",
                            "type": "NodeList",
                            "param": [
                                {
                                    "name": "classNames",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "insertAdjacentElement",
                            "type": "Element",
                            "param": [
                                {
                                    "name": "position",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "insertedElement",
                                    "type": "Element"
                                }
                            ]
                        },
                        {
                            "name": "insertAdjacentHTML",
                            "type": "void",
                            "param": [
                                {
                                    "name": "where",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "html",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "insertAdjacentText",
                            "type": "void",
                            "param": [
                                {
                                    "name": "where",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "text",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "msGetInputContext",
                            "type": "MSInputMethodContext"
                        },
                        {
                            "name": "scrollIntoView",
                            "type": "void",
                            "param": [
                                {
                                    "name": "top",
                                    "default": "VARIANT_TRUE",
                                    "optional": "1",
                                    "type": "boolean"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "accessKey",
                            "content-attribute": "accesskey",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "space_separated_tokens",
                            "type": "DOMString"
                        },
                        {
                            "name": "children",
                            "read-only": "1",
                            "type": "HTMLCollection"
                        },
                        {
                            "name": "contentEditable",
                            "content-attribute": "contenteditable",
                            "content-attribute-enum-values": "true false",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "dataset",
                            "content-attribute": "data-",
                            "content-attribute-reflects": "1",
                            "read-only": "1",
                            "type": "DOMStringMap"
                        },
                        {
                            "name": "dir",
                            "content-attribute": "dir",
                            "content-attribute-enum-values": "ltr rtl auto",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "draggable",
                            "content-attribute": "draggable",
                            "content-attribute-enum-values": "true false",
                            "content-attribute-value-syntax": "enum",
                            "type": "boolean"
                        },
                        {
                            "name": "hidden",
                            "type": "boolean"
                        },
                        {
                            "name": "hideFocus",
                            "content-attribute": "hidefocus",
                            "content-attribute-enum-values": "false true",
                            "content-attribute-value-syntax": "enum",
                            "type": "boolean"
                        },
                        {
                            "name": "innerText",
                            "type": "DOMString"
                        },
                        {
                            "name": "isContentEditable",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "lang",
                            "content-attribute": "lang",
                            "content-attribute-aliases": "language",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "bcp47_lang",
                            "type": "DOMString"
                        },
                        {
                            "name": "offsetHeight",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "offsetLeft",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "offsetParent",
                            "read-only": "1",
                            "type": "Element"
                        },
                        {
                            "name": "offsetTop",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "offsetWidth",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "onabort",
                            "content-attribute": "onabort",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "abort",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onactivate",
                            "content-attribute": "onactivate",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "activate",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onbeforeactivate",
                            "content-attribute": "onbeforeactivate",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "beforeactivate",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onbeforecopy",
                            "content-attribute": "onbeforecopy",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "beforecopy",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onbeforecut",
                            "content-attribute": "onbeforecut",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "beforecut",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onbeforedeactivate",
                            "content-attribute": "onbeforedeactivate",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "beforedeactivate",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onbeforepaste",
                            "content-attribute": "onbeforepaste",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "beforepaste",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onblur",
                            "content-attribute": "onblur",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "blur",
                            "type": "EventHandler"
                        },
                        {
                            "name": "oncanplay",
                            "content-attribute": "oncanplay",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "canplay",
                            "type": "EventHandler"
                        },
                        {
                            "name": "oncanplaythrough",
                            "content-attribute": "oncanplaythrough",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "canplaythrough",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onchange",
                            "content-attribute": "onchange",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "change",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onclick",
                            "content-attribute": "onclick",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "click",
                            "type": "EventHandler"
                        },
                        {
                            "name": "oncontextmenu",
                            "content-attribute": "oncontextmenu",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "contextmenu",
                            "type": "EventHandler"
                        },
                        {
                            "name": "oncopy",
                            "content-attribute": "oncopy",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "copy",
                            "type": "EventHandler"
                        },
                        {
                            "name": "oncuechange",
                            "event-handler": "cuechange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "oncut",
                            "content-attribute": "oncut",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "cut",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondblclick",
                            "content-attribute": "ondblclick",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "dblclick",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondeactivate",
                            "content-attribute": "ondeactivate",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "deactivate",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondrag",
                            "content-attribute": "ondrag",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "drag",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondragend",
                            "content-attribute": "ondragend",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "dragend",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondragenter",
                            "content-attribute": "ondragenter",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "dragenter",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondragleave",
                            "content-attribute": "ondragleave",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "dragleave",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondragover",
                            "content-attribute": "ondragover",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "dragover",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondragstart",
                            "content-attribute": "ondragstart",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "dragstart",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondrop",
                            "content-attribute": "ondrop",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "drop",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondurationchange",
                            "content-attribute": "ondurationchange",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "durationchange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onemptied",
                            "content-attribute": "onemptied",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "emptied",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onended",
                            "content-attribute": "onended",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "ended",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onerror",
                            "content-attribute": "onerror",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "error",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onfocus",
                            "content-attribute": "onfocus",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "focus",
                            "type": "EventHandler"
                        },
                        {
                            "name": "oninput",
                            "content-attribute": "oninput",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "input",
                            "type": "EventHandler"
                        },
                        {
                            "name": "oninvalid",
                            "event-handler": "invalid",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onkeydown",
                            "content-attribute": "onkeydown",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "keydown",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onkeypress",
                            "content-attribute": "onkeypress",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "keypress",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onkeyup",
                            "content-attribute": "onkeyup",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "keyup",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onload",
                            "content-attribute": "onload",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "load",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onloadeddata",
                            "content-attribute": "onloadeddata",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "loadeddata",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onloadedmetadata",
                            "content-attribute": "onloadedmetadata",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "loadedmetadata",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onloadstart",
                            "content-attribute": "onloadstart",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "loadstart",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmousedown",
                            "content-attribute": "onmousedown",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "mousedown",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmouseenter",
                            "content-attribute": "onmouseenter",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "mouseenter",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmouseleave",
                            "content-attribute": "onmouseleave",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "mouseleave",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmousemove",
                            "content-attribute": "onmousemove",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "mousemove",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmouseout",
                            "content-attribute": "onmouseout",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "mouseout",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmouseover",
                            "content-attribute": "onmouseover",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "mouseover",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmouseup",
                            "content-attribute": "onmouseup",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "mouseup",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmousewheel",
                            "content-attribute": "onmousewheel",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "mousewheel",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmscontentzoom",
                            "content-attribute": "onmscontentzoom",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "MSContentZoom",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmsmanipulationstatechanged",
                            "content-attribute": "onmsmanipulationstatechanged",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "MSManipulationStateChanged",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onpaste",
                            "content-attribute": "onpaste",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "paste",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onpause",
                            "content-attribute": "onpause",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "pause",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onplay",
                            "content-attribute": "onplay",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "play",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onplaying",
                            "content-attribute": "onplaying",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "playing",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onprogress",
                            "content-attribute": "onprogress",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "progress",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onratechange",
                            "content-attribute": "onratechange",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "ratechange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onreset",
                            "content-attribute": "onreset",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "reset",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onscroll",
                            "content-attribute": "onscroll",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "scroll",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onseeked",
                            "content-attribute": "onseeked",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "seeked",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onseeking",
                            "content-attribute": "onseeking",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "seeking",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onselect",
                            "content-attribute": "onselect",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "select",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onselectstart",
                            "content-attribute": "onselectstart",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "selectstart",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onstalled",
                            "content-attribute": "onstalled",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "stalled",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onsubmit",
                            "content-attribute": "onsubmit",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "submit",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onsuspend",
                            "content-attribute": "onsuspend",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "suspend",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ontimeupdate",
                            "content-attribute": "ontimeupdate",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "timeupdate",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onvolumechange",
                            "content-attribute": "onvolumechange",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "volumechange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onwaiting",
                            "content-attribute": "onwaiting",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "waiting",
                            "type": "EventHandler"
                        },
                        {
                            "name": "outerText",
                            "type": "DOMString"
                        },
                        {
                            "name": "spellcheck",
                            "content-attribute": "spellcheck",
                            "content-attribute-enum-values": "true false",
                            "content-attribute-value-syntax": "enum",
                            "type": "boolean"
                        },
                        {
                            "name": "style",
                            "content-attribute": "style",
                            "content-attribute-value-syntax": "css",
                            "read-only": "1",
                            "type": "CSSStyleDeclaration"
                        },
                        {
                            "name": "tabIndex",
                            "content-attribute": "tabindex",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "signed_integer",
                            "type": "short"
                        },
                        {
                            "name": "title",
                            "content-attribute": "title",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLEmbedElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "embed",
                        "html-self-closing": "1",
                        "namespace": "HTML"
                    }
                ],
                "implements": [
                    "GetSVGDocument"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "height",
                            "content-attribute": "height",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "DOMString"
                        },
                        {
                            "name": "hidden",
                            "content-attribute": "hidden",
                            "content-attribute-enum-values": "false true",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "msPlayToDisabled",
                            "content-attribute": "x-ms-playtodisabled",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "msPlayToPreferredSourceUri",
                            "content-attribute": "x-ms-playtopreferredsourceuri",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "type": "DOMString"
                        },
                        {
                            "name": "msPlayToPrimary",
                            "content-attribute": "x-ms-playtoprimary",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "msPlayToSource",
                            "read-only": "1",
                            "type": "any"
                        },
                        {
                            "name": "name",
                            "content-attribute": "name",
                            "content-attribute-enum-values": "_blank _self _parent _top",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "name_ref",
                            "type": "DOMString"
                        },
                        {
                            "name": "palette",
                            "content-attribute": "palette",
                            "content-attribute-reflects": "1",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "pluginspage",
                            "content-attribute": "pluginspage",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "readyState",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "src",
                            "content-attribute": "src",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "type": "DOMString"
                        },
                        {
                            "name": "units",
                            "content-attribute": "units",
                            "content-attribute-enum-values": "px em",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "width",
                            "content-attribute": "width",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLFieldSetElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "fieldset",
                        "namespace": "HTML"
                    }
                ],
                "methods": {
                    "method": [
                        {
                            "name": "checkValidity",
                            "type": "boolean"
                        },
                        {
                            "name": "setCustomValidity",
                            "type": "void",
                            "param": [
                                {
                                    "name": "error",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "align",
                            "content-attribute": "align",
                            "content-attribute-enum-values": "absbottom absmiddle baseline bottom left middle right texttop top",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "disabled",
                            "content-attribute": "disabled",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "form",
                            "read-only": "1",
                            "type": "HTMLFormElement"
                        },
                        {
                            "name": "name",
                            "content-attribute": "name",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "validationMessage",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "validity",
                            "read-only": "1",
                            "type": "ValidityState"
                        },
                        {
                            "name": "willValidate",
                            "read-only": "1",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "HTMLFontElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "font",
                        "namespace": "HTML"
                    }
                ],
                "implements": [
                    "DOML2DeprecatedColorProperty",
                    "DOML2DeprecatedSizeProperty"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "face",
                            "content-attribute": "face",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "font_family",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLFormControlsCollection",
                "extends": "HTMLCollection",
                "methods": {
                    "method": [
                        {
                            "name": "namedItem",
                            "getter": "1",
                            "nullable": "1",
                            "type": "(HTMLCollection or Element)",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "HTMLFormElement",
                "extends": "HTMLElement",
                "override-builtins": "1",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "form",
                        "namespace": "HTML"
                    }
                ],
                "events": {
                    "event": [
                        {
                            "name": "reset",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "type": "Event"
                        },
                        {
                            "name": "submit",
                            "bubbles": "1",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "checkValidity",
                            "type": "boolean"
                        },
                        {
                            "name": "item",
                            "getter": "1",
                            "type": "any",
                            "param": [
                                {
                                    "name": "name",
                                    "optional": "1",
                                    "type": "any"
                                },
                                {
                                    "name": "index",
                                    "optional": "1",
                                    "type": "any"
                                }
                            ]
                        },
                        {
                            "name": "namedItem",
                            "getter": "1",
                            "type": "any",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "reset",
                            "type": "void"
                        },
                        {
                            "name": "submit",
                            "type": "void"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "acceptCharset",
                            "content-attribute": "accept-charset",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "space_separated_tokens",
                            "type": "DOMString"
                        },
                        {
                            "name": "action",
                            "content-attribute": "action",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "type": "DOMString"
                        },
                        {
                            "name": "autocomplete",
                            "content-attribute": "autocomplete",
                            "content-attribute-enum-values": "on off",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "elements",
                            "read-only": "1",
                            "type": "HTMLFormControlsCollection"
                        },
                        {
                            "name": "encoding",
                            "content-attribute": "enctype",
                            "content-attribute-enum-values": "application/x-www-form-urlencoded multipart/form-data text/plain",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "enctype",
                            "content-attribute": "enctype",
                            "content-attribute-enum-values": "application/x-www-form-urlencoded multipart/form-data text/plain",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "length",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "method",
                            "content-attribute": "method",
                            "content-attribute-enum-values": "GET POST",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "name",
                            "content-attribute": "name",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "noValidate",
                            "content-attribute": "novalidate",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "target",
                            "content-attribute": "target",
                            "content-attribute-enum-values": "_blank _self _parent _top",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "name_ref",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLFrameElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "frame",
                        "html-self-closing": "1",
                        "namespace": "HTML"
                    }
                ],
                "events": {
                    "event": [
                        {
                            "name": "load",
                            "dispatch": "async",
                            "skips-window": "1",
                            "type": "Event"
                        }
                    ]
                },
                "implements": [
                    "GetSVGDocument"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "border",
                            "content-attribute": "border",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderColor",
                            "content-attribute": "bordercolor",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "simple_color",
                            "type": "any"
                        },
                        {
                            "name": "contentDocument",
                            "read-only": "1",
                            "type": "Document"
                        },
                        {
                            "name": "contentWindow",
                            "read-only": "1",
                            "type": "Window"
                        },
                        {
                            "name": "frameBorder",
                            "content-attribute": "frameborder",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "DOMString"
                        },
                        {
                            "name": "frameSpacing",
                            "content-attribute": "framespacing",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "signed_integer",
                            "type": "any"
                        },
                        {
                            "name": "height",
                            "content-attribute": "height",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "(DOMString or unsigned long)"
                        },
                        {
                            "name": "longDesc",
                            "content-attribute": "longdesc",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "type": "DOMString"
                        },
                        {
                            "name": "marginHeight",
                            "content-attribute": "marginheight",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "signed_integer",
                            "type": "DOMString"
                        },
                        {
                            "name": "marginWidth",
                            "content-attribute": "marginwidth",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "signed_integer",
                            "type": "DOMString"
                        },
                        {
                            "name": "name",
                            "content-attribute": "name",
                            "content-attribute-enum-values": "_blank _self _parent _top",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "name_ref",
                            "type": "DOMString"
                        },
                        {
                            "name": "noResize",
                            "content-attribute": "noresize",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "onload",
                            "event-handler": "load",
                            "type": "EventHandler"
                        },
                        {
                            "name": "scrolling",
                            "content-attribute": "scrolling",
                            "content-attribute-enum-values": "auto no yes",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "src",
                            "content-attribute": "src",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "type": "DOMString"
                        },
                        {
                            "name": "width",
                            "content-attribute": "width",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "(DOMString or unsigned long)"
                        }
                    ]
                }
            },
            {
                "name": "HTMLFrameSetElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "frameset",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "border",
                            "content-attribute": "border",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderColor",
                            "content-attribute": "bordercolor",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "simple_color",
                            "type": "any"
                        },
                        {
                            "name": "cols",
                            "content-attribute": "cols",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "1_or_greater_integer",
                            "type": "DOMString"
                        },
                        {
                            "name": "frameBorder",
                            "content-attribute": "frameborder",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "DOMString"
                        },
                        {
                            "name": "frameSpacing",
                            "content-attribute": "framespacing",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "signed_integer",
                            "type": "any"
                        },
                        {
                            "name": "name",
                            "content-attribute": "name",
                            "content-attribute-enum-values": "_blank _self _parent _top",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "name_ref",
                            "type": "DOMString"
                        },
                        {
                            "name": "onafterprint",
                            "content-attribute": "onafterprint",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "afterprint",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onbeforeprint",
                            "content-attribute": "onbeforeprint",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "beforeprint",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onbeforeunload",
                            "content-attribute": "onbeforeunload",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "beforeunload",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onblur",
                            "event-handler": "blur",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onerror",
                            "event-handler": "error",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onfocus",
                            "event-handler": "focus",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onhashchange",
                            "content-attribute": "onhashchange",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "hashchange",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onload",
                            "event-handler": "load",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmessage",
                            "content-attribute": "onmessage",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "message",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onoffline",
                            "content-attribute": "onoffline",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "offline",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ononline",
                            "content-attribute": "ononline",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "online",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onorientationchange",
                            "content-attribute": "onorientationchange",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "orientationchange",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onpagehide",
                            "content-attribute": "onpagehide",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "pagehide",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onpageshow",
                            "content-attribute": "onpageshow",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "pageshow",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onpopstate",
                            "content-attribute": "onpopstate",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "popstate",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onresize",
                            "event-handler": "resize",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onscroll",
                            "event-handler": "scroll",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onstorage",
                            "content-attribute": "onstorage",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "storage",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onunload",
                            "content-attribute": "onunload",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "unload",
                            "event-handler-map-to-window": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "rows",
                            "content-attribute": "rows",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "1_or_greater_integer",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLHeadElement",
                "extends": "HTMLElement",
                "element": [
                    {
                        "name": "head",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "profile",
                            "content-attribute": "profile",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLHeadingElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "h1",
                        "namespace": "HTML"
                    },
                    {
                        "name": "h2",
                        "namespace": "HTML"
                    },
                    {
                        "name": "h3",
                        "namespace": "HTML"
                    },
                    {
                        "name": "h4",
                        "namespace": "HTML"
                    },
                    {
                        "name": "h5",
                        "namespace": "HTML"
                    },
                    {
                        "name": "h6",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "align",
                            "content-attribute": "align",
                            "content-attribute-enum-values": "center justify left right",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLHRElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "hr",
                        "html-self-closing": "1",
                        "namespace": "HTML"
                    }
                ],
                "implements": [
                    "DOML2DeprecatedColorProperty",
                    "DOML2DeprecatedSizeProperty"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "align",
                            "content-attribute": "align",
                            "content-attribute-enum-values": "center justify left right",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "noShade",
                            "content-attribute": "noshade",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "width",
                            "content-attribute": "width",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "long"
                        }
                    ]
                }
            },
            {
                "name": "HTMLHtmlElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "name": "manifest",
                            "value-syntax": "url"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "html",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "version",
                            "content-attribute": "version",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLIFrameElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "iframe",
                        "namespace": "HTML"
                    }
                ],
                "events": {
                    "event": [
                        {
                            "name": "load",
                            "dispatch": "async",
                            "skips-window": "1",
                            "type": "Event"
                        }
                    ]
                },
                "implements": [
                    "GetSVGDocument"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "align",
                            "content-attribute": "align",
                            "content-attribute-enum-values": "absbottom absmiddle baseline bottom left middle right texttop top",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "allowFullscreen",
                            "content-attribute": "allowfullscreen",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "allowPaymentRequest",
                            "content-attribute": "allowPaymentRequest",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "border",
                            "content-attribute": "border",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "DOMString"
                        },
                        {
                            "name": "contentDocument",
                            "read-only": "1",
                            "type": "Document"
                        },
                        {
                            "name": "contentWindow",
                            "read-only": "1",
                            "type": "Window"
                        },
                        {
                            "name": "frameBorder",
                            "content-attribute": "frameborder",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "DOMString"
                        },
                        {
                            "name": "frameSpacing",
                            "content-attribute": "framespacing",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "signed_integer",
                            "type": "any"
                        },
                        {
                            "name": "height",
                            "content-attribute": "height",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "DOMString"
                        },
                        {
                            "name": "hspace",
                            "content-attribute": "hspace",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "long"
                        },
                        {
                            "name": "longDesc",
                            "content-attribute": "longdesc",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "type": "DOMString"
                        },
                        {
                            "name": "marginHeight",
                            "content-attribute": "marginheight",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "signed_integer",
                            "type": "DOMString"
                        },
                        {
                            "name": "marginWidth",
                            "content-attribute": "marginwidth",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "signed_integer",
                            "type": "DOMString"
                        },
                        {
                            "name": "name",
                            "content-attribute": "name",
                            "content-attribute-enum-values": "_blank _self _parent _top",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "name_ref",
                            "type": "DOMString"
                        },
                        {
                            "name": "noResize",
                            "content-attribute": "noresize",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "onload",
                            "event-handler": "load",
                            "type": "EventHandler"
                        },
                        {
                            "name": "sandbox",
                            "content-attribute": "sandbox",
                            "content-attribute-enum-values": "allow-scripts allow-forms allow-same-origin allow-top-navigation allow-popups allow-pointer-lock",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "space_separated_enums",
                            "put-forwards": "value",
                            "read-only": "1",
                            "type": "DOMSettableTokenList"
                        },
                        {
                            "name": "scrolling",
                            "content-attribute": "scrolling",
                            "content-attribute-enum-values": "auto no yes",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "src",
                            "content-attribute": "src",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "type": "DOMString"
                        },
                        {
                            "name": "vspace",
                            "content-attribute": "vspace",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "long"
                        },
                        {
                            "name": "width",
                            "content-attribute": "width",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLImageElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "img",
                        "html-self-closing": "1",
                        "namespace": "HTML"
                    }
                ],
                "events": {
                    "event": [
                        {
                            "name": "error",
                            "dispatch": "sync",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "msGetAsCastingSource",
                            "type": "any"
                        }
                    ]
                },
                "named-constructor": {
                    "name": "Image",
                    "param": [
                        {
                            "name": "width",
                            "optional": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "height",
                            "optional": "1",
                            "type": "unsigned long"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "align",
                            "content-attribute": "align",
                            "content-attribute-enum-values": "absbottom absmiddle baseline bottom left middle right texttop top",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "alt",
                            "content-attribute": "alt",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "border",
                            "content-attribute": "border",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "DOMString"
                        },
                        {
                            "name": "complete",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "crossOrigin",
                            "content-attribute": "crossorigin",
                            "content-attribute-enum-values": "anonymous use-credentials",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "currentSrc",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "height",
                            "content-attribute": "height",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "unsigned long"
                        },
                        {
                            "name": "hspace",
                            "content-attribute": "hspace",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "long"
                        },
                        {
                            "name": "isMap",
                            "content-attribute": "ismap",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "longDesc",
                            "content-attribute": "longdesc",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "type": "DOMString"
                        },
                        {
                            "name": "lowsrc",
                            "content-attribute": "lowsrc",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "type": "DOMString"
                        },
                        {
                            "name": "msPlayToDisabled",
                            "content-attribute": "x-ms-playtodisabled",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "msPlayToPreferredSourceUri",
                            "content-attribute": "x-ms-playtopreferredsourceuri",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "type": "DOMString"
                        },
                        {
                            "name": "msPlayToPrimary",
                            "content-attribute": "x-ms-playtoprimary",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "msPlayToSource",
                            "read-only": "1",
                            "type": "any"
                        },
                        {
                            "name": "name",
                            "content-attribute": "name",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "naturalHeight",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "naturalWidth",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "sizes",
                            "content-attribute": "sizes",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "image_sizes",
                            "type": "DOMString"
                        },
                        {
                            "name": "src",
                            "content-attribute": "src",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "type": "DOMString"
                        },
                        {
                            "name": "srcset",
                            "content-attribute": "srcset",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "image_candidates",
                            "type": "DOMString"
                        },
                        {
                            "name": "useMap",
                            "content-attribute": "usemap",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "hash_name_ref",
                            "type": "DOMString"
                        },
                        {
                            "name": "vspace",
                            "content-attribute": "vspace",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "long"
                        },
                        {
                            "name": "width",
                            "content-attribute": "width",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "unsigned long"
                        },
                        {
                            "name": "x",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "y",
                            "read-only": "1",
                            "type": "long"
                        }
                    ]
                }
            },
            {
                "name": "HTMLInputElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "input",
                        "html-self-closing": "1",
                        "namespace": "HTML"
                    }
                ],
                "events": {
                    "event": [
                        {
                            "name": "change",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "type": "Event"
                        },
                        {
                            "name": "input",
                            "bubbles": "1",
                            "dispatch": "async",
                            "type": "Event"
                        },
                        {
                            "name": "error",
                            "dispatch": "sync",
                            "type": "Event"
                        },
                        {
                            "name": "invalid",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "checkValidity",
                            "type": "boolean"
                        },
                        {
                            "name": "select",
                            "type": "void"
                        },
                        {
                            "name": "setCustomValidity",
                            "type": "void",
                            "param": [
                                {
                                    "name": "error",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "setSelectionRange",
                            "type": "void",
                            "param": [
                                {
                                    "name": "start",
                                    "optional": "1",
                                    "type": "unsigned long"
                                },
                                {
                                    "name": "end",
                                    "optional": "1",
                                    "type": "unsigned long"
                                },
                                {
                                    "name": "direction",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "stepDown",
                            "type": "void",
                            "param": [
                                {
                                    "name": "n",
                                    "default": "1",
                                    "optional": "1",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "stepUp",
                            "type": "void",
                            "param": [
                                {
                                    "name": "n",
                                    "default": "1",
                                    "optional": "1",
                                    "type": "long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "accept",
                            "content-attribute": "accept",
                            "content-attribute-enum-values": "audio/* video/* image/*",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "comma_separated_mime_types",
                            "type": "DOMString"
                        },
                        {
                            "name": "align",
                            "content-attribute": "align",
                            "content-attribute-enum-values": "absbottom absmiddle baseline bottom left middle right texttop top",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "alt",
                            "content-attribute": "alt",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "autocomplete",
                            "content-attribute": "autocomplete",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "space_separated_tokens",
                            "type": "DOMString"
                        },
                        {
                            "name": "autofocus",
                            "content-attribute": "autofocus",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "border",
                            "content-attribute": "border",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "DOMString"
                        },
                        {
                            "name": "checked",
                            "type": "boolean"
                        },
                        {
                            "name": "complete",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "defaultChecked",
                            "content-attribute": "checked",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "defaultValue",
                            "content-attribute": "value",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "disabled",
                            "content-attribute": "disabled",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "files",
                            "read-only": "1",
                            "type": "FileList"
                        },
                        {
                            "name": "form",
                            "read-only": "1",
                            "type": "HTMLFormElement"
                        },
                        {
                            "name": "formAction",
                            "content-attribute": "formaction",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "type": "DOMString"
                        },
                        {
                            "name": "formEnctype",
                            "content-attribute": "formenctype",
                            "content-attribute-enum-values": "application/x-www-form-urlencoded multipart/form-data text/plain",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "formMethod",
                            "content-attribute": "formmethod",
                            "content-attribute-enum-values": "GET POST",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "formNoValidate",
                            "content-attribute": "formnovalidate",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "formTarget",
                            "content-attribute": "formtarget",
                            "content-attribute-enum-values": "_blank _self _parent _top",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "name_ref",
                            "type": "DOMString"
                        },
                        {
                            "name": "height",
                            "content-attribute": "height",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "DOMString"
                        },
                        {
                            "name": "hspace",
                            "content-attribute": "hspace",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "long"
                        },
                        {
                            "name": "indeterminate",
                            "type": "boolean"
                        },
                        {
                            "name": "list",
                            "content-attribute": "list",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "id_ref",
                            "read-only": "1",
                            "type": "HTMLElement"
                        },
                        {
                            "name": "max",
                            "content-attribute": "max",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "maxLength",
                            "content-attribute": "maxlength",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "long"
                        },
                        {
                            "name": "min",
                            "content-attribute": "min",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "multiple",
                            "content-attribute": "multiple",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "name",
                            "content-attribute": "name",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "pattern",
                            "content-attribute": "pattern",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "regular_expression",
                            "type": "DOMString"
                        },
                        {
                            "name": "placeholder",
                            "content-attribute": "placeholder",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "readOnly",
                            "content-attribute": "readonly",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "required",
                            "content-attribute": "required",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "selectionDirection",
                            "type": "DOMString"
                        },
                        {
                            "name": "selectionEnd",
                            "type": "unsigned long"
                        },
                        {
                            "name": "selectionStart",
                            "type": "unsigned long"
                        },
                        {
                            "name": "size",
                            "content-attribute": "size",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "1_or_greater_integer",
                            "type": "unsigned long"
                        },
                        {
                            "name": "src",
                            "content-attribute": "src",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "type": "DOMString"
                        },
                        {
                            "name": "status",
                            "type": "boolean"
                        },
                        {
                            "name": "step",
                            "content-attribute": "step",
                            "content-attribute-enum-values": "any",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "type": "DOMString"
                        },
                        {
                            "name": "type",
                            "content-attribute": "type",
                            "content-attribute-enum-values": "text hidden search tel url email password month week number range checkbox radio file submit image reset button",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "useMap",
                            "content-attribute": "usemap",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "hash_name_ref",
                            "type": "DOMString"
                        },
                        {
                            "name": "validationMessage",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "validity",
                            "read-only": "1",
                            "type": "ValidityState"
                        },
                        {
                            "name": "value",
                            "type": "DOMString"
                        },
                        {
                            "name": "valueAsDate",
                            "type": "Date"
                        },
                        {
                            "name": "valueAsNumber",
                            "type": "double"
                        },
                        {
                            "name": "vspace",
                            "content-attribute": "vspace",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "long"
                        },
                        {
                            "name": "webkitdirectory",
                            "content-attribute": "webkitdirectory",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "width",
                            "content-attribute": "width",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "DOMString"
                        },
                        {
                            "name": "willValidate",
                            "read-only": "1",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "HTMLLabelElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "label",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "form",
                            "read-only": "1",
                            "type": "HTMLFormElement"
                        },
                        {
                            "name": "htmlFor",
                            "content-attribute": "for",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "id_ref",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLLegendElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "legend",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "align",
                            "content-attribute": "align",
                            "content-attribute-enum-values": "bottom center left right top",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "form",
                            "read-only": "1",
                            "type": "HTMLFormElement"
                        }
                    ]
                }
            },
            {
                "name": "HTMLLIElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "li",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "type",
                            "content-attribute": "type",
                            "content-attribute-enum-values": "1 a A i I disc circle square",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "value",
                            "content-attribute": "value",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "signed_integer",
                            "type": "long"
                        }
                    ]
                }
            },
            {
                "name": "HTMLLinkElement",
                "extends": "HTMLElement",
                "element": [
                    {
                        "name": "link",
                        "html-self-closing": "1",
                        "namespace": "HTML"
                    }
                ],
                "events": {
                    "event": [
                        {
                            "name": "error",
                            "dispatch": "async",
                            "type": "Event"
                        },
                        {
                            "name": "load",
                            "dispatch": "async",
                            "follows": "readystatechange",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "readystatechange",
                            "dispatch": "async",
                            "precedes": "load",
                            "tags": "IEOnly",
                            "type": "Event"
                        }
                    ]
                },
                "implements": [
                    "LinkStyle"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "charset",
                            "content-attribute": "charset",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "character_encoding",
                            "type": "DOMString"
                        },
                        {
                            "name": "disabled",
                            "content-attribute": "disabled",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "href",
                            "content-attribute": "href",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "type": "DOMString"
                        },
                        {
                            "name": "hreflang",
                            "content-attribute": "hreflang",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "bcp47_lang",
                            "type": "DOMString"
                        },
                        {
                            "name": "media",
                            "content-attribute": "media",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "media_query",
                            "type": "DOMString"
                        },
                        {
                            "name": "rel",
                            "content-attribute": "rel",
                            "content-attribute-enum-values": "alternate appendix bookmark chapter contents copyright dns-prefetch entry-content feedurl glossary help index next offline prefetch preload prev search section start stylesheet subsection shortcut_icon",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "space_separated_enums",
                            "type": "DOMString"
                        },
                        {
                            "name": "rev",
                            "content-attribute": "rev",
                            "content-attribute-enum-values": "alternate appendix bookmark chapter contents copyright glossary help index next prev section start stylesheet subsection",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "space_separated_enums",
                            "type": "DOMString"
                        },
                        {
                            "name": "target",
                            "content-attribute": "target",
                            "content-attribute-enum-values": "_blank _self _parent _top",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "name_ref",
                            "type": "DOMString"
                        },
                        {
                            "name": "type",
                            "content-attribute": "type",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "mime_type",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLMapElement",
                "extends": "HTMLElement",
                "element": [
                    {
                        "name": "map",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "areas",
                            "read-only": "1",
                            "type": "HTMLAreasCollection"
                        },
                        {
                            "name": "name",
                            "content-attribute": "name",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLMarqueeElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "marquee",
                        "namespace": "HTML"
                    }
                ],
                "events": {
                    "event": [
                        {
                            "name": "bounce",
                            "dispatch": "sync",
                            "follows": "start",
                            "precedes": "finish",
                            "tags": "IEOnly",
                            "type": "Event"
                        },
                        {
                            "name": "start",
                            "dispatch": "sync",
                            "precedes": "bounce finish",
                            "tags": "IEOnly",
                            "type": "Event"
                        },
                        {
                            "name": "finish",
                            "dispatch": "sync",
                            "follows": "start bounce",
                            "tags": "IEOnly",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "start",
                            "type": "void"
                        },
                        {
                            "name": "stop",
                            "type": "void"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "behavior",
                            "content-attribute": "behavior",
                            "content-attribute-enum-values": "scroll slide alternate",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "bgColor",
                            "content-attribute": "bgcolor",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "simple_color",
                            "type": "any"
                        },
                        {
                            "name": "direction",
                            "content-attribute": "direction",
                            "content-attribute-enum-values": "left right up down",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "height",
                            "content-attribute": "height",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "DOMString"
                        },
                        {
                            "name": "hspace",
                            "content-attribute": "hspace",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "long"
                        },
                        {
                            "name": "loop",
                            "content-attribute": "loop",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "long"
                        },
                        {
                            "name": "onbounce",
                            "content-attribute": "onbounce",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "bounce",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onfinish",
                            "content-attribute": "onfinish",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "finish",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onstart",
                            "content-attribute": "onstart",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "start",
                            "type": "EventHandler"
                        },
                        {
                            "name": "scrollAmount",
                            "content-attribute": "scrollamount",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "unsigned long"
                        },
                        {
                            "name": "scrollDelay",
                            "content-attribute": "scrolldelay",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "unsigned long"
                        },
                        {
                            "name": "trueSpeed",
                            "content-attribute": "truespeed",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "vspace",
                            "content-attribute": "vspace",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "long"
                        },
                        {
                            "name": "width",
                            "content-attribute": "width",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLMediaElement",
                "extends": "HTMLElement",
                "constants": {
                    "constant": [
                        {
                            "name": "HAVE_CURRENT_DATA",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "HAVE_ENOUGH_DATA",
                            "type": "unsigned short",
                            "value": [
                                "4"
                            ]
                        },
                        {
                            "name": "HAVE_FUTURE_DATA",
                            "type": "unsigned short",
                            "value": [
                                "3"
                            ]
                        },
                        {
                            "name": "HAVE_METADATA",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "HAVE_NOTHING",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        },
                        {
                            "name": "NETWORK_EMPTY",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        },
                        {
                            "name": "NETWORK_IDLE",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "NETWORK_LOADING",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "NETWORK_NO_SOURCE",
                            "type": "unsigned short",
                            "value": [
                                "3"
                            ]
                        }
                    ]
                },
                "events": {
                    "event": [
                        {
                            "name": "loadstart",
                            "dispatch": "sync",
                            "precedes": "progress",
                            "type": "Event"
                        },
                        {
                            "name": "progress",
                            "dispatch": "sync",
                            "follows": "loadstart",
                            "precedes": "loadedmetadata",
                            "type": "Event"
                        },
                        {
                            "name": "suspend",
                            "dispatch": "sync",
                            "type": "Event"
                        },
                        {
                            "name": "abort",
                            "dispatch": "sync",
                            "type": "Event"
                        },
                        {
                            "name": "error",
                            "dispatch": "sync",
                            "type": "Event"
                        },
                        {
                            "name": "emptied",
                            "dispatch": "sync",
                            "type": "Event"
                        },
                        {
                            "name": "stalled",
                            "dispatch": "sync",
                            "follows": "playing",
                            "type": "Event"
                        },
                        {
                            "name": "play",
                            "dispatch": "sync",
                            "follows": "pause",
                            "type": "Event"
                        },
                        {
                            "name": "pause",
                            "dispatch": "sync",
                            "precedes": "play",
                            "type": "Event"
                        },
                        {
                            "name": "loadedmetadata",
                            "dispatch": "sync",
                            "follows": "loadstart",
                            "precedes": "loadeddata waiting seeking",
                            "type": "Event"
                        },
                        {
                            "name": "loadeddata",
                            "dispatch": "sync",
                            "follows": "loadedmetadata",
                            "precedes": "canplay",
                            "type": "Event"
                        },
                        {
                            "name": "waiting",
                            "dispatch": "sync",
                            "type": "Event"
                        },
                        {
                            "name": "playing",
                            "dispatch": "sync",
                            "follows": "canplay",
                            "precedes": "stalled",
                            "type": "Event"
                        },
                        {
                            "name": "canplay",
                            "dispatch": "sync",
                            "follows": "loadeddata",
                            "precedes": "canplaythrough",
                            "type": "Event"
                        },
                        {
                            "name": "canplaythrough",
                            "dispatch": "sync",
                            "follows": "canplay",
                            "precedes": "ended",
                            "type": "Event"
                        },
                        {
                            "name": "seeking",
                            "dispatch": "sync",
                            "follows": "loadedmetadata",
                            "precedes": "seeked",
                            "type": "Event"
                        },
                        {
                            "name": "seeked",
                            "dispatch": "sync",
                            "follows": "seeking",
                            "type": "Event"
                        },
                        {
                            "name": "timeupdate",
                            "dispatch": "sync",
                            "type": "Event"
                        },
                        {
                            "name": "ended",
                            "dispatch": "sync",
                            "follows": "canplaythrough",
                            "type": "Event"
                        },
                        {
                            "name": "ratechange",
                            "dispatch": "sync",
                            "type": "Event"
                        },
                        {
                            "name": "durationchange",
                            "dispatch": "sync",
                            "type": "Event"
                        },
                        {
                            "name": "volumechange",
                            "dispatch": "sync",
                            "type": "Event"
                        },
                        {
                            "name": "msneedkey",
                            "dispatch": "sync",
                            "tags": "IEOnly",
                            "type": "MSMediaKeyNeededEvent"
                        },
                        {
                            "name": "encrypted",
                            "dispatch": "sync",
                            "follows": "loadedmetadata",
                            "type": "MediaEncryptedEvent"
                        },
                        {
                            "name": "waitingforkey",
                            "dispatch": "sync",
                            "follows": "playing",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "addTextTrack",
                            "type": "TextTrack",
                            "param": [
                                {
                                    "name": "kind",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "label",
                                    "optional": "1",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "language",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "canPlayType",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "type",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "load",
                            "type": "void"
                        },
                        {
                            "name": "msClearEffects",
                            "type": "void"
                        },
                        {
                            "name": "msGetAsCastingSource",
                            "type": "any"
                        },
                        {
                            "name": "msInsertAudioEffect",
                            "type": "void",
                            "param": [
                                {
                                    "name": "activatableClassId",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "effectRequired",
                                    "type": "boolean"
                                },
                                {
                                    "name": "config",
                                    "optional": "1",
                                    "type": "any"
                                }
                            ]
                        },
                        {
                            "name": "msSetMediaKeys",
                            "type": "void",
                            "param": [
                                {
                                    "name": "mediaKeys",
                                    "type": "MSMediaKeys"
                                }
                            ]
                        },
                        {
                            "name": "msSetMediaProtectionManager",
                            "type": "void",
                            "param": [
                                {
                                    "name": "mediaProtectionManager",
                                    "optional": "1",
                                    "type": "any"
                                }
                            ]
                        },
                        {
                            "name": "pause",
                            "type": "void"
                        },
                        {
                            "name": "play",
                            "type": "void"
                        },
                        {
                            "name": "setMediaKeys",
                            "type": "Promise<void>",
                            "param": [
                                {
                                    "name": "mediaKeys",
                                    "nullable": "1",
                                    "type": "MediaKeys"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "audioTracks",
                            "read-only": "1",
                            "type": "AudioTrackList"
                        },
                        {
                            "name": "autoplay",
                            "content-attribute": "autoplay",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "buffered",
                            "read-only": "1",
                            "type": "TimeRanges"
                        },
                        {
                            "name": "controls",
                            "content-attribute": "controls",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "crossOrigin",
                            "content-attribute": "crossorigin",
                            "content-attribute-enum-values": "anonymous use-credentials",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "currentSrc",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "currentTime",
                            "type": "double"
                        },
                        {
                            "name": "defaultMuted",
                            "content-attribute": "muted",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "defaultPlaybackRate",
                            "type": "double"
                        },
                        {
                            "name": "duration",
                            "read-only": "1",
                            "type": "double"
                        },
                        {
                            "name": "ended",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "error",
                            "read-only": "1",
                            "type": "MediaError"
                        },
                        {
                            "name": "loop",
                            "content-attribute": "loop",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "mediaKeys",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "MediaKeys"
                        },
                        {
                            "name": "msAudioCategory",
                            "type": "DOMString"
                        },
                        {
                            "name": "msAudioDeviceType",
                            "type": "DOMString"
                        },
                        {
                            "name": "msGraphicsTrustStatus",
                            "read-only": "1",
                            "type": "MSGraphicsTrust"
                        },
                        {
                            "name": "msKeys",
                            "read-only": "1",
                            "type": "MSMediaKeys"
                        },
                        {
                            "name": "msPlayToDisabled",
                            "content-attribute": "x-ms-playtodisabled",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "msPlayToPreferredSourceUri",
                            "content-attribute": "x-ms-playtopreferredsourceuri",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "type": "DOMString"
                        },
                        {
                            "name": "msPlayToPrimary",
                            "content-attribute": "x-ms-playtoprimary",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "msPlayToSource",
                            "read-only": "1",
                            "type": "any"
                        },
                        {
                            "name": "msRealTime",
                            "type": "boolean"
                        },
                        {
                            "name": "muted",
                            "type": "boolean"
                        },
                        {
                            "name": "networkState",
                            "read-only": "1",
                            "type": "unsigned short"
                        },
                        {
                            "name": "onencrypted",
                            "event-handler": "encrypted",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmsneedkey",
                            "event-handler": "msneedkey",
                            "type": "EventHandler"
                        },
                        {
                            "name": "paused",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "playbackRate",
                            "type": "double"
                        },
                        {
                            "name": "played",
                            "read-only": "1",
                            "type": "TimeRanges"
                        },
                        {
                            "name": "preload",
                            "content-attribute": "preload",
                            "content-attribute-enum-values": "none metadata auto",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "readyState",
                            "read-only": "1",
                            "type": "any"
                        },
                        {
                            "name": "seekable",
                            "read-only": "1",
                            "type": "TimeRanges"
                        },
                        {
                            "name": "seeking",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "src",
                            "content-attribute": "src",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "type": "DOMString"
                        },
                        {
                            "name": "srcObject",
                            "nullable": "1",
                            "type": "MediaStream"
                        },
                        {
                            "name": "textTracks",
                            "read-only": "1",
                            "type": "TextTrackList"
                        },
                        {
                            "name": "videoTracks",
                            "read-only": "1",
                            "type": "VideoTrackList"
                        },
                        {
                            "name": "volume",
                            "type": "double"
                        }
                    ]
                }
            },
            {
                "name": "HTMLMenuElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "menu",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "compact",
                            "content-attribute": "compact",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "type",
                            "content-attribute": "type",
                            "content-attribute-enum-values": "1 a A i I disc circle square",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLMetaElement",
                "extends": "HTMLElement",
                "element": [
                    {
                        "name": "meta",
                        "html-self-closing": "1",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "charset",
                            "content-attribute": "charset",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "character_encoding",
                            "type": "DOMString"
                        },
                        {
                            "name": "content",
                            "content-attribute": "content",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "httpEquiv",
                            "content-attribute": "http-equiv",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "name",
                            "content-attribute": "name",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "scheme",
                            "content-attribute": "scheme",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "url",
                            "content-attribute": "url",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLMeterElement",
                "extends": "HTMLElement",
                "element": [
                    {
                        "name": "meter",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "high",
                            "content-attribute": "high",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "type": "double"
                        },
                        {
                            "name": "low",
                            "content-attribute": "low",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "type": "double"
                        },
                        {
                            "name": "max",
                            "content-attribute": "max",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "type": "double"
                        },
                        {
                            "name": "min",
                            "content-attribute": "min",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "type": "double"
                        },
                        {
                            "name": "optimum",
                            "content-attribute": "optimum",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "type": "double"
                        },
                        {
                            "name": "value",
                            "content-attribute": "value",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "type": "double"
                        }
                    ]
                }
            },
            {
                "name": "HTMLModElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "ins",
                        "namespace": "HTML"
                    },
                    {
                        "name": "del",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "cite",
                            "content-attribute": "cite",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "type": "DOMString"
                        },
                        {
                            "name": "dateTime",
                            "content-attribute": "datetime",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "date_time",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLObjectElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "object",
                        "namespace": "HTML"
                    }
                ],
                "events": {
                    "event": [
                        {
                            "name": "load",
                            "dispatch": "async",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "abort",
                            "dispatch": "sync",
                            "type": "UIEvent"
                        }
                    ]
                },
                "implements": [
                    "GetSVGDocument"
                ],
                "methods": {
                    "method": [
                        {
                            "name": "checkValidity",
                            "type": "boolean"
                        },
                        {
                            "name": "setCustomValidity",
                            "type": "void",
                            "param": [
                                {
                                    "name": "error",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "align",
                            "content-attribute": "align",
                            "content-attribute-enum-values": "absbottom absmiddle baseline bottom left middle right texttop top",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "alt",
                            "content-attribute": "alt",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "altHtml",
                            "type": "DOMString"
                        },
                        {
                            "name": "archive",
                            "content-attribute": "archive",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "BaseHref",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "border",
                            "content-attribute": "border",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "DOMString"
                        },
                        {
                            "name": "code",
                            "content-attribute": "code",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "type": "DOMString"
                        },
                        {
                            "name": "codeBase",
                            "content-attribute": "codebase",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "type": "DOMString"
                        },
                        {
                            "name": "codeType",
                            "content-attribute": "codetype",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "mime_type",
                            "type": "DOMString"
                        },
                        {
                            "name": "contentDocument",
                            "read-only": "1",
                            "type": "Document"
                        },
                        {
                            "name": "data",
                            "content-attribute": "data",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "type": "DOMString"
                        },
                        {
                            "name": "declare",
                            "content-attribute": "declare",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "form",
                            "read-only": "1",
                            "type": "HTMLFormElement"
                        },
                        {
                            "name": "height",
                            "content-attribute": "height",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "DOMString"
                        },
                        {
                            "name": "hspace",
                            "content-attribute": "hspace",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "long"
                        },
                        {
                            "name": "msPlayToDisabled",
                            "content-attribute": "x-ms-playtodisabled",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "msPlayToPreferredSourceUri",
                            "content-attribute": "x-ms-playtopreferredsourceuri",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "type": "DOMString"
                        },
                        {
                            "name": "msPlayToPrimary",
                            "content-attribute": "x-ms-playtoprimary",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "msPlayToSource",
                            "read-only": "1",
                            "type": "any"
                        },
                        {
                            "name": "name",
                            "content-attribute": "name",
                            "content-attribute-enum-values": "_blank _self _parent _top",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "name_ref",
                            "type": "DOMString"
                        },
                        {
                            "name": "readyState",
                            "read-only": "1",
                            "type": "unsigned short"
                        },
                        {
                            "name": "standby",
                            "content-attribute": "standby",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "type",
                            "content-attribute": "type",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "mime_type",
                            "type": "DOMString"
                        },
                        {
                            "name": "useMap",
                            "content-attribute": "usemap",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "hash_name_ref",
                            "type": "DOMString"
                        },
                        {
                            "name": "validationMessage",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "validity",
                            "read-only": "1",
                            "type": "ValidityState"
                        },
                        {
                            "name": "vspace",
                            "content-attribute": "vspace",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "long"
                        },
                        {
                            "name": "width",
                            "content-attribute": "width",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "DOMString"
                        },
                        {
                            "name": "willValidate",
                            "read-only": "1",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "HTMLOListElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "ol",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "compact",
                            "content-attribute": "compact",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "start",
                            "content-attribute": "start",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "signed_integer",
                            "type": "long"
                        },
                        {
                            "name": "type",
                            "content-attribute": "type",
                            "content-attribute-enum-values": "1 a A i I disc circle square",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLOptGroupElement",
                "extends": "HTMLElement",
                "element": [
                    {
                        "name": "optgroup",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "defaultSelected",
                            "content-attribute": "selected",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "disabled",
                            "content-attribute": "disabled",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "form",
                            "read-only": "1",
                            "type": "HTMLFormElement"
                        },
                        {
                            "name": "index",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "label",
                            "content-attribute": "label",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "selected",
                            "type": "boolean"
                        },
                        {
                            "name": "text",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "value",
                            "content-attribute": "value",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLOptionElement",
                "extends": "HTMLElement",
                "element": [
                    {
                        "name": "option",
                        "namespace": "HTML"
                    }
                ],
                "named-constructor": {
                    "name": "Option",
                    "param": [
                        {
                            "name": "text",
                            "optional": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "value",
                            "optional": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "defaultSelected",
                            "optional": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "selected",
                            "optional": "1",
                            "type": "boolean"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "defaultSelected",
                            "content-attribute": "selected",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "disabled",
                            "content-attribute": "disabled",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "form",
                            "read-only": "1",
                            "type": "HTMLFormElement"
                        },
                        {
                            "name": "index",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "label",
                            "content-attribute": "label",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "selected",
                            "type": "boolean"
                        },
                        {
                            "name": "text",
                            "type": "DOMString"
                        },
                        {
                            "name": "value",
                            "content-attribute": "value",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLOptionsCollection",
                "extends": "HTMLCollection",
                "anonymous-methods": {
                    "method": [
                        {
                            "creator": "1",
                            "setter": "1",
                            "type": "void",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                },
                                {
                                    "name": "option",
                                    "nullable": "1",
                                    "type": "HTMLOptionElement"
                                }
                            ]
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "add",
                            "type": "void",
                            "param": [
                                {
                                    "name": "element",
                                    "type": "(HTMLOptionElement or HTMLOptGroupElement)"
                                },
                                {
                                    "name": "before",
                                    "default": "null",
                                    "nullable": "1",
                                    "optional": "1",
                                    "type": "(HTMLElement or long)"
                                }
                            ]
                        },
                        {
                            "name": "remove",
                            "type": "void",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "length",
                            "type": "unsigned long"
                        },
                        {
                            "name": "selectedIndex",
                            "type": "long"
                        }
                    ]
                }
            },
            {
                "name": "HTMLOutputElement",
                "extends": "HTMLElement",
                "element": [
                    {
                        "name": "output",
                        "namespace": "HTML"
                    }
                ],
                "methods": {
                    "method": [
                        {
                            "name": "checkValidity",
                            "type": "boolean"
                        },
                        {
                            "name": "reportValidity",
                            "type": "boolean"
                        },
                        {
                            "name": "setCustomValidity",
                            "type": "void",
                            "param": [
                                {
                                    "name": "error",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "defaultValue",
                            "type": "DOMString"
                        },
                        {
                            "name": "form",
                            "read-only": "1",
                            "type": "HTMLFormElement"
                        },
                        {
                            "name": "htmlFor",
                            "content-attribute": "for",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "space_separated_id_refs",
                            "put-forwards": "value",
                            "read-only": "1",
                            "same-object": "1",
                            "type": "DOMSettableTokenList"
                        },
                        {
                            "name": "name",
                            "content-attribute": "name",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "type",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "validationMessage",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "validity",
                            "read-only": "1",
                            "type": "ValidityState"
                        },
                        {
                            "name": "value",
                            "type": "DOMString"
                        },
                        {
                            "name": "willValidate",
                            "read-only": "1",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "HTMLParagraphElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "p",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "align",
                            "content-attribute": "align",
                            "content-attribute-enum-values": "center justify left right",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "clear",
                            "content-attribute": "clear",
                            "content-attribute-enum-values": "all left right none",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLParamElement",
                "extends": "HTMLElement",
                "element": [
                    {
                        "name": "param",
                        "html-self-closing": "1",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "name",
                            "content-attribute": "name",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "type",
                            "content-attribute": "type",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "mime_type",
                            "type": "DOMString"
                        },
                        {
                            "name": "value",
                            "content-attribute": "value",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "valueType",
                            "content-attribute": "valuetype",
                            "content-attribute-enum-values": "data ref object",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLPictureElement",
                "extends": "HTMLElement",
                "element": [
                    {
                        "name": "picture",
                        "namespace": "HTML"
                    }
                ]
            },
            {
                "name": "HTMLPreElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "pre",
                        "namespace": "HTML"
                    },
                    {
                        "name": "listing",
                        "namespace": "HTML"
                    },
                    {
                        "name": "xmp",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "width",
                            "content-attribute": "width",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "long"
                        }
                    ]
                }
            },
            {
                "name": "HTMLProgressElement",
                "extends": "HTMLElement",
                "element": [
                    {
                        "name": "progress",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "form",
                            "read-only": "1",
                            "type": "HTMLFormElement"
                        },
                        {
                            "name": "max",
                            "content-attribute": "max",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "type": "float"
                        },
                        {
                            "name": "position",
                            "read-only": "1",
                            "type": "float"
                        },
                        {
                            "name": "value",
                            "content-attribute": "value",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "HTMLQuoteElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "q",
                        "namespace": "HTML"
                    },
                    {
                        "name": "blockquote",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "cite",
                            "content-attribute": "cite",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLScriptElement",
                "extends": "HTMLElement",
                "element": [
                    {
                        "name": "script",
                        "namespace": "HTML"
                    }
                ],
                "events": {
                    "event": [
                        {
                            "name": "error",
                            "dispatch": "sync",
                            "type": "Event"
                        },
                        {
                            "name": "load",
                            "dispatch": "async",
                            "skips-window": "1",
                            "type": "Event"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "async",
                            "content-attribute": "async",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "charset",
                            "content-attribute": "charset",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "character_encoding",
                            "type": "DOMString"
                        },
                        {
                            "name": "crossOrigin",
                            "content-attribute": "crossorigin",
                            "content-attribute-enum-values": "anonymous use-credentials",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "defer",
                            "content-attribute": "defer",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "event",
                            "content-attribute": "event",
                            "content-attribute-enum-values": "onload onload()",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "htmlFor",
                            "content-attribute": "for",
                            "content-attribute-enum-values": "window",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "src",
                            "content-attribute": "src",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "type": "DOMString"
                        },
                        {
                            "name": "text",
                            "type": "DOMString"
                        },
                        {
                            "name": "type",
                            "content-attribute": "type",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "mime_type",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLSelectElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "select",
                        "namespace": "HTML"
                    }
                ],
                "events": {
                    "event": [
                        {
                            "name": "change",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "type": "Event"
                        },
                        {
                            "name": "invalid",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "add",
                            "type": "void",
                            "param": [
                                {
                                    "name": "element",
                                    "type": "HTMLElement"
                                },
                                {
                                    "name": "before",
                                    "optional": "1",
                                    "type": "(HTMLElement or long)"
                                }
                            ]
                        },
                        {
                            "name": "checkValidity",
                            "type": "boolean"
                        },
                        {
                            "name": "item",
                            "getter": "1",
                            "type": "any",
                            "param": [
                                {
                                    "name": "name",
                                    "optional": "1",
                                    "type": "any"
                                },
                                {
                                    "name": "index",
                                    "optional": "1",
                                    "type": "any"
                                }
                            ]
                        },
                        {
                            "name": "namedItem",
                            "getter": "1",
                            "type": "any",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "remove",
                            "type": "void",
                            "param": [
                                {
                                    "name": "index",
                                    "optional": "1",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "setCustomValidity",
                            "type": "void",
                            "param": [
                                {
                                    "name": "error",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "autofocus",
                            "content-attribute": "autofocus",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "disabled",
                            "content-attribute": "disabled",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "form",
                            "read-only": "1",
                            "type": "HTMLFormElement"
                        },
                        {
                            "name": "length",
                            "type": "unsigned long"
                        },
                        {
                            "name": "multiple",
                            "content-attribute": "multiple",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "name",
                            "content-attribute": "name",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "options",
                            "read-only": "1",
                            "type": "HTMLOptionsCollection"
                        },
                        {
                            "name": "required",
                            "content-attribute": "required",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "selectedIndex",
                            "type": "long"
                        },
                        {
                            "name": "selectedOptions",
                            "read-only": "1",
                            "type": "HTMLCollection"
                        },
                        {
                            "name": "size",
                            "content-attribute": "size",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "1_or_greater_integer",
                            "type": "unsigned long"
                        },
                        {
                            "name": "type",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "validationMessage",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "validity",
                            "read-only": "1",
                            "type": "ValidityState"
                        },
                        {
                            "name": "value",
                            "type": "DOMString"
                        },
                        {
                            "name": "willValidate",
                            "read-only": "1",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "HTMLSourceElement",
                "extends": "HTMLElement",
                "element": [
                    {
                        "name": "source",
                        "html-self-closing": "1",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "media",
                            "content-attribute": "media",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "media_query",
                            "type": "DOMString"
                        },
                        {
                            "name": "msKeySystem",
                            "type": "DOMString"
                        },
                        {
                            "name": "sizes",
                            "content-attribute": "sizes",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "image_sizes",
                            "type": "DOMString"
                        },
                        {
                            "name": "src",
                            "content-attribute": "src",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "type": "DOMString"
                        },
                        {
                            "name": "srcset",
                            "content-attribute": "srcset",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "image_candidates",
                            "type": "DOMString"
                        },
                        {
                            "name": "type",
                            "content-attribute": "type",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "mime_type",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLSpanElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "span",
                        "namespace": "HTML"
                    }
                ]
            },
            {
                "name": "HTMLStyleElement",
                "extends": "HTMLElement",
                "element": [
                    {
                        "name": "style",
                        "namespace": "HTML"
                    }
                ],
                "events": {
                    "event": [
                        {
                            "name": "error",
                            "dispatch": "async",
                            "type": "Event"
                        },
                        {
                            "name": "load",
                            "dispatch": "async",
                            "follows": "readystatechange",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "readystatechange",
                            "dispatch": "async",
                            "precedes": "load",
                            "tags": "IEOnly",
                            "type": "Event"
                        }
                    ]
                },
                "implements": [
                    "LinkStyle"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "disabled",
                            "type": "boolean"
                        },
                        {
                            "name": "media",
                            "content-attribute": "media",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "media_query",
                            "type": "DOMString"
                        },
                        {
                            "name": "type",
                            "content-attribute": "type",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "mime_type",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLTableCaptionElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "caption",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "align",
                            "content-attribute": "align",
                            "content-attribute-enum-values": "bottom center left right top",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "vAlign",
                            "content-attribute": "valign",
                            "content-attribute-enum-values": "top bottom",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLTableCellElement",
                "extends": "HTMLElement",
                "implements": [
                    "HTMLTableAlignment"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "abbr",
                            "content-attribute": "abbr",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "align",
                            "content-attribute": "align",
                            "content-attribute-enum-values": "center justify left right",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "axis",
                            "content-attribute": "axis",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "bgColor",
                            "content-attribute": "bgcolor",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "simple_color",
                            "type": "any"
                        },
                        {
                            "name": "cellIndex",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "colSpan",
                            "content-attribute": "colspan",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "1_or_greater_integer",
                            "type": "unsigned long"
                        },
                        {
                            "name": "headers",
                            "content-attribute": "headers",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "space_separated_id_refs",
                            "type": "DOMString"
                        },
                        {
                            "name": "height",
                            "content-attribute": "height",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "any"
                        },
                        {
                            "name": "noWrap",
                            "content-attribute": "nowrap",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "rowSpan",
                            "content-attribute": "rowspan",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "unsigned long"
                        },
                        {
                            "name": "scope",
                            "content-attribute": "scope",
                            "content-attribute-enum-values": "row col rowgroup colgroup",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "width",
                            "content-attribute": "width",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLTableColElement",
                "extends": "HTMLElement",
                "element": [
                    {
                        "name": "col",
                        "html-self-closing": "1",
                        "namespace": "HTML"
                    },
                    {
                        "name": "colgroup",
                        "namespace": "HTML"
                    }
                ],
                "implements": [
                    "HTMLTableAlignment"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "align",
                            "content-attribute": "align",
                            "content-attribute-enum-values": "center justify left right",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "span",
                            "content-attribute": "span",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "1_or_greater_integer",
                            "type": "unsigned long"
                        },
                        {
                            "name": "width",
                            "content-attribute": "width",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "any"
                        }
                    ]
                }
            },
            {
                "name": "HTMLTableDataCellElement",
                "extends": "HTMLTableCellElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "td",
                        "namespace": "HTML"
                    }
                ]
            },
            {
                "name": "HTMLTableElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "table",
                        "namespace": "HTML"
                    }
                ],
                "methods": {
                    "method": [
                        {
                            "name": "createCaption",
                            "type": "HTMLElement"
                        },
                        {
                            "name": "createTBody",
                            "type": "HTMLElement"
                        },
                        {
                            "name": "createTFoot",
                            "type": "HTMLElement"
                        },
                        {
                            "name": "createTHead",
                            "type": "HTMLElement"
                        },
                        {
                            "name": "deleteCaption",
                            "type": "void"
                        },
                        {
                            "name": "deleteRow",
                            "type": "void",
                            "param": [
                                {
                                    "name": "index",
                                    "default": "-1",
                                    "optional": "1",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "deleteTFoot",
                            "type": "void"
                        },
                        {
                            "name": "deleteTHead",
                            "type": "void"
                        },
                        {
                            "name": "insertRow",
                            "type": "HTMLElement",
                            "param": [
                                {
                                    "name": "index",
                                    "default": "-1",
                                    "optional": "1",
                                    "type": "long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "align",
                            "content-attribute": "align",
                            "content-attribute-enum-values": "center left right",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "bgColor",
                            "content-attribute": "bgcolor",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "simple_color",
                            "type": "any"
                        },
                        {
                            "name": "border",
                            "content-attribute": "border",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "DOMString"
                        },
                        {
                            "name": "borderColor",
                            "content-attribute": "bordercolor",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "simple_color",
                            "type": "any"
                        },
                        {
                            "name": "caption",
                            "type": "HTMLTableCaptionElement"
                        },
                        {
                            "name": "cellPadding",
                            "content-attribute": "cellpadding",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "integer_or_percentage",
                            "type": "DOMString"
                        },
                        {
                            "name": "cellSpacing",
                            "content-attribute": "cellspacing",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "integer_or_percentage",
                            "type": "DOMString"
                        },
                        {
                            "name": "cols",
                            "content-attribute": "cols",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "1_or_greater_integer",
                            "type": "long"
                        },
                        {
                            "name": "frame",
                            "content-attribute": "frame",
                            "content-attribute-enum-values": "void above below border box hsides lhs rhs vsides",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "height",
                            "content-attribute": "height",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "any"
                        },
                        {
                            "name": "rows",
                            "read-only": "1",
                            "type": "HTMLCollection"
                        },
                        {
                            "name": "rules",
                            "content-attribute": "rules",
                            "content-attribute-enum-values": "all cols groups none rows",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "summary",
                            "content-attribute": "summary",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "tBodies",
                            "read-only": "1",
                            "type": "HTMLCollection"
                        },
                        {
                            "name": "tFoot",
                            "type": "HTMLTableSectionElement"
                        },
                        {
                            "name": "tHead",
                            "type": "HTMLTableSectionElement"
                        },
                        {
                            "name": "width",
                            "content-attribute": "width",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLTableHeaderCellElement",
                "extends": "HTMLTableCellElement",
                "element": [
                    {
                        "name": "th",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "scope",
                            "content-attribute": "scope",
                            "content-attribute-enum-values": "row col rowgroup colgroup",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLTableRowElement",
                "extends": "HTMLElement",
                "element": [
                    {
                        "name": "tr",
                        "namespace": "HTML"
                    }
                ],
                "implements": [
                    "HTMLTableAlignment"
                ],
                "methods": {
                    "method": [
                        {
                            "name": "deleteCell",
                            "type": "void",
                            "param": [
                                {
                                    "name": "index",
                                    "default": "-1",
                                    "optional": "1",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "insertCell",
                            "type": "HTMLElement",
                            "param": [
                                {
                                    "name": "index",
                                    "default": "-1",
                                    "optional": "1",
                                    "type": "long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "align",
                            "content-attribute": "align",
                            "content-attribute-enum-values": "center justify left right",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "bgColor",
                            "content-attribute": "bgcolor",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "simple_color",
                            "type": "any"
                        },
                        {
                            "name": "cells",
                            "read-only": "1",
                            "type": "HTMLCollection"
                        },
                        {
                            "name": "height",
                            "content-attribute": "height",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "any"
                        },
                        {
                            "name": "rowIndex",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "sectionRowIndex",
                            "read-only": "1",
                            "type": "long"
                        }
                    ]
                }
            },
            {
                "name": "HTMLTableSectionElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "thead",
                        "namespace": "HTML"
                    },
                    {
                        "name": "tbody",
                        "namespace": "HTML"
                    },
                    {
                        "name": "tfoot",
                        "namespace": "HTML"
                    }
                ],
                "implements": [
                    "HTMLTableAlignment"
                ],
                "methods": {
                    "method": [
                        {
                            "name": "deleteRow",
                            "type": "void",
                            "param": [
                                {
                                    "name": "index",
                                    "default": "-1",
                                    "optional": "1",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "insertRow",
                            "type": "HTMLElement",
                            "param": [
                                {
                                    "name": "index",
                                    "default": "-1",
                                    "optional": "1",
                                    "type": "long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "align",
                            "content-attribute": "align",
                            "content-attribute-enum-values": "center justify left right",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "rows",
                            "read-only": "1",
                            "type": "HTMLCollection"
                        }
                    ]
                }
            },
            {
                "name": "HTMLTemplateElement",
                "extends": "HTMLElement",
                "element": [
                    {
                        "name": "template",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "content",
                            "read-only": "1",
                            "type": "DocumentFragment"
                        }
                    ]
                }
            },
            {
                "name": "HTMLTextAreaElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "textarea",
                        "namespace": "HTML"
                    }
                ],
                "events": {
                    "event": [
                        {
                            "name": "change",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "type": "Event"
                        },
                        {
                            "name": "input",
                            "bubbles": "1",
                            "dispatch": "async",
                            "type": "Event"
                        },
                        {
                            "name": "invalid",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "checkValidity",
                            "type": "boolean"
                        },
                        {
                            "name": "select",
                            "type": "void"
                        },
                        {
                            "name": "setCustomValidity",
                            "type": "void",
                            "param": [
                                {
                                    "name": "error",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "setSelectionRange",
                            "type": "void",
                            "param": [
                                {
                                    "name": "start",
                                    "type": "unsigned long"
                                },
                                {
                                    "name": "end",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "autofocus",
                            "content-attribute": "autofocus",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "cols",
                            "content-attribute": "cols",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "1_or_greater_integer",
                            "type": "unsigned long"
                        },
                        {
                            "name": "defaultValue",
                            "content-attribute": "value",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "disabled",
                            "content-attribute": "disabled",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "form",
                            "read-only": "1",
                            "type": "HTMLFormElement"
                        },
                        {
                            "name": "maxLength",
                            "content-attribute": "maxlength",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "long"
                        },
                        {
                            "name": "name",
                            "content-attribute": "name",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "placeholder",
                            "content-attribute": "placeholder",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "readOnly",
                            "content-attribute": "readonly",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "required",
                            "content-attribute": "required",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "rows",
                            "content-attribute": "rows",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "1_or_greater_integer",
                            "type": "unsigned long"
                        },
                        {
                            "name": "selectionEnd",
                            "type": "unsigned long"
                        },
                        {
                            "name": "selectionStart",
                            "type": "unsigned long"
                        },
                        {
                            "name": "status",
                            "type": "any"
                        },
                        {
                            "name": "type",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "validationMessage",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "validity",
                            "read-only": "1",
                            "type": "ValidityState"
                        },
                        {
                            "name": "value",
                            "type": "DOMString"
                        },
                        {
                            "name": "willValidate",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "wrap",
                            "content-attribute": "wrap",
                            "content-attribute-enum-values": "soft hard off",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLTimeElement",
                "extends": "HTMLElement",
                "element": [
                    {
                        "name": "time",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "dateTime",
                            "content-attribute": "datetime",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "date_time",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLTitleElement",
                "extends": "HTMLElement",
                "element": [
                    {
                        "name": "title",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "text",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLTrackElement",
                "extends": "HTMLElement",
                "constants": {
                    "constant": [
                        {
                            "name": "ERROR",
                            "type": "unsigned short",
                            "value": [
                                "3"
                            ]
                        },
                        {
                            "name": "LOADED",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "LOADING",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "NONE",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        }
                    ]
                },
                "element": [
                    {
                        "name": "track",
                        "html-self-closing": "1",
                        "namespace": "HTML"
                    }
                ],
                "events": {
                    "event": [
                        {
                            "name": "cuechange",
                            "dispatch": "sync",
                            "type": "Event"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "default",
                            "content-attribute": "default",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "kind",
                            "content-attribute": "kind",
                            "content-attribute-enum-values": "subtitles captions descriptions chapters metadata",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        },
                        {
                            "name": "label",
                            "content-attribute": "label",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "readyState",
                            "read-only": "1",
                            "type": "unsigned short"
                        },
                        {
                            "name": "src",
                            "content-attribute": "src",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "type": "DOMString"
                        },
                        {
                            "name": "srclang",
                            "content-attribute": "srclang",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "bcp47_lang",
                            "type": "DOMString"
                        },
                        {
                            "name": "track",
                            "read-only": "1",
                            "type": "TextTrack"
                        }
                    ]
                }
            },
            {
                "name": "HTMLUListElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "ul",
                        "namespace": "HTML"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "compact",
                            "content-attribute": "compact",
                            "content-attribute-boolean": "1",
                            "content-attribute-reflects": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "type",
                            "content-attribute": "type",
                            "content-attribute-enum-values": "1 a A i I disc circle square",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "HTMLUnknownElement",
                "extends": "HTMLElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "off on",
                            "name": "unselectable",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "isindex",
                        "namespace": "HTML"
                    },
                    {
                        "name": "nextid",
                        "namespace": "HTML"
                    }
                ]
            },
            {
                "name": "HTMLVideoElement",
                "extends": "HTMLMediaElement",
                "element": [
                    {
                        "name": "video",
                        "namespace": "HTML"
                    }
                ],
                "events": {
                    "event": [
                        {
                            "name": "MSVideoFrameStepCompleted",
                            "dispatch": "sync",
                            "tags": "MSAppOnly",
                            "type": "Event"
                        },
                        {
                            "name": "MSVideoFormatChanged",
                            "dispatch": "sync",
                            "tags": "MSAppOnly",
                            "type": "Event"
                        },
                        {
                            "name": "MSVideoOptimalLayoutChanged",
                            "dispatch": "sync",
                            "tags": "MSAppOnly",
                            "type": "Event"
                        },
                        {
                            "name": "resize",
                            "dispatch": "async",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "getVideoPlaybackQuality",
                            "type": "VideoPlaybackQuality"
                        },
                        {
                            "name": "msFrameStep",
                            "type": "void",
                            "param": [
                                {
                                    "name": "forward",
                                    "type": "boolean"
                                }
                            ]
                        },
                        {
                            "name": "msInsertVideoEffect",
                            "type": "void",
                            "param": [
                                {
                                    "name": "activatableClassId",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "effectRequired",
                                    "type": "boolean"
                                },
                                {
                                    "name": "config",
                                    "optional": "1",
                                    "type": "any"
                                }
                            ]
                        },
                        {
                            "name": "msSetVideoRectangle",
                            "type": "void",
                            "param": [
                                {
                                    "name": "left",
                                    "type": "float"
                                },
                                {
                                    "name": "top",
                                    "type": "float"
                                },
                                {
                                    "name": "right",
                                    "type": "float"
                                },
                                {
                                    "name": "bottom",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "webkitEnterFullscreen",
                            "type": "void"
                        },
                        {
                            "name": "webkitEnterFullScreen",
                            "type": "void"
                        },
                        {
                            "name": "webkitExitFullscreen",
                            "type": "void"
                        },
                        {
                            "name": "webkitExitFullScreen",
                            "type": "void"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "height",
                            "content-attribute": "height",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "unsigned long"
                        },
                        {
                            "name": "msHorizontalMirror",
                            "type": "boolean"
                        },
                        {
                            "name": "msIsLayoutOptimalForPlayback",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "msIsStereo3D",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "msStereo3DPackingMode",
                            "type": "DOMString"
                        },
                        {
                            "name": "msStereo3DRenderMode",
                            "type": "DOMString"
                        },
                        {
                            "name": "msZoom",
                            "type": "boolean"
                        },
                        {
                            "name": "onMSVideoFormatChanged",
                            "event-handler": "MSVideoFormatChanged",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onMSVideoFrameStepCompleted",
                            "event-handler": "MSVideoFrameStepCompleted",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onMSVideoOptimalLayoutChanged",
                            "event-handler": "MSVideoOptimalLayoutChanged",
                            "type": "EventHandler"
                        },
                        {
                            "name": "poster",
                            "content-attribute": "poster",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "type": "DOMString"
                        },
                        {
                            "name": "videoHeight",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "videoWidth",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "webkitDisplayingFullscreen",
                            "read-only": "1",
                            "type": "bool"
                        },
                        {
                            "name": "webkitSupportsFullscreen",
                            "read-only": "1",
                            "type": "bool"
                        },
                        {
                            "name": "width",
                            "content-attribute": "width",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "IDBCursor",
                "extends": "Object",
                "constants": {
                    "constant": [
                        {
                            "name": "NEXT",
                            "type": "DOMString",
                            "value": [
                                "next"
                            ]
                        },
                        {
                            "name": "NEXT_NO_DUPLICATE",
                            "type": "DOMString",
                            "value": [
                                "nextunique"
                            ]
                        },
                        {
                            "name": "PREV",
                            "type": "DOMString",
                            "value": [
                                "prev"
                            ]
                        },
                        {
                            "name": "PREV_NO_DUPLICATE",
                            "type": "DOMString",
                            "value": [
                                "prevunique"
                            ]
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "advance",
                            "type": "void",
                            "param": [
                                {
                                    "name": "count",
                                    "enforce-range": "1",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "continue",
                            "type": "void",
                            "param": [
                                {
                                    "name": "key",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "any"
                                }
                            ]
                        },
                        {
                            "name": "delete",
                            "type": "IDBRequest"
                        },
                        {
                            "name": "update",
                            "type": "IDBRequest",
                            "param": [
                                {
                                    "name": "value",
                                    "type": "any"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "direction",
                            "read-only": "1",
                            "type": "IDBCursorDirection"
                        },
                        {
                            "name": "key",
                            "read-only": "1",
                            "type": "any"
                        },
                        {
                            "name": "primaryKey",
                            "read-only": "1",
                            "type": "any"
                        },
                        {
                            "name": "source",
                            "read-only": "1",
                            "type": "(IDBObjectStore or IDBIndex)"
                        }
                    ]
                }
            },
            {
                "name": "IDBCursorWithValue",
                "extends": "IDBCursor",
                "properties": {
                    "property": [
                        {
                            "name": "value",
                            "read-only": "1",
                            "type": "any"
                        }
                    ]
                }
            },
            {
                "name": "IDBDatabase",
                "extends": "EventTarget",
                "events": {
                    "event": [
                        {
                            "name": "error",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "abort",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "close",
                            "type": "void"
                        },
                        {
                            "name": "createObjectStore",
                            "type": "IDBObjectStore",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "optionalParameters",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "IDBObjectStoreParameters"
                                }
                            ]
                        },
                        {
                            "name": "deleteObjectStore",
                            "type": "void",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "transaction",
                            "type": "IDBTransaction",
                            "param": [
                                {
                                    "name": "storeNames",
                                    "type": "(DOMString or sequence<DOMString>)"
                                },
                                {
                                    "name": "mode",
                                    "default": "\"readonly\"",
                                    "optional": "1",
                                    "type": "IDBTransactionMode"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "name",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "objectStoreNames",
                            "read-only": "1",
                            "type": "DOMStringList"
                        },
                        {
                            "name": "onabort",
                            "event-handler": "abort",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onerror",
                            "event-handler": "error",
                            "type": "EventHandler"
                        },
                        {
                            "name": "version",
                            "read-only": "1",
                            "type": "unsigned long long"
                        }
                    ]
                }
            },
            {
                "name": "IDBFactory",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "cmp",
                            "type": "short",
                            "param": [
                                {
                                    "name": "first",
                                    "type": "any"
                                },
                                {
                                    "name": "second",
                                    "type": "any"
                                }
                            ]
                        },
                        {
                            "name": "deleteDatabase",
                            "type": "IDBOpenDBRequest",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "open",
                            "type": "IDBOpenDBRequest",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "version",
                                    "enforce-range": "1",
                                    "optional": "1",
                                    "type": "unsigned long long"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "IDBIndex",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "count",
                            "type": "IDBRequest",
                            "param": [
                                {
                                    "name": "key",
                                    "optional": "1",
                                    "type": "any"
                                }
                            ]
                        },
                        {
                            "name": "get",
                            "type": "IDBRequest",
                            "param": [
                                {
                                    "name": "key",
                                    "type": "any"
                                }
                            ]
                        },
                        {
                            "name": "getKey",
                            "type": "IDBRequest",
                            "param": [
                                {
                                    "name": "key",
                                    "type": "any"
                                }
                            ]
                        },
                        {
                            "name": "openCursor",
                            "type": "IDBRequest",
                            "param": [
                                {
                                    "name": "range",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "any"
                                },
                                {
                                    "name": "direction",
                                    "default": "\"next\"",
                                    "optional": "1",
                                    "type": "IDBCursorDirection"
                                }
                            ]
                        },
                        {
                            "name": "openKeyCursor",
                            "type": "IDBRequest",
                            "param": [
                                {
                                    "name": "range",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "any"
                                },
                                {
                                    "name": "direction",
                                    "default": "\"next\"",
                                    "optional": "1",
                                    "type": "IDBCursorDirection"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "keyPath",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "name",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "objectStore",
                            "read-only": "1",
                            "type": "IDBObjectStore"
                        },
                        {
                            "name": "unique",
                            "read-only": "1",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "IDBKeyRange",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "bound",
                            "static": "1",
                            "type": "IDBKeyRange",
                            "param": [
                                {
                                    "name": "lower",
                                    "type": "any"
                                },
                                {
                                    "name": "upper",
                                    "type": "any"
                                },
                                {
                                    "name": "lowerOpen",
                                    "default": "false",
                                    "optional": "1",
                                    "type": "boolean"
                                },
                                {
                                    "name": "upperOpen",
                                    "default": "false",
                                    "optional": "1",
                                    "type": "boolean"
                                }
                            ]
                        },
                        {
                            "name": "lowerBound",
                            "static": "1",
                            "type": "IDBKeyRange",
                            "param": [
                                {
                                    "name": "lower",
                                    "type": "any"
                                },
                                {
                                    "name": "open",
                                    "default": "false",
                                    "optional": "1",
                                    "type": "boolean"
                                }
                            ]
                        },
                        {
                            "name": "only",
                            "static": "1",
                            "type": "IDBKeyRange",
                            "param": [
                                {
                                    "name": "value",
                                    "type": "any"
                                }
                            ]
                        },
                        {
                            "name": "upperBound",
                            "static": "1",
                            "type": "IDBKeyRange",
                            "param": [
                                {
                                    "name": "upper",
                                    "type": "any"
                                },
                                {
                                    "name": "open",
                                    "default": "false",
                                    "optional": "1",
                                    "type": "boolean"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "lower",
                            "read-only": "1",
                            "type": "any"
                        },
                        {
                            "name": "lowerOpen",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "upper",
                            "read-only": "1",
                            "type": "any"
                        },
                        {
                            "name": "upperOpen",
                            "read-only": "1",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "IDBObjectStore",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "add",
                            "type": "IDBRequest",
                            "param": [
                                {
                                    "name": "value",
                                    "type": "any"
                                },
                                {
                                    "name": "key",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "any"
                                }
                            ]
                        },
                        {
                            "name": "clear",
                            "type": "IDBRequest"
                        },
                        {
                            "name": "count",
                            "type": "IDBRequest",
                            "param": [
                                {
                                    "name": "key",
                                    "optional": "1",
                                    "type": "any"
                                }
                            ]
                        },
                        {
                            "name": "createIndex",
                            "type": "IDBIndex",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "keyPath",
                                    "type": "DOMString",
                                    "type-original": "IDBKeyPath"
                                },
                                {
                                    "name": "optionalParameters",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "IDBIndexParameters"
                                }
                            ]
                        },
                        {
                            "name": "delete",
                            "type": "IDBRequest",
                            "param": [
                                {
                                    "name": "key",
                                    "type": "any"
                                }
                            ]
                        },
                        {
                            "name": "deleteIndex",
                            "type": "void",
                            "param": [
                                {
                                    "name": "indexName",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "get",
                            "type": "IDBRequest",
                            "param": [
                                {
                                    "name": "key",
                                    "type": "any"
                                }
                            ]
                        },
                        {
                            "name": "index",
                            "type": "IDBIndex",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "openCursor",
                            "type": "IDBRequest",
                            "param": [
                                {
                                    "name": "range",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "any"
                                },
                                {
                                    "name": "direction",
                                    "default": "\"next\"",
                                    "optional": "1",
                                    "type": "IDBCursorDirection"
                                }
                            ]
                        },
                        {
                            "name": "put",
                            "type": "IDBRequest",
                            "param": [
                                {
                                    "name": "value",
                                    "type": "any"
                                },
                                {
                                    "name": "key",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "any"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "indexNames",
                            "read-only": "1",
                            "type": "DOMStringList"
                        },
                        {
                            "name": "keyPath",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "DOMString",
                            "type-original": "IDBKeyPath"
                        },
                        {
                            "name": "name",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "transaction",
                            "read-only": "1",
                            "type": "IDBTransaction"
                        }
                    ]
                }
            },
            {
                "name": "IDBOpenDBRequest",
                "extends": "IDBRequest",
                "events": {
                    "event": [
                        {
                            "name": "blocked",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "upgradeneeded",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "IDBVersionChangeEvent"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "onblocked",
                            "event-handler": "blocked",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onupgradeneeded",
                            "event-handler": "upgradeneeded",
                            "type": "EventHandler"
                        }
                    ]
                }
            },
            {
                "name": "IDBRequest",
                "extends": "EventTarget",
                "events": {
                    "event": [
                        {
                            "name": "error",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "success",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "error",
                            "read-only": "1",
                            "type": "DOMError"
                        },
                        {
                            "name": "onerror",
                            "event-handler": "error",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onsuccess",
                            "event-handler": "success",
                            "type": "EventHandler"
                        },
                        {
                            "name": "readyState",
                            "read-only": "1",
                            "type": "IDBRequestReadyState"
                        },
                        {
                            "name": "result",
                            "read-only": "1",
                            "type": "any"
                        },
                        {
                            "name": "source",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "(IDBObjectStore or IDBIndex or IDBCursor)"
                        },
                        {
                            "name": "transaction",
                            "read-only": "1",
                            "type": "IDBTransaction"
                        }
                    ]
                }
            },
            {
                "name": "IDBTransaction",
                "extends": "EventTarget",
                "constants": {
                    "constant": [
                        {
                            "name": "READ_ONLY",
                            "type": "DOMString",
                            "value": [
                                "readonly"
                            ]
                        },
                        {
                            "name": "READ_WRITE",
                            "type": "DOMString",
                            "value": [
                                "readwrite"
                            ]
                        },
                        {
                            "name": "VERSION_CHANGE",
                            "type": "DOMString",
                            "value": [
                                "versionchange"
                            ]
                        }
                    ]
                },
                "events": {
                    "event": [
                        {
                            "name": "error",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "abort",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "complete",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "abort",
                            "type": "void"
                        },
                        {
                            "name": "objectStore",
                            "type": "IDBObjectStore",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "db",
                            "read-only": "1",
                            "type": "IDBDatabase"
                        },
                        {
                            "name": "error",
                            "read-only": "1",
                            "type": "DOMError"
                        },
                        {
                            "name": "mode",
                            "read-only": "1",
                            "type": "IDBTransactionMode"
                        },
                        {
                            "name": "onabort",
                            "event-handler": "abort",
                            "type": "EventHandler"
                        },
                        {
                            "name": "oncomplete",
                            "event-handler": "complete",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onerror",
                            "event-handler": "error",
                            "type": "EventHandler"
                        }
                    ]
                }
            },
            {
                "name": "IDBVersionChangeEvent",
                "extends": "Event",
                "properties": {
                    "property": [
                        {
                            "name": "newVersion",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "oldVersion",
                            "read-only": "1",
                            "type": "unsigned long long"
                        }
                    ]
                }
            },
            {
                "name": "IIRFilterNode",
                "extends": "AudioNode",
                "methods": {
                    "method": [
                        {
                            "name": "getFrequencyResponse",
                            "type": "void",
                            "param": [
                                {
                                    "name": "frequencyHz",
                                    "type": "Float32Array"
                                },
                                {
                                    "name": "magResponse",
                                    "type": "Float32Array"
                                },
                                {
                                    "name": "phaseResponse",
                                    "type": "Float32Array"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "ImageData",
                "extends": "Object",
                "constructor": {
                    "param": [
                        {
                            "name": "width",
                            "type": "unsigned long"
                        },
                        {
                            "name": "height",
                            "type": "unsigned long"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "data",
                            "read-only": "1",
                            "type": "Uint8ClampedArray"
                        },
                        {
                            "name": "height",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "width",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "IntersectionObserver",
                "exposed": "Window",
                "extends": "Object",
                "constructor": {
                    "param": [
                        {
                            "name": "callback",
                            "type": "IntersectionObserverCallback"
                        },
                        {
                            "name": "options",
                            "optional": "1",
                            "type": "IntersectionObserverInit"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "disconnect",
                            "type": "void"
                        },
                        {
                            "name": "observe",
                            "type": "void",
                            "param": [
                                {
                                    "name": "target",
                                    "type": "Element"
                                }
                            ]
                        },
                        {
                            "name": "takeRecords",
                            "type": "sequence<IntersectionObserverEntry>"
                        },
                        {
                            "name": "unobserve",
                            "type": "void",
                            "param": [
                                {
                                    "name": "target",
                                    "type": "Element"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "root",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "Element"
                        },
                        {
                            "name": "rootMargin",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "thresholds",
                            "read-only": "1",
                            "type": "sequence<double>"
                        }
                    ]
                }
            },
            {
                "name": "IntersectionObserverEntry",
                "extends": "Object",
                "constructor": {
                    "param": [
                        {
                            "name": "intersectionObserverEntryInit",
                            "type": "IntersectionObserverEntryInit"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "boundingClientRect",
                            "read-only": "1",
                            "type": "ClientRect"
                        },
                        {
                            "name": "intersectionRatio",
                            "read-only": "1",
                            "type": "double"
                        },
                        {
                            "name": "intersectionRect",
                            "read-only": "1",
                            "type": "ClientRect"
                        },
                        {
                            "name": "rootBounds",
                            "read-only": "1",
                            "type": "ClientRect"
                        },
                        {
                            "name": "target",
                            "read-only": "1",
                            "type": "Element"
                        },
                        {
                            "name": "time",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        }
                    ]
                }
            },
            {
                "name": "KeyboardEvent",
                "extends": "UIEvent",
                "constants": {
                    "constant": [
                        {
                            "name": "DOM_KEY_LOCATION_JOYSTICK",
                            "type": "unsigned long",
                            "value": [
                                "0x05"
                            ]
                        },
                        {
                            "name": "DOM_KEY_LOCATION_LEFT",
                            "type": "unsigned long",
                            "value": [
                                "0x01"
                            ]
                        },
                        {
                            "name": "DOM_KEY_LOCATION_MOBILE",
                            "type": "unsigned long",
                            "value": [
                                "0x04"
                            ]
                        },
                        {
                            "name": "DOM_KEY_LOCATION_NUMPAD",
                            "type": "unsigned long",
                            "value": [
                                "0x03"
                            ]
                        },
                        {
                            "name": "DOM_KEY_LOCATION_RIGHT",
                            "type": "unsigned long",
                            "value": [
                                "0x02"
                            ]
                        },
                        {
                            "name": "DOM_KEY_LOCATION_STANDARD",
                            "type": "unsigned long",
                            "value": [
                                "0x00"
                            ]
                        }
                    ]
                },
                "constructor": {
                    "param": [
                        {
                            "name": "typeArg",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "optional": "1",
                            "type": "KeyboardEventInit"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "getModifierState",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "keyArg",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "initKeyboardEvent",
                            "type": "void",
                            "param": [
                                {
                                    "name": "typeArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "canBubbleArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "cancelableArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "viewArg",
                                    "type": "Window"
                                },
                                {
                                    "name": "keyArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "locationArg",
                                    "type": "unsigned long"
                                },
                                {
                                    "name": "modifiersListArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "repeat",
                                    "type": "boolean"
                                },
                                {
                                    "name": "locale",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "altKey",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "char",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "charCode",
                            "read-only": "1",
                            "type": "short"
                        },
                        {
                            "name": "ctrlKey",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "key",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "keyCode",
                            "read-only": "1",
                            "type": "short"
                        },
                        {
                            "name": "locale",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "location",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "metaKey",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "repeat",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "shiftKey",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "which",
                            "read-only": "1",
                            "type": "short"
                        }
                    ]
                }
            },
            {
                "name": "ListeningStateChangedEvent",
                "extends": "Event",
                "properties": {
                    "property": [
                        {
                            "name": "label",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "state",
                            "read-only": "1",
                            "type": "ListeningState"
                        }
                    ]
                }
            },
            {
                "name": "Location",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "assign",
                            "property-descriptor-not-configurable": "1",
                            "property-descriptor-not-writable": "1",
                            "type": "void",
                            "param": [
                                {
                                    "name": "url",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "reload",
                            "property-descriptor-not-configurable": "1",
                            "property-descriptor-not-writable": "1",
                            "type": "void",
                            "param": [
                                {
                                    "name": "forcedReload",
                                    "default": "false",
                                    "optional": "1",
                                    "type": "boolean"
                                }
                            ]
                        },
                        {
                            "name": "replace",
                            "property-descriptor-not-configurable": "1",
                            "property-descriptor-not-writable": "1",
                            "type": "void",
                            "param": [
                                {
                                    "name": "url",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "toString",
                            "property-descriptor-not-configurable": "1",
                            "stringifier": "1",
                            "type": "DOMString"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "hash",
                            "property-descriptor-not-configurable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "host",
                            "property-descriptor-not-configurable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "hostname",
                            "property-descriptor-not-configurable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "href",
                            "property-descriptor-not-configurable": "1",
                            "stringifier": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "origin",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "pathname",
                            "type": "DOMString"
                        },
                        {
                            "name": "port",
                            "type": "DOMString"
                        },
                        {
                            "name": "protocol",
                            "type": "DOMString"
                        },
                        {
                            "name": "search",
                            "property-descriptor-not-configurable": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "LongRunningScriptDetectedEvent",
                "extends": "Event",
                "tags": "MSAppOnly",
                "properties": {
                    "property": [
                        {
                            "name": "executionTime",
                            "read-only": "1",
                            "tags": "MSAppOnly",
                            "type": "long"
                        },
                        {
                            "name": "stopPageScriptExecution",
                            "tags": "MSAppOnly",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "MediaDeviceInfo",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "deviceId",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "groupId",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "kind",
                            "read-only": "1",
                            "type": "MediaDeviceKind"
                        },
                        {
                            "name": "label",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "MediaDevices",
                "extends": "EventTarget",
                "events": {
                    "event": [
                        {
                            "name": "devicechange",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "enumerateDevices",
                            "type": "Promise<sequence<MediaDeviceInfo>>"
                        },
                        {
                            "name": "getSupportedConstraints",
                            "type": "MediaTrackSupportedConstraints"
                        },
                        {
                            "name": "getUserMedia",
                            "type": "Promise<MediaStream>",
                            "param": [
                                {
                                    "name": "constraints",
                                    "type": "MediaStreamConstraints"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "ondevicechange",
                            "event-handler": "devicechange",
                            "type": "EventHandler"
                        }
                    ]
                }
            },
            {
                "name": "MediaElementAudioSourceNode",
                "extends": "AudioNode"
            },
            {
                "name": "MediaEncryptedEvent",
                "extends": "Event",
                "constructor": {
                    "param": [
                        {
                            "name": "type",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "optional": "1",
                            "type": "MediaEncryptedEventInit"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "initData",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "ArrayBuffer"
                        },
                        {
                            "name": "initDataType",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "MediaError",
                "extends": "Object",
                "constants": {
                    "constant": [
                        {
                            "name": "MEDIA_ERR_ABORTED",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "MEDIA_ERR_DECODE",
                            "type": "unsigned short",
                            "value": [
                                "3"
                            ]
                        },
                        {
                            "name": "MEDIA_ERR_NETWORK",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "MEDIA_ERR_SRC_NOT_SUPPORTED",
                            "type": "unsigned short",
                            "value": [
                                "4"
                            ]
                        },
                        {
                            "name": "MS_MEDIA_ERR_ENCRYPTED",
                            "type": "unsigned short",
                            "value": [
                                "5"
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "code",
                            "read-only": "1",
                            "type": "short"
                        },
                        {
                            "name": "msExtendedCode",
                            "read-only": "1",
                            "type": "long"
                        }
                    ]
                }
            },
            {
                "name": "MediaKeyMessageEvent",
                "extends": "Event",
                "constructor": {
                    "param": [
                        {
                            "name": "type",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "optional": "1",
                            "type": "MediaKeyMessageEventInit"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "message",
                            "read-only": "1",
                            "type": "ArrayBuffer"
                        },
                        {
                            "name": "messageType",
                            "read-only": "1",
                            "type": "MediaKeyMessageType"
                        }
                    ]
                }
            },
            {
                "name": "MediaKeys",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "createSession",
                            "type": "MediaKeySession",
                            "param": [
                                {
                                    "name": "sessionType",
                                    "default": "\"temporary\"",
                                    "optional": "1",
                                    "type": "MediaKeySessionType"
                                }
                            ]
                        },
                        {
                            "name": "setServerCertificate",
                            "type": "Promise<void>",
                            "param": [
                                {
                                    "name": "serverCertificate",
                                    "type": "BufferSource"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "MediaKeySession",
                "extends": "EventTarget",
                "events": {
                    "event": [
                        {
                            "name": "keystatuseschange",
                            "dispatch": "sync",
                            "type": "Event"
                        },
                        {
                            "name": "message",
                            "dispatch": "sync",
                            "type": "MediaKeyMessageEvent"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "close",
                            "type": "Promise<void>"
                        },
                        {
                            "name": "generateRequest",
                            "type": "Promise<void>",
                            "param": [
                                {
                                    "name": "initDataType",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "initData",
                                    "type": "BufferSource"
                                }
                            ]
                        },
                        {
                            "name": "load",
                            "type": "Promise<boolean>",
                            "param": [
                                {
                                    "name": "sessionId",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "remove",
                            "type": "Promise<void>"
                        },
                        {
                            "name": "update",
                            "type": "Promise<void>",
                            "param": [
                                {
                                    "name": "response",
                                    "type": "BufferSource"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "closed",
                            "read-only": "1",
                            "type": "Promise<void>"
                        },
                        {
                            "name": "expiration",
                            "read-only": "1",
                            "type": "UnrestrictedDouble"
                        },
                        {
                            "name": "keyStatuses",
                            "read-only": "1",
                            "type": "MediaKeyStatusMap"
                        },
                        {
                            "name": "sessionId",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "MediaKeyStatusMap",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "forEach",
                            "type": "void",
                            "param": [
                                {
                                    "name": "callback",
                                    "type": "ForEachCallback"
                                }
                            ]
                        },
                        {
                            "name": "get",
                            "type": "MediaKeyStatus",
                            "param": [
                                {
                                    "name": "keyId",
                                    "type": "BufferSource"
                                }
                            ]
                        },
                        {
                            "name": "has",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "keyId",
                                    "type": "BufferSource"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "size",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "MediaKeySystemAccess",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "createMediaKeys",
                            "type": "Promise<MediaKeys>"
                        },
                        {
                            "name": "getConfiguration",
                            "type": "MediaKeySystemConfiguration"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "keySystem",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "MediaList",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "appendMedium",
                            "type": "void",
                            "param": [
                                {
                                    "name": "newMedium",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "deleteMedium",
                            "type": "void",
                            "param": [
                                {
                                    "name": "oldMedium",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "item",
                            "getter": "1",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "toString",
                            "stringifier": "1",
                            "type": "DOMString"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "length",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "mediaText",
                            "stringifier": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "MediaQueryList",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "addListener",
                            "type": "void",
                            "param": [
                                {
                                    "name": "listener",
                                    "type": "MediaQueryListListener"
                                }
                            ]
                        },
                        {
                            "name": "removeListener",
                            "type": "void",
                            "param": [
                                {
                                    "name": "listener",
                                    "type": "MediaQueryListListener"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "matches",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "media",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "MediaSource",
                "extends": "EventTarget",
                "constructor": {},
                "events": {
                    "event": [
                        {
                            "name": "sourceopen",
                            "dispatch": "sync",
                            "precedes": "sourceended sourceclose",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "sourceended",
                            "dispatch": "sync",
                            "follows": "sourceopen",
                            "precedes": "sourceclose",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "sourceclose",
                            "dispatch": "sync",
                            "follows": "sourceended sourceopen",
                            "skips-window": "1",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "addSourceBuffer",
                            "type": "SourceBuffer",
                            "param": [
                                {
                                    "name": "type",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "endOfStream",
                            "type": "void",
                            "param": [
                                {
                                    "name": "error",
                                    "optional": "1",
                                    "type": "EndOfStreamError"
                                }
                            ]
                        },
                        {
                            "name": "isTypeSupported",
                            "static": "1",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "type",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "removeSourceBuffer",
                            "type": "void",
                            "param": [
                                {
                                    "name": "sourceBuffer",
                                    "type": "SourceBuffer"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "activeSourceBuffers",
                            "read-only": "1",
                            "type": "SourceBufferList"
                        },
                        {
                            "name": "duration",
                            "type": "double"
                        },
                        {
                            "name": "readyState",
                            "read-only": "1",
                            "type": "ReadyState"
                        },
                        {
                            "name": "sourceBuffers",
                            "read-only": "1",
                            "type": "SourceBufferList"
                        }
                    ]
                }
            },
            {
                "name": "MediaStream",
                "extends": "EventTarget",
                "constructor": {
                    "param": [
                        {
                            "name": "streamOrTracks",
                            "optional": "1",
                            "type": "(MediaStream or sequence<MediaStreamTrack>)"
                        }
                    ]
                },
                "events": {
                    "event": [
                        {
                            "name": "active",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "inactive",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "addtrack",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "MediaStreamTrackEvent"
                        },
                        {
                            "name": "removetrack",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "MediaStreamTrackEvent"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "addTrack",
                            "type": "void",
                            "param": [
                                {
                                    "name": "track",
                                    "type": "MediaStreamTrack"
                                }
                            ]
                        },
                        {
                            "name": "clone",
                            "type": "MediaStream"
                        },
                        {
                            "name": "getAudioTracks",
                            "type": "sequence<MediaStreamTrack>"
                        },
                        {
                            "name": "getTrackById",
                            "nullable": "1",
                            "type": "MediaStreamTrack",
                            "param": [
                                {
                                    "name": "trackId",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "getTracks",
                            "type": "sequence<MediaStreamTrack>"
                        },
                        {
                            "name": "getVideoTracks",
                            "type": "sequence<MediaStreamTrack>"
                        },
                        {
                            "name": "removeTrack",
                            "type": "void",
                            "param": [
                                {
                                    "name": "track",
                                    "type": "MediaStreamTrack"
                                }
                            ]
                        },
                        {
                            "name": "stop",
                            "type": "void"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "active",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "id",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "onactive",
                            "event-handler": "active",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onaddtrack",
                            "event-handler": "addtrack",
                            "type": "EventHandler"
                        },
                        {
                            "name": "oninactive",
                            "event-handler": "inactive",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onremovetrack",
                            "event-handler": "removetrack",
                            "type": "EventHandler"
                        }
                    ]
                }
            },
            {
                "name": "MediaStreamAudioSourceNode",
                "extends": "AudioNode"
            },
            {
                "name": "MediaStreamError",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "constraintName",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "message",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "name",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "MediaStreamErrorEvent",
                "extends": "Event",
                "constructor": {
                    "param": [
                        {
                            "name": "typeArg",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "optional": "1",
                            "type": "MediaStreamErrorEventInit"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "error",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "MediaStreamError"
                        }
                    ]
                }
            },
            {
                "name": "MediaStreamEvent",
                "extends": "Event",
                "constructor": {
                    "param": [
                        {
                            "name": "type",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "type": "MediaStreamEventInit"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "stream",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "MediaStream"
                        }
                    ]
                }
            },
            {
                "name": "MediaStreamTrack",
                "extends": "EventTarget",
                "events": {
                    "event": [
                        {
                            "name": "mute",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "unmute",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "ended",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "MediaStreamErrorEvent"
                        },
                        {
                            "name": "overconstrained",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "MediaStreamErrorEvent"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "applyConstraints",
                            "type": "Promise<void>",
                            "param": [
                                {
                                    "name": "constraints",
                                    "type": "MediaTrackConstraints"
                                }
                            ]
                        },
                        {
                            "name": "clone",
                            "type": "MediaStreamTrack"
                        },
                        {
                            "name": "getCapabilities",
                            "type": "MediaTrackCapabilities"
                        },
                        {
                            "name": "getConstraints",
                            "type": "MediaTrackConstraints"
                        },
                        {
                            "name": "getSettings",
                            "type": "MediaTrackSettings"
                        },
                        {
                            "name": "stop",
                            "type": "void"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "enabled",
                            "type": "boolean"
                        },
                        {
                            "name": "id",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "kind",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "label",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "muted",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "onended",
                            "event-handler": "ended",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmute",
                            "event-handler": "mute",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onoverconstrained",
                            "event-handler": "overconstrained",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onunmute",
                            "event-handler": "unmute",
                            "type": "EventHandler"
                        },
                        {
                            "name": "readonly",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "readyState",
                            "read-only": "1",
                            "type": "MediaStreamTrackState"
                        },
                        {
                            "name": "remote",
                            "read-only": "1",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "MediaStreamTrackEvent",
                "extends": "Event",
                "constructor": {
                    "param": [
                        {
                            "name": "typeArg",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "optional": "1",
                            "type": "MediaStreamTrackEventInit"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "track",
                            "read-only": "1",
                            "type": "MediaStreamTrack"
                        }
                    ]
                }
            },
            {
                "name": "MessageChannel",
                "extends": "Object",
                "constructor": {},
                "properties": {
                    "property": [
                        {
                            "name": "port1",
                            "read-only": "1",
                            "type": "MessagePort"
                        },
                        {
                            "name": "port2",
                            "read-only": "1",
                            "type": "MessagePort"
                        }
                    ]
                }
            },
            {
                "name": "MessageEvent",
                "extends": "Event",
                "constructor": {
                    "param": [
                        {
                            "name": "typeArg",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "optional": "1",
                            "type": "MessageEventInit"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "initMessageEvent",
                            "type": "void",
                            "param": [
                                {
                                    "name": "typeArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "canBubbleArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "cancelableArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "dataArg",
                                    "type": "any"
                                },
                                {
                                    "name": "originArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "lastEventIdArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "sourceArg",
                                    "type": "Window"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "data",
                            "read-only": "1",
                            "type": "any"
                        },
                        {
                            "name": "origin",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "ports",
                            "read-only": "1",
                            "type": "any"
                        },
                        {
                            "name": "source",
                            "read-only": "1",
                            "type": "Window"
                        }
                    ]
                }
            },
            {
                "name": "MessagePort",
                "extends": "EventTarget",
                "events": {
                    "event": [
                        {
                            "name": "message",
                            "dispatch": "async",
                            "skips-window": "1",
                            "type": "MessageEvent"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "close",
                            "type": "void"
                        },
                        {
                            "name": "postMessage",
                            "type": "void",
                            "param": [
                                {
                                    "name": "message",
                                    "optional": "1",
                                    "type": "any"
                                },
                                {
                                    "name": "transfer",
                                    "optional": "1",
                                    "type": "sequence<Transferable>"
                                }
                            ]
                        },
                        {
                            "name": "start",
                            "type": "void"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "onmessage",
                            "event-handler": "message",
                            "type": "EventHandler"
                        }
                    ]
                }
            },
            {
                "name": "MimeType",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "description",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "enabledPlugin",
                            "read-only": "1",
                            "type": "Plugin"
                        },
                        {
                            "name": "suffixes",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "type",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "MimeTypeArray",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "item",
                            "getter": "1",
                            "type": "Plugin",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "namedItem",
                            "getter": "1",
                            "type": "Plugin",
                            "param": [
                                {
                                    "name": "type",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "length",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "MouseEvent",
                "extends": "UIEvent",
                "constructor": {
                    "param": [
                        {
                            "name": "typeArg",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "optional": "1",
                            "type": "MouseEventInit"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "getModifierState",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "keyArg",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "initMouseEvent",
                            "type": "void",
                            "param": [
                                {
                                    "name": "typeArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "canBubbleArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "cancelableArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "viewArg",
                                    "type": "Window"
                                },
                                {
                                    "name": "detailArg",
                                    "type": "long"
                                },
                                {
                                    "name": "screenXArg",
                                    "type": "long"
                                },
                                {
                                    "name": "screenYArg",
                                    "type": "long"
                                },
                                {
                                    "name": "clientXArg",
                                    "type": "long"
                                },
                                {
                                    "name": "clientYArg",
                                    "type": "long"
                                },
                                {
                                    "name": "ctrlKeyArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "altKeyArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "shiftKeyArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "metaKeyArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "buttonArg",
                                    "type": "unsigned short"
                                },
                                {
                                    "name": "relatedTargetArg",
                                    "type": "EventTarget"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "altKey",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "button",
                            "read-only": "1",
                            "type": "unsigned short"
                        },
                        {
                            "name": "buttons",
                            "read-only": "1",
                            "type": "unsigned short"
                        },
                        {
                            "name": "clientX",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "clientY",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "ctrlKey",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "fromElement",
                            "read-only": "1",
                            "type": "Element"
                        },
                        {
                            "name": "layerX",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "layerY",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "metaKey",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "movementX",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "movementY",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "offsetX",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "offsetY",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "pageX",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "pageY",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "relatedTarget",
                            "read-only": "1",
                            "type": "EventTarget"
                        },
                        {
                            "name": "screenX",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "screenY",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "shiftKey",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "toElement",
                            "read-only": "1",
                            "type": "Element"
                        },
                        {
                            "name": "which",
                            "read-only": "1",
                            "type": "unsigned short"
                        },
                        {
                            "name": "x",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "y",
                            "read-only": "1",
                            "type": "long"
                        }
                    ]
                }
            },
            {
                "name": "MSApp",
                "extends": "Object",
                "static": "1",
                "tags": "MSAppOnly",
                "constants": {
                    "constant": [
                        {
                            "name": "CURRENT",
                            "type": "DOMString",
                            "value": [
                                "current"
                            ]
                        },
                        {
                            "name": "HIGH",
                            "type": "DOMString",
                            "value": [
                                "high"
                            ]
                        },
                        {
                            "name": "IDLE",
                            "type": "DOMString",
                            "value": [
                                "idle"
                            ]
                        },
                        {
                            "name": "NORMAL",
                            "type": "DOMString",
                            "value": [
                                "normal"
                            ]
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "clearTemporaryWebDataAsync",
                            "static": "1",
                            "tags": "MSAppOnly",
                            "type": "MSAppAsyncOperation"
                        },
                        {
                            "name": "createBlobFromRandomAccessStream",
                            "property-descriptor-not-configurable": "1",
                            "property-descriptor-not-writable": "1",
                            "static": "1",
                            "tags": "MSAppOnly",
                            "type": "Blob",
                            "param": [
                                {
                                    "name": "type",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "seeker",
                                    "type": "any"
                                }
                            ]
                        },
                        {
                            "name": "createDataPackage",
                            "property-descriptor-not-configurable": "1",
                            "property-descriptor-not-writable": "1",
                            "static": "1",
                            "tags": "MSAppOnly",
                            "type": "any",
                            "param": [
                                {
                                    "name": "object",
                                    "type": "any"
                                }
                            ]
                        },
                        {
                            "name": "createDataPackageFromSelection",
                            "property-descriptor-not-configurable": "1",
                            "property-descriptor-not-writable": "1",
                            "static": "1",
                            "tags": "MSAppOnly",
                            "type": "any"
                        },
                        {
                            "name": "createFileFromStorageFile",
                            "property-descriptor-not-configurable": "1",
                            "property-descriptor-not-writable": "1",
                            "static": "1",
                            "tags": "MSAppOnly",
                            "type": "File",
                            "param": [
                                {
                                    "name": "storageFile",
                                    "type": "any"
                                }
                            ]
                        },
                        {
                            "name": "createStreamFromInputStream",
                            "property-descriptor-not-configurable": "1",
                            "property-descriptor-not-writable": "1",
                            "static": "1",
                            "tags": "MSAppOnly",
                            "type": "MSStream",
                            "param": [
                                {
                                    "name": "type",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "inputStream",
                                    "type": "any"
                                }
                            ]
                        },
                        {
                            "name": "execAsyncAtPriority",
                            "static": "1",
                            "type": "void",
                            "param": [
                                {
                                    "name": "asynchronousCallback",
                                    "type": "MSExecAtPriorityFunctionCallback"
                                },
                                {
                                    "name": "priority",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "args",
                                    "type": "any",
                                    "variadic": "1"
                                }
                            ]
                        },
                        {
                            "name": "execAtPriority",
                            "static": "1",
                            "type": "any",
                            "param": [
                                {
                                    "name": "synchronousCallback",
                                    "type": "MSExecAtPriorityFunctionCallback"
                                },
                                {
                                    "name": "priority",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "args",
                                    "type": "any",
                                    "variadic": "1"
                                }
                            ]
                        },
                        {
                            "name": "getCurrentPriority",
                            "static": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "getHtmlPrintDocumentSourceAsync",
                            "property-descriptor-not-configurable": "1",
                            "property-descriptor-not-writable": "1",
                            "static": "1",
                            "tags": "MSAppOnly",
                            "type": "Promise<any>",
                            "param": [
                                {
                                    "name": "htmlDoc",
                                    "type": "any"
                                }
                            ]
                        },
                        {
                            "name": "getViewId",
                            "static": "1",
                            "tags": "MSAppOnly",
                            "type": "any",
                            "param": [
                                {
                                    "name": "view",
                                    "type": "any"
                                }
                            ]
                        },
                        {
                            "name": "isTaskScheduledAtPriorityOrHigher",
                            "static": "1",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "priority",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "pageHandlesAllApplicationActivations",
                            "static": "1",
                            "tags": "MSAppOnly",
                            "type": "void",
                            "param": [
                                {
                                    "name": "enabled",
                                    "type": "boolean"
                                }
                            ]
                        },
                        {
                            "name": "suppressSubdownloadCredentialPrompts",
                            "static": "1",
                            "tags": "MSAppOnly",
                            "type": "void",
                            "param": [
                                {
                                    "name": "suppress",
                                    "type": "boolean"
                                }
                            ]
                        },
                        {
                            "name": "terminateApp",
                            "property-descriptor-not-configurable": "1",
                            "property-descriptor-not-writable": "1",
                            "static": "1",
                            "tags": "MSAppOnly",
                            "type": "void",
                            "param": [
                                {
                                    "name": "exceptionObject",
                                    "type": "any"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "MSAppAsyncOperation",
                "extends": "EventTarget",
                "tags": "MSAppOnly",
                "constants": {
                    "constant": [
                        {
                            "name": "COMPLETED",
                            "tags": "MSAppOnly",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "ERROR",
                            "tags": "MSAppOnly",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "STARTED",
                            "tags": "MSAppOnly",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        }
                    ]
                },
                "events": {
                    "event": [
                        {
                            "name": "error",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "tags": "MSAppOnly",
                            "type": "Event"
                        },
                        {
                            "name": "complete",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "tags": "MSAppOnly",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "start",
                            "tags": "MSAppOnly",
                            "type": "void"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "error",
                            "read-only": "1",
                            "tags": "MSAppOnly",
                            "type": "DOMError"
                        },
                        {
                            "name": "oncomplete",
                            "event-handler": "complete",
                            "tags": "MSAppOnly",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onerror",
                            "event-handler": "error",
                            "tags": "MSAppOnly",
                            "type": "EventHandler"
                        },
                        {
                            "name": "readyState",
                            "read-only": "1",
                            "tags": "MSAppOnly",
                            "type": "unsigned short"
                        },
                        {
                            "name": "result",
                            "read-only": "1",
                            "tags": "MSAppOnly",
                            "type": "any"
                        }
                    ]
                }
            },
            {
                "name": "MSAssertion",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "id",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "type",
                            "read-only": "1",
                            "type": "MSCredentialType"
                        }
                    ]
                }
            },
            {
                "name": "MSBlobBuilder",
                "extends": "Object",
                "constructor": {},
                "methods": {
                    "method": [
                        {
                            "name": "append",
                            "type": "void",
                            "param": [
                                {
                                    "name": "data",
                                    "type": "any"
                                },
                                {
                                    "name": "endings",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "getBlob",
                            "type": "Blob",
                            "param": [
                                {
                                    "name": "contentType",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "MSCredentials",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "getAssertion",
                            "type": "Promise<MSAssertion>",
                            "param": [
                                {
                                    "name": "challenge",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "filter",
                                    "optional": "1",
                                    "type": "MSCredentialFilter"
                                },
                                {
                                    "name": "params",
                                    "optional": "1",
                                    "type": "MSSignatureParameters"
                                }
                            ]
                        },
                        {
                            "name": "makeCredential",
                            "type": "Promise<MSAssertion>",
                            "param": [
                                {
                                    "name": "accountInfo",
                                    "type": "MSAccountInfo"
                                },
                                {
                                    "name": "params",
                                    "type": "sequence<MSCredentialParameters>"
                                },
                                {
                                    "name": "challenge",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "MSFIDOCredentialAssertion",
                "extends": "MSAssertion",
                "properties": {
                    "property": [
                        {
                            "name": "algorithm",
                            "read-only": "1",
                            "type": "(DOMString or Algorithm)",
                            "type-original": "AlgorithmIdentifier"
                        },
                        {
                            "name": "attestation",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "MSAttestationStatement"
                        },
                        {
                            "name": "publicKey",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "transportHints",
                            "read-only": "1",
                            "type": "sequence<MSTransportType>"
                        }
                    ]
                }
            },
            {
                "name": "MSFIDOSignature",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "authnrData",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "clientData",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "signature",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "MSFIDOSignatureAssertion",
                "extends": "MSAssertion",
                "properties": {
                    "property": [
                        {
                            "name": "signature",
                            "read-only": "1",
                            "type": "MSFIDOSignature"
                        }
                    ]
                }
            },
            {
                "name": "MSGesture",
                "extends": "Object",
                "constructor": {},
                "methods": {
                    "method": [
                        {
                            "name": "addPointer",
                            "type": "void",
                            "param": [
                                {
                                    "name": "pointerId",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "stop",
                            "type": "void"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "target",
                            "type": "Element"
                        }
                    ]
                }
            },
            {
                "name": "MSGestureEvent",
                "extends": "UIEvent",
                "constants": {
                    "constant": [
                        {
                            "name": "MSGESTURE_FLAG_BEGIN",
                            "type": "unsigned long",
                            "value": [
                                "0x00000001"
                            ]
                        },
                        {
                            "name": "MSGESTURE_FLAG_CANCEL",
                            "type": "unsigned long",
                            "value": [
                                "0x00000004"
                            ]
                        },
                        {
                            "name": "MSGESTURE_FLAG_END",
                            "type": "unsigned long",
                            "value": [
                                "0x00000002"
                            ]
                        },
                        {
                            "name": "MSGESTURE_FLAG_INERTIA",
                            "type": "unsigned long",
                            "value": [
                                "0x00000008"
                            ]
                        },
                        {
                            "name": "MSGESTURE_FLAG_NONE",
                            "type": "unsigned long",
                            "value": [
                                "0x00000000"
                            ]
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "initGestureEvent",
                            "type": "void",
                            "param": [
                                {
                                    "name": "typeArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "canBubbleArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "cancelableArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "viewArg",
                                    "type": "Window"
                                },
                                {
                                    "name": "detailArg",
                                    "type": "long"
                                },
                                {
                                    "name": "screenXArg",
                                    "type": "long"
                                },
                                {
                                    "name": "screenYArg",
                                    "type": "long"
                                },
                                {
                                    "name": "clientXArg",
                                    "type": "float"
                                },
                                {
                                    "name": "clientYArg",
                                    "type": "float"
                                },
                                {
                                    "name": "offsetXArg",
                                    "type": "float"
                                },
                                {
                                    "name": "offsetYArg",
                                    "type": "float"
                                },
                                {
                                    "name": "translationXArg",
                                    "type": "float"
                                },
                                {
                                    "name": "translationYArg",
                                    "type": "float"
                                },
                                {
                                    "name": "scaleArg",
                                    "type": "float"
                                },
                                {
                                    "name": "expansionArg",
                                    "type": "float"
                                },
                                {
                                    "name": "rotationArg",
                                    "type": "float"
                                },
                                {
                                    "name": "velocityXArg",
                                    "type": "float"
                                },
                                {
                                    "name": "velocityYArg",
                                    "type": "float"
                                },
                                {
                                    "name": "velocityExpansionArg",
                                    "type": "float"
                                },
                                {
                                    "name": "velocityAngularArg",
                                    "type": "float"
                                },
                                {
                                    "name": "hwTimestampArg",
                                    "type": "unsigned long long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "clientX",
                            "read-only": "1",
                            "type": "float"
                        },
                        {
                            "name": "clientY",
                            "read-only": "1",
                            "type": "float"
                        },
                        {
                            "name": "expansion",
                            "read-only": "1",
                            "type": "float"
                        },
                        {
                            "name": "gestureObject",
                            "read-only": "1",
                            "type": "any"
                        },
                        {
                            "name": "hwTimestamp",
                            "read-only": "1",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "offsetX",
                            "read-only": "1",
                            "type": "float"
                        },
                        {
                            "name": "offsetY",
                            "read-only": "1",
                            "type": "float"
                        },
                        {
                            "name": "rotation",
                            "read-only": "1",
                            "type": "float"
                        },
                        {
                            "name": "scale",
                            "read-only": "1",
                            "type": "float"
                        },
                        {
                            "name": "screenX",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "screenY",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "translationX",
                            "read-only": "1",
                            "type": "float"
                        },
                        {
                            "name": "translationY",
                            "read-only": "1",
                            "type": "float"
                        },
                        {
                            "name": "velocityAngular",
                            "read-only": "1",
                            "type": "float"
                        },
                        {
                            "name": "velocityExpansion",
                            "read-only": "1",
                            "type": "float"
                        },
                        {
                            "name": "velocityX",
                            "read-only": "1",
                            "type": "float"
                        },
                        {
                            "name": "velocityY",
                            "read-only": "1",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "MSGraphicsTrust",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "constrictionActive",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "status",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "MSHTMLWebViewElement",
                "extends": "HTMLElement",
                "tags": "MSAppOnly",
                "element": [
                    {
                        "name": "x-ms-webview",
                        "namespace": "HTML"
                    }
                ],
                "events": {
                    "event": [
                        {
                            "name": "MSWebViewNavigationStarting",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "precedes": "MSWebViewContentLoading",
                            "tags": "MSAppOnly",
                            "type": "NavigationEvent"
                        },
                        {
                            "name": "MSWebViewContentLoading",
                            "dispatch": "sync",
                            "follows": "MSWebViewNavigationStarting",
                            "precedes": "MSWebViewDOMContentLoaded",
                            "tags": "MSAppOnly",
                            "type": "NavigationEvent"
                        },
                        {
                            "name": "MSWebViewDOMContentLoaded",
                            "dispatch": "sync",
                            "follows": "MSWebViewContentLoading",
                            "precedes": "MSWebViewNavigationCompleted",
                            "tags": "MSAppOnly",
                            "type": "NavigationEvent"
                        },
                        {
                            "name": "MSWebViewNavigationCompleted",
                            "dispatch": "sync",
                            "follows": "MSWebViewDOMContentLoaded",
                            "tags": "MSAppOnly",
                            "type": "NavigationCompletedEvent"
                        },
                        {
                            "name": "MSWebViewScriptNotify",
                            "dispatch": "sync",
                            "tags": "MSAppOnly",
                            "type": "ScriptNotifyEvent"
                        },
                        {
                            "name": "MSWebViewUnsafeContentWarningDisplaying",
                            "dispatch": "sync",
                            "tags": "MSAppOnly",
                            "type": "Event"
                        },
                        {
                            "name": "MSWebViewContainsFullScreenElementChanged",
                            "dispatch": "sync",
                            "tags": "MSAppOnly",
                            "type": "Event"
                        },
                        {
                            "name": "MSWebViewLongRunningScriptDetected",
                            "dispatch": "sync",
                            "tags": "MSAppOnly",
                            "type": "LongRunningScriptDetectedEvent"
                        },
                        {
                            "name": "MSWebViewUnviewableContentIdentified",
                            "dispatch": "sync",
                            "tags": "MSAppOnly",
                            "type": "UnviewableContentIdentifiedEvent"
                        },
                        {
                            "name": "MSWebViewPermissionRequested",
                            "dispatch": "sync",
                            "tags": "MSAppOnly",
                            "type": "PermissionRequestedEvent"
                        },
                        {
                            "name": "MSWebViewUnsupportedUriSchemeIdentified",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "tags": "MSAppOnly",
                            "type": "NavigationEvent"
                        },
                        {
                            "name": "MSWebViewNewWindowRequested",
                            "dispatch": "sync",
                            "tags": "MSAppOnly",
                            "type": "NavigationEventWithReferrer"
                        },
                        {
                            "name": "MSWebViewFrameNavigationStarting",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "precedes": "MSWebViewFrameContentLoading",
                            "tags": "MSAppOnly",
                            "type": "NavigationEvent"
                        },
                        {
                            "name": "MSWebViewFrameNavigationCompleted",
                            "dispatch": "sync",
                            "follows": "MSWebViewFrameDOMContentLoaded",
                            "tags": "MSAppOnly",
                            "type": "NavigationCompletedEvent"
                        },
                        {
                            "name": "MSWebViewFrameDOMContentLoaded",
                            "dispatch": "sync",
                            "follows": "MSWebViewFrameContentLoading",
                            "precedes": "MSWebViewFrameNavigationCompleted",
                            "tags": "MSAppOnly",
                            "type": "NavigationEvent"
                        },
                        {
                            "name": "MSWebViewFrameContentLoading",
                            "dispatch": "sync",
                            "follows": "MSWebViewFrameNavigationStarting",
                            "precedes": "MSWebViewFrameDOMContentLoaded",
                            "tags": "MSAppOnly",
                            "type": "NavigationEvent"
                        },
                        {
                            "name": "departingfocus",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "type": "FocusNavigationEvent"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "addWebAllowedObject",
                            "tags": "MSAppOnly",
                            "type": "void",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "applicationObject",
                                    "type": "any"
                                }
                            ]
                        },
                        {
                            "name": "buildLocalStreamUri",
                            "tags": "MSAppOnly",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "contentIdentifier",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "relativePath",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "capturePreviewToBlobAsync",
                            "tags": "MSAppOnly",
                            "type": "MSWebViewAsyncOperation"
                        },
                        {
                            "name": "captureSelectedContentToDataPackageAsync",
                            "tags": "MSAppOnly",
                            "type": "MSWebViewAsyncOperation"
                        },
                        {
                            "name": "getDeferredPermissionRequestById",
                            "tags": "MSAppOnly",
                            "type": "DeferredPermissionRequest",
                            "param": [
                                {
                                    "name": "id",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "getDeferredPermissionRequests",
                            "tags": "MSAppOnly",
                            "type": "sequence<DeferredPermissionRequest>"
                        },
                        {
                            "name": "goBack",
                            "tags": "MSAppOnly",
                            "type": "void"
                        },
                        {
                            "name": "goForward",
                            "tags": "MSAppOnly",
                            "type": "void"
                        },
                        {
                            "name": "invokeScriptAsync",
                            "tags": "MSAppOnly",
                            "type": "MSWebViewAsyncOperation",
                            "param": [
                                {
                                    "name": "scriptName",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "args",
                                    "type": "any",
                                    "variadic": "1"
                                }
                            ]
                        },
                        {
                            "name": "navigate",
                            "tags": "MSAppOnly",
                            "type": "void",
                            "param": [
                                {
                                    "name": "uri",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "navigateFocus",
                            "tags": "MSAppOnly",
                            "type": "void",
                            "param": [
                                {
                                    "name": "navigationReason",
                                    "type": "NavigationReason"
                                },
                                {
                                    "name": "origin",
                                    "type": "FocusNavigationOrigin"
                                }
                            ]
                        },
                        {
                            "name": "navigateToLocalStreamUri",
                            "tags": "MSAppOnly",
                            "type": "void",
                            "param": [
                                {
                                    "name": "source",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "streamResolver",
                                    "type": "any"
                                }
                            ]
                        },
                        {
                            "name": "navigateToString",
                            "tags": "MSAppOnly",
                            "type": "void",
                            "param": [
                                {
                                    "name": "contents",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "navigateWithHttpRequestMessage",
                            "tags": "MSAppOnly",
                            "type": "void",
                            "param": [
                                {
                                    "name": "requestMessage",
                                    "type": "any"
                                }
                            ]
                        },
                        {
                            "name": "refresh",
                            "tags": "MSAppOnly",
                            "type": "void"
                        },
                        {
                            "name": "stop",
                            "tags": "MSAppOnly",
                            "type": "void"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "canGoBack",
                            "read-only": "1",
                            "tags": "MSAppOnly",
                            "type": "bool"
                        },
                        {
                            "name": "canGoForward",
                            "read-only": "1",
                            "tags": "MSAppOnly",
                            "type": "bool"
                        },
                        {
                            "name": "containsFullScreenElement",
                            "read-only": "1",
                            "tags": "MSAppOnly",
                            "type": "bool"
                        },
                        {
                            "name": "documentTitle",
                            "read-only": "1",
                            "tags": "MSAppOnly",
                            "type": "DOMString"
                        },
                        {
                            "name": "height",
                            "content-attribute": "height",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "tags": "MSAppOnly",
                            "type": "unsigned long"
                        },
                        {
                            "name": "settings",
                            "read-only": "1",
                            "tags": "MSAppOnly",
                            "type": "MSWebViewSettings"
                        },
                        {
                            "name": "src",
                            "tags": "MSAppOnly",
                            "type": "DOMString"
                        },
                        {
                            "name": "width",
                            "content-attribute": "width",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "non_negative_integer",
                            "tags": "MSAppOnly",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "MSInputMethodContext",
                "extends": "EventTarget",
                "events": {
                    "event": [
                        {
                            "name": "MSCandidateWindowShow",
                            "dispatch": "sync",
                            "precedes": "MSCandidateWindowUpdate MSCandidateWindowHide",
                            "skips-window": "1",
                            "tags": "IEOnly",
                            "type": "Event"
                        },
                        {
                            "name": "MSCandidateWindowUpdate",
                            "dispatch": "sync",
                            "follows": "MSCandidateWindowShow",
                            "precedes": "MSCandidateWindowHide",
                            "skips-window": "1",
                            "tags": "IEOnly",
                            "type": "Event"
                        },
                        {
                            "name": "MSCandidateWindowHide",
                            "dispatch": "sync",
                            "follows": "MSCandidateWindowShow MSCandidateWindowUpdate",
                            "skips-window": "1",
                            "tags": "IEOnly",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "getCandidateWindowClientRect",
                            "type": "ClientRect"
                        },
                        {
                            "name": "getCompositionAlternatives",
                            "type": "sequence<DOMString>"
                        },
                        {
                            "name": "hasComposition",
                            "type": "boolean"
                        },
                        {
                            "name": "isCandidateWindowVisible",
                            "type": "boolean"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "compositionEndOffset",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "compositionStartOffset",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "oncandidatewindowhide",
                            "event-handler": "MSCandidateWindowHide",
                            "type": "EventHandler"
                        },
                        {
                            "name": "oncandidatewindowshow",
                            "event-handler": "MSCandidateWindowShow",
                            "type": "EventHandler"
                        },
                        {
                            "name": "oncandidatewindowupdate",
                            "event-handler": "MSCandidateWindowUpdate",
                            "type": "EventHandler"
                        },
                        {
                            "name": "target",
                            "read-only": "1",
                            "type": "HTMLElement"
                        }
                    ]
                }
            },
            {
                "name": "MSManipulationEvent",
                "extends": "UIEvent",
                "tags": "IEOnly",
                "constants": {
                    "constant": [
                        {
                            "name": "MS_MANIPULATION_STATE_ACTIVE",
                            "tags": "IEOnly",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "MS_MANIPULATION_STATE_CANCELLED",
                            "tags": "IEOnly",
                            "type": "unsigned short",
                            "value": [
                                "6"
                            ]
                        },
                        {
                            "name": "MS_MANIPULATION_STATE_COMMITTED",
                            "tags": "IEOnly",
                            "type": "unsigned short",
                            "value": [
                                "7"
                            ]
                        },
                        {
                            "name": "MS_MANIPULATION_STATE_DRAGGING",
                            "tags": "IEOnly",
                            "type": "unsigned short",
                            "value": [
                                "5"
                            ]
                        },
                        {
                            "name": "MS_MANIPULATION_STATE_INERTIA",
                            "tags": "IEOnly",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "MS_MANIPULATION_STATE_PRESELECT",
                            "tags": "IEOnly",
                            "type": "unsigned short",
                            "value": [
                                "3"
                            ]
                        },
                        {
                            "name": "MS_MANIPULATION_STATE_SELECTING",
                            "tags": "IEOnly",
                            "type": "unsigned short",
                            "value": [
                                "4"
                            ]
                        },
                        {
                            "name": "MS_MANIPULATION_STATE_STOPPED",
                            "tags": "IEOnly",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "initMSManipulationEvent",
                            "tags": "IEOnly",
                            "type": "void",
                            "param": [
                                {
                                    "name": "typeArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "canBubbleArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "cancelableArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "viewArg",
                                    "type": "Window"
                                },
                                {
                                    "name": "detailArg",
                                    "type": "long"
                                },
                                {
                                    "name": "lastState",
                                    "type": "long"
                                },
                                {
                                    "name": "currentState",
                                    "type": "long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "currentState",
                            "read-only": "1",
                            "tags": "IEOnly",
                            "type": "long"
                        },
                        {
                            "name": "inertiaDestinationX",
                            "read-only": "1",
                            "tags": "IEOnly",
                            "type": "long"
                        },
                        {
                            "name": "inertiaDestinationY",
                            "read-only": "1",
                            "tags": "IEOnly",
                            "type": "long"
                        },
                        {
                            "name": "lastState",
                            "read-only": "1",
                            "tags": "IEOnly",
                            "type": "long"
                        }
                    ]
                }
            },
            {
                "name": "MSMediaKeyError",
                "extends": "Object",
                "constants": {
                    "constant": [
                        {
                            "name": "MS_MEDIA_KEYERR_CLIENT",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "MS_MEDIA_KEYERR_DOMAIN",
                            "type": "unsigned short",
                            "value": [
                                "6"
                            ]
                        },
                        {
                            "name": "MS_MEDIA_KEYERR_HARDWARECHANGE",
                            "type": "unsigned short",
                            "value": [
                                "5"
                            ]
                        },
                        {
                            "name": "MS_MEDIA_KEYERR_OUTPUT",
                            "type": "unsigned short",
                            "value": [
                                "4"
                            ]
                        },
                        {
                            "name": "MS_MEDIA_KEYERR_SERVICE",
                            "type": "unsigned short",
                            "value": [
                                "3"
                            ]
                        },
                        {
                            "name": "MS_MEDIA_KEYERR_UNKNOWN",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "code",
                            "read-only": "1",
                            "type": "unsigned short"
                        },
                        {
                            "name": "systemCode",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "MSMediaKeyMessageEvent",
                "extends": "Event",
                "properties": {
                    "property": [
                        {
                            "name": "destinationURL",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "message",
                            "read-only": "1",
                            "type": "Uint8Array"
                        }
                    ]
                }
            },
            {
                "name": "MSMediaKeyNeededEvent",
                "extends": "Event",
                "properties": {
                    "property": [
                        {
                            "name": "initData",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "Uint8Array"
                        }
                    ]
                }
            },
            {
                "name": "MSMediaKeys",
                "extends": "Object",
                "constructor": {
                    "param": [
                        {
                            "name": "keySystem",
                            "type": "DOMString"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "createSession",
                            "type": "MSMediaKeySession",
                            "param": [
                                {
                                    "name": "type",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "initData",
                                    "type": "Uint8Array"
                                },
                                {
                                    "name": "cdmData",
                                    "nullable": "1",
                                    "optional": "1",
                                    "type": "Uint8Array"
                                }
                            ]
                        },
                        {
                            "name": "isTypeSupported",
                            "static": "1",
                            "type": "bool",
                            "param": [
                                {
                                    "name": "keySystem",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "type",
                                    "nullable": "1",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "isTypeSupportedWithFeatures",
                            "static": "1",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "keySystem",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "type",
                                    "nullable": "1",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "keySystem",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "MSMediaKeySession",
                "extends": "EventTarget",
                "events": {
                    "event": [
                        {
                            "name": "mskeymessage",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "tags": "IEOnly",
                            "type": "MSMediaKeyMessageEvent"
                        },
                        {
                            "name": "mskeyadded",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "tags": "IEOnly",
                            "type": "Event"
                        },
                        {
                            "name": "mskeyerror",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "tags": "IEOnly",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "close",
                            "type": "void"
                        },
                        {
                            "name": "update",
                            "type": "void",
                            "param": [
                                {
                                    "name": "key",
                                    "type": "Uint8Array"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "error",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "MSMediaKeyError"
                        },
                        {
                            "name": "keySystem",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "sessionId",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "MSPointerEvent",
                "extends": "MouseEvent",
                "constructor": {
                    "param": [
                        {
                            "name": "typeArg",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "optional": "1",
                            "type": "PointerEventInit"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "getCurrentPoint",
                            "type": "void",
                            "param": [
                                {
                                    "name": "element",
                                    "type": "Element"
                                }
                            ]
                        },
                        {
                            "name": "getIntermediatePoints",
                            "type": "void",
                            "param": [
                                {
                                    "name": "element",
                                    "type": "Element"
                                }
                            ]
                        },
                        {
                            "name": "initPointerEvent",
                            "type": "void",
                            "param": [
                                {
                                    "name": "typeArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "canBubbleArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "cancelableArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "viewArg",
                                    "type": "Window"
                                },
                                {
                                    "name": "detailArg",
                                    "type": "long"
                                },
                                {
                                    "name": "screenXArg",
                                    "type": "long"
                                },
                                {
                                    "name": "screenYArg",
                                    "type": "long"
                                },
                                {
                                    "name": "clientXArg",
                                    "type": "float"
                                },
                                {
                                    "name": "clientYArg",
                                    "type": "float"
                                },
                                {
                                    "name": "ctrlKeyArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "altKeyArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "shiftKeyArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "metaKeyArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "buttonArg",
                                    "type": "unsigned short"
                                },
                                {
                                    "name": "relatedTargetArg",
                                    "type": "EventTarget"
                                },
                                {
                                    "name": "offsetXArg",
                                    "type": "float"
                                },
                                {
                                    "name": "offsetYArg",
                                    "type": "float"
                                },
                                {
                                    "name": "widthArg",
                                    "type": "long"
                                },
                                {
                                    "name": "heightArg",
                                    "type": "long"
                                },
                                {
                                    "name": "pressure",
                                    "type": "float"
                                },
                                {
                                    "name": "rotation",
                                    "type": "long"
                                },
                                {
                                    "name": "tiltX",
                                    "type": "long"
                                },
                                {
                                    "name": "tiltY",
                                    "type": "long"
                                },
                                {
                                    "name": "pointerIdArg",
                                    "type": "long"
                                },
                                {
                                    "name": "pointerType",
                                    "type": "any"
                                },
                                {
                                    "name": "hwTimestampArg",
                                    "type": "unsigned long long"
                                },
                                {
                                    "name": "isPrimary",
                                    "type": "boolean"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "currentPoint",
                            "read-only": "1",
                            "type": "any"
                        },
                        {
                            "name": "height",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "hwTimestamp",
                            "read-only": "1",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "intermediatePoints",
                            "read-only": "1",
                            "type": "any"
                        },
                        {
                            "name": "isPrimary",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "pointerId",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "pointerType",
                            "read-only": "1",
                            "type": "any"
                        },
                        {
                            "name": "pressure",
                            "read-only": "1",
                            "type": "float"
                        },
                        {
                            "name": "rotation",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "tiltX",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "tiltY",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "width",
                            "read-only": "1",
                            "type": "long"
                        }
                    ]
                }
            },
            {
                "name": "MSRangeCollection",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "item",
                            "getter": "1",
                            "type": "Range",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "length",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "MSSiteModeEvent",
                "extends": "Event",
                "properties": {
                    "property": [
                        {
                            "name": "actionURL",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "buttonID",
                            "read-only": "1",
                            "type": "long"
                        }
                    ]
                }
            },
            {
                "name": "MSStream",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "msClose",
                            "type": "void"
                        },
                        {
                            "name": "msDetachStream",
                            "type": "any"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "type",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "MSStreamReader",
                "extends": "EventTarget",
                "constructor": {},
                "events": {
                    "event": [
                        {
                            "name": "load",
                            "dispatch": "sync",
                            "follows": "progress",
                            "precedes": "loadend",
                            "skips-window": "1",
                            "tags": "IEOnly",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "loadstart",
                            "dispatch": "sync",
                            "precedes": "progress",
                            "skips-window": "1",
                            "tags": "IEOnly",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "loadend",
                            "dispatch": "sync",
                            "follows": "load",
                            "skips-window": "1",
                            "tags": "IEOnly",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "progress",
                            "dispatch": "sync",
                            "follows": "loadstart",
                            "precedes": "load",
                            "skips-window": "1",
                            "tags": "IEOnly",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "abort",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "tags": "IEOnly",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "error",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "tags": "IEOnly",
                            "type": "ProgressEvent"
                        }
                    ]
                },
                "implements": [
                    "MSBaseReader"
                ],
                "methods": {
                    "method": [
                        {
                            "name": "readAsArrayBuffer",
                            "type": "void",
                            "param": [
                                {
                                    "name": "stream",
                                    "type": "MSStream"
                                },
                                {
                                    "name": "size",
                                    "default": "-1",
                                    "optional": "1",
                                    "type": "long long"
                                }
                            ]
                        },
                        {
                            "name": "readAsBinaryString",
                            "type": "void",
                            "param": [
                                {
                                    "name": "stream",
                                    "type": "MSStream"
                                },
                                {
                                    "name": "size",
                                    "default": "-1",
                                    "optional": "1",
                                    "type": "long long"
                                }
                            ]
                        },
                        {
                            "name": "readAsBlob",
                            "type": "void",
                            "param": [
                                {
                                    "name": "stream",
                                    "type": "MSStream"
                                },
                                {
                                    "name": "size",
                                    "default": "-1",
                                    "optional": "1",
                                    "type": "long long"
                                }
                            ]
                        },
                        {
                            "name": "readAsDataURL",
                            "type": "void",
                            "param": [
                                {
                                    "name": "stream",
                                    "type": "MSStream"
                                },
                                {
                                    "name": "size",
                                    "default": "-1",
                                    "optional": "1",
                                    "type": "long long"
                                }
                            ]
                        },
                        {
                            "name": "readAsText",
                            "type": "void",
                            "param": [
                                {
                                    "name": "stream",
                                    "type": "MSStream"
                                },
                                {
                                    "name": "encoding",
                                    "optional": "1",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "size",
                                    "default": "-1",
                                    "optional": "1",
                                    "type": "long long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "error",
                            "read-only": "1",
                            "type": "DOMError"
                        }
                    ]
                }
            },
            {
                "name": "MSWebViewAsyncOperation",
                "extends": "EventTarget",
                "tags": "MSAppOnly",
                "constants": {
                    "constant": [
                        {
                            "name": "COMPLETED",
                            "tags": "MSAppOnly",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "ERROR",
                            "tags": "MSAppOnly",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "STARTED",
                            "tags": "MSAppOnly",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        },
                        {
                            "name": "TYPE_CAPTURE_PREVIEW_TO_RANDOM_ACCESS_STREAM",
                            "tags": "MSAppOnly",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        },
                        {
                            "name": "TYPE_CREATE_DATA_PACKAGE_FROM_SELECTION",
                            "tags": "MSAppOnly",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "TYPE_INVOKE_SCRIPT",
                            "tags": "MSAppOnly",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        }
                    ]
                },
                "events": {
                    "event": [
                        {
                            "name": "complete",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "tags": "MSAppOnly",
                            "type": "Event"
                        },
                        {
                            "name": "error",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "tags": "MSAppOnly",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "start",
                            "tags": "MSAppOnly",
                            "type": "void"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "error",
                            "read-only": "1",
                            "tags": "MSAppOnly",
                            "type": "DOMError"
                        },
                        {
                            "name": "oncomplete",
                            "event-handler": "complete",
                            "tags": "MSAppOnly",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onerror",
                            "event-handler": "error",
                            "tags": "MSAppOnly",
                            "type": "EventHandler"
                        },
                        {
                            "name": "readyState",
                            "read-only": "1",
                            "tags": "MSAppOnly",
                            "type": "unsigned short"
                        },
                        {
                            "name": "result",
                            "read-only": "1",
                            "tags": "MSAppOnly",
                            "type": "any"
                        },
                        {
                            "name": "target",
                            "read-only": "1",
                            "tags": "MSAppOnly",
                            "type": "MSHTMLWebViewElement"
                        },
                        {
                            "name": "type",
                            "read-only": "1",
                            "tags": "MSAppOnly",
                            "type": "unsigned short"
                        }
                    ]
                }
            },
            {
                "name": "MSWebViewSettings",
                "extends": "Object",
                "tags": "MSAppOnly",
                "properties": {
                    "property": [
                        {
                            "name": "isIndexedDBEnabled",
                            "tags": "MSAppOnly",
                            "type": "bool"
                        },
                        {
                            "name": "isJavaScriptEnabled",
                            "tags": "MSAppOnly",
                            "type": "bool"
                        }
                    ]
                }
            },
            {
                "name": "MutationEvent",
                "extends": "Event",
                "constants": {
                    "constant": [
                        {
                            "name": "ADDITION",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "MODIFICATION",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "REMOVAL",
                            "type": "unsigned short",
                            "value": [
                                "3"
                            ]
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "initMutationEvent",
                            "type": "void",
                            "param": [
                                {
                                    "name": "typeArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "canBubbleArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "cancelableArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "relatedNodeArg",
                                    "type": "Node"
                                },
                                {
                                    "name": "prevValueArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "newValueArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "attrNameArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "attrChangeArg",
                                    "type": "unsigned short"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "attrChange",
                            "read-only": "1",
                            "type": "unsigned short"
                        },
                        {
                            "name": "attrName",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "newValue",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "prevValue",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "relatedNode",
                            "read-only": "1",
                            "type": "Node"
                        }
                    ]
                }
            },
            {
                "name": "MutationObserver",
                "extends": "Object",
                "constructor": {
                    "param": [
                        {
                            "name": "callback",
                            "type": "MutationCallback"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "disconnect",
                            "type": "void"
                        },
                        {
                            "name": "observe",
                            "type": "void",
                            "param": [
                                {
                                    "name": "target",
                                    "type": "Node"
                                },
                                {
                                    "name": "options",
                                    "type": "MutationObserverInit"
                                }
                            ]
                        },
                        {
                            "name": "takeRecords",
                            "type": "sequence<MutationRecord>"
                        }
                    ]
                }
            },
            {
                "name": "MutationRecord",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "addedNodes",
                            "read-only": "1",
                            "type": "NodeList"
                        },
                        {
                            "name": "attributeName",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "attributeNamespace",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "nextSibling",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "Node"
                        },
                        {
                            "name": "oldValue",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "previousSibling",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "Node"
                        },
                        {
                            "name": "removedNodes",
                            "read-only": "1",
                            "type": "NodeList"
                        },
                        {
                            "name": "target",
                            "read-only": "1",
                            "type": "Node"
                        },
                        {
                            "name": "type",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "NamedNodeMap",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "getNamedItem",
                            "getter": "1",
                            "type": "Attr",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "getNamedItemNS",
                            "type": "Attr",
                            "param": [
                                {
                                    "name": "namespaceURI",
                                    "nullable": "1",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "localName",
                                    "nullable": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "item",
                            "getter": "1",
                            "type": "Attr",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "removeNamedItem",
                            "type": "Attr",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "removeNamedItemNS",
                            "type": "Attr",
                            "param": [
                                {
                                    "name": "namespaceURI",
                                    "nullable": "1",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "localName",
                                    "nullable": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "setNamedItem",
                            "type": "Attr",
                            "param": [
                                {
                                    "name": "arg",
                                    "type": "Attr"
                                }
                            ]
                        },
                        {
                            "name": "setNamedItemNS",
                            "type": "Attr",
                            "param": [
                                {
                                    "name": "arg",
                                    "type": "Attr"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "length",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "NavigationCompletedEvent",
                "extends": "NavigationEvent",
                "tags": "MSAppOnly",
                "properties": {
                    "property": [
                        {
                            "name": "isSuccess",
                            "read-only": "1",
                            "tags": "MSAppOnly",
                            "type": "boolean"
                        },
                        {
                            "name": "webErrorStatus",
                            "read-only": "1",
                            "tags": "MSAppOnly",
                            "type": "unsigned long long"
                        }
                    ]
                }
            },
            {
                "name": "NavigationEvent",
                "extends": "Event",
                "tags": "MSAppOnly",
                "properties": {
                    "property": [
                        {
                            "name": "uri",
                            "read-only": "1",
                            "tags": "MSAppOnly",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "NavigationEventWithReferrer",
                "extends": "NavigationEvent",
                "tags": "MSAppOnly",
                "properties": {
                    "property": [
                        {
                            "name": "referer",
                            "read-only": "1",
                            "tags": "MSAppOnly",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "Navigator",
                "extends": "Object",
                "implements": [
                    "NavigatorID",
                    "NavigatorOnLine",
                    "NavigatorContentUtils",
                    "NavigatorStorageUtils",
                    "NavigatorGeolocation",
                    "MSNavigatorDoNotTrack",
                    "MSFileSaver",
                    "NavigatorBeacon",
                    "NavigatorConcurrentHardware",
                    "NavigatorUserMedia"
                ],
                "methods": {
                    "method": [
                        {
                            "name": "getGamepads",
                            "type": "sequence<Gamepad>"
                        },
                        {
                            "name": "javaEnabled",
                            "type": "boolean"
                        },
                        {
                            "name": "msLaunchUri",
                            "type": "void",
                            "param": [
                                {
                                    "name": "uri",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "successCallback",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "MSLaunchUriCallback"
                                },
                                {
                                    "name": "noHandlerCallback",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "MSLaunchUriCallback"
                                }
                            ]
                        },
                        {
                            "name": "requestMediaKeySystemAccess",
                            "type": "Promise<MediaKeySystemAccess>",
                            "param": [
                                {
                                    "name": "keySystem",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "supportedConfigurations",
                                    "type": "sequence<MediaKeySystemConfiguration>"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "authentication",
                            "read-only": "1",
                            "type": "WebAuthentication"
                        },
                        {
                            "name": "cookieEnabled",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "gamepadInputEmulation",
                            "type": "GamepadInputEmulationType"
                        },
                        {
                            "name": "language",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "maxTouchPoints",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "mimeTypes",
                            "read-only": "1",
                            "type": "MimeTypeArray"
                        },
                        {
                            "name": "msManipulationViewsEnabled",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "msMaxTouchPoints",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "msPointerEnabled",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "plugins",
                            "read-only": "1",
                            "type": "PluginArray"
                        },
                        {
                            "name": "pointerEnabled",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "serviceWorker",
                            "read-only": "1",
                            "same-object": "1",
                            "secure-context": "1",
                            "type": "ServiceWorkerContainer"
                        },
                        {
                            "name": "webdriver",
                            "read-only": "1",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "Node",
                "extends": "EventTarget",
                "constants": {
                    "constant": [
                        {
                            "name": "ATTRIBUTE_NODE",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "CDATA_SECTION_NODE",
                            "type": "unsigned short",
                            "value": [
                                "4"
                            ]
                        },
                        {
                            "name": "COMMENT_NODE",
                            "type": "unsigned short",
                            "value": [
                                "8"
                            ]
                        },
                        {
                            "name": "DOCUMENT_FRAGMENT_NODE",
                            "type": "unsigned short",
                            "value": [
                                "11"
                            ]
                        },
                        {
                            "name": "DOCUMENT_NODE",
                            "type": "unsigned short",
                            "value": [
                                "9"
                            ]
                        },
                        {
                            "name": "DOCUMENT_POSITION_CONTAINED_BY",
                            "type": "unsigned short",
                            "value": [
                                "0x10"
                            ]
                        },
                        {
                            "name": "DOCUMENT_POSITION_CONTAINS",
                            "type": "unsigned short",
                            "value": [
                                "0x08"
                            ]
                        },
                        {
                            "name": "DOCUMENT_POSITION_DISCONNECTED",
                            "type": "unsigned short",
                            "value": [
                                "0x01"
                            ]
                        },
                        {
                            "name": "DOCUMENT_POSITION_FOLLOWING",
                            "type": "unsigned short",
                            "value": [
                                "0x04"
                            ]
                        },
                        {
                            "name": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
                            "type": "unsigned short",
                            "value": [
                                "0x20"
                            ]
                        },
                        {
                            "name": "DOCUMENT_POSITION_PRECEDING",
                            "type": "unsigned short",
                            "value": [
                                "0x02"
                            ]
                        },
                        {
                            "name": "DOCUMENT_TYPE_NODE",
                            "type": "unsigned short",
                            "value": [
                                "10"
                            ]
                        },
                        {
                            "name": "ELEMENT_NODE",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "ENTITY_NODE",
                            "type": "unsigned short",
                            "value": [
                                "6"
                            ]
                        },
                        {
                            "name": "ENTITY_REFERENCE_NODE",
                            "type": "unsigned short",
                            "value": [
                                "5"
                            ]
                        },
                        {
                            "name": "NOTATION_NODE",
                            "type": "unsigned short",
                            "value": [
                                "12"
                            ]
                        },
                        {
                            "name": "PROCESSING_INSTRUCTION_NODE",
                            "type": "unsigned short",
                            "value": [
                                "7"
                            ]
                        },
                        {
                            "name": "TEXT_NODE",
                            "type": "unsigned short",
                            "value": [
                                "3"
                            ]
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "appendChild",
                            "type": "Node",
                            "param": [
                                {
                                    "name": "newChild",
                                    "type": "Node"
                                }
                            ]
                        },
                        {
                            "name": "cloneNode",
                            "type": "Node",
                            "param": [
                                {
                                    "name": "deep",
                                    "default": "false",
                                    "optional": "1",
                                    "type": "boolean"
                                }
                            ]
                        },
                        {
                            "name": "compareDocumentPosition",
                            "type": "unsigned short",
                            "param": [
                                {
                                    "name": "other",
                                    "type": "Node"
                                }
                            ]
                        },
                        {
                            "name": "contains",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "child",
                                    "type": "Node"
                                }
                            ]
                        },
                        {
                            "name": "hasAttributes",
                            "type": "boolean"
                        },
                        {
                            "name": "hasChildNodes",
                            "type": "boolean"
                        },
                        {
                            "name": "insertBefore",
                            "type": "Node",
                            "param": [
                                {
                                    "name": "newChild",
                                    "type": "Node"
                                },
                                {
                                    "name": "refChild",
                                    "default": "null",
                                    "optional": "1",
                                    "type": "Node"
                                }
                            ]
                        },
                        {
                            "name": "isDefaultNamespace",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "namespaceURI",
                                    "nullable": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "isEqualNode",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "arg",
                                    "type": "Node"
                                }
                            ]
                        },
                        {
                            "name": "isSameNode",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "other",
                                    "type": "Node"
                                }
                            ]
                        },
                        {
                            "name": "lookupNamespaceURI",
                            "nullable": "1",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "prefix",
                                    "nullable": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "lookupPrefix",
                            "nullable": "1",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "namespaceURI",
                                    "nullable": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "normalize",
                            "type": "void"
                        },
                        {
                            "name": "removeChild",
                            "type": "Node",
                            "param": [
                                {
                                    "name": "oldChild",
                                    "type": "Node"
                                }
                            ]
                        },
                        {
                            "name": "replaceChild",
                            "type": "Node",
                            "param": [
                                {
                                    "name": "newChild",
                                    "type": "Node"
                                },
                                {
                                    "name": "oldChild",
                                    "type": "Node"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "attributes",
                            "read-only": "1",
                            "type": "NamedNodeMap"
                        },
                        {
                            "name": "baseURI",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "childNodes",
                            "read-only": "1",
                            "type": "NodeList"
                        },
                        {
                            "name": "firstChild",
                            "read-only": "1",
                            "type": "Node"
                        },
                        {
                            "name": "lastChild",
                            "read-only": "1",
                            "type": "Node"
                        },
                        {
                            "name": "localName",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "namespaceURI",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "nextSibling",
                            "read-only": "1",
                            "type": "Node"
                        },
                        {
                            "name": "nodeName",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "nodeType",
                            "read-only": "1",
                            "type": "unsigned short"
                        },
                        {
                            "name": "nodeValue",
                            "nullable": "1",
                            "treat-null-as": "EmptyString",
                            "type": "DOMString"
                        },
                        {
                            "name": "ownerDocument",
                            "read-only": "1",
                            "type": "Document"
                        },
                        {
                            "name": "parentElement",
                            "read-only": "1",
                            "type": "HTMLElement"
                        },
                        {
                            "name": "parentNode",
                            "read-only": "1",
                            "type": "Node"
                        },
                        {
                            "name": "previousSibling",
                            "read-only": "1",
                            "type": "Node"
                        },
                        {
                            "name": "textContent",
                            "nullable": "1",
                            "treat-null-as": "EmptyString",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "NodeFilter",
                "extends": "Object",
                "static": "1",
                "constants": {
                    "constant": [
                        {
                            "name": "FILTER_ACCEPT",
                            "type": "short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "FILTER_REJECT",
                            "type": "short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "FILTER_SKIP",
                            "type": "short",
                            "value": [
                                "3"
                            ]
                        },
                        {
                            "name": "SHOW_ALL",
                            "type": "unsigned long",
                            "value": [
                                "0xFFFFFFFF"
                            ]
                        },
                        {
                            "name": "SHOW_ATTRIBUTE",
                            "type": "unsigned long",
                            "value": [
                                "0x00000002"
                            ]
                        },
                        {
                            "name": "SHOW_CDATA_SECTION",
                            "type": "unsigned long",
                            "value": [
                                "0x00000008"
                            ]
                        },
                        {
                            "name": "SHOW_COMMENT",
                            "type": "unsigned long",
                            "value": [
                                "0x00000080"
                            ]
                        },
                        {
                            "name": "SHOW_DOCUMENT",
                            "type": "unsigned long",
                            "value": [
                                "0x00000100"
                            ]
                        },
                        {
                            "name": "SHOW_DOCUMENT_FRAGMENT",
                            "type": "unsigned long",
                            "value": [
                                "0x00000400"
                            ]
                        },
                        {
                            "name": "SHOW_DOCUMENT_TYPE",
                            "type": "unsigned long",
                            "value": [
                                "0x00000200"
                            ]
                        },
                        {
                            "name": "SHOW_ELEMENT",
                            "type": "unsigned long",
                            "value": [
                                "0x00000001"
                            ]
                        },
                        {
                            "name": "SHOW_ENTITY",
                            "type": "unsigned long",
                            "value": [
                                "0x00000020"
                            ]
                        },
                        {
                            "name": "SHOW_ENTITY_REFERENCE",
                            "type": "unsigned long",
                            "value": [
                                "0x00000010"
                            ]
                        },
                        {
                            "name": "SHOW_NOTATION",
                            "type": "unsigned long",
                            "value": [
                                "0x00000800"
                            ]
                        },
                        {
                            "name": "SHOW_PROCESSING_INSTRUCTION",
                            "type": "unsigned long",
                            "value": [
                                "0x00000040"
                            ]
                        },
                        {
                            "name": "SHOW_TEXT",
                            "type": "unsigned long",
                            "value": [
                                "0x00000004"
                            ]
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "acceptNode",
                            "type": "short",
                            "param": [
                                {
                                    "name": "n",
                                    "type": "Node"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "NodeIterator",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "detach",
                            "type": "void"
                        },
                        {
                            "name": "nextNode",
                            "type": "Node"
                        },
                        {
                            "name": "previousNode",
                            "type": "Node"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "expandEntityReferences",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "filter",
                            "read-only": "1",
                            "type": "NodeFilter"
                        },
                        {
                            "name": "root",
                            "read-only": "1",
                            "type": "Node"
                        },
                        {
                            "name": "whatToShow",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "NodeList",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "item",
                            "getter": "1",
                            "type": "Node",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "length",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "Notification",
                "extends": "EventTarget",
                "constructor": {
                    "param": [
                        {
                            "name": "title",
                            "type": "DOMString"
                        },
                        {
                            "name": "options",
                            "optional": "1",
                            "type": "NotificationOptions"
                        }
                    ]
                },
                "events": {
                    "event": [
                        {
                            "name": "click",
                            "dispatch": "sync",
                            "follows": "show",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "show",
                            "dispatch": "sync",
                            "precedes": "click",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "error",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "close",
                            "dispatch": "sync",
                            "follows": "show",
                            "skips-window": "1",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "close",
                            "type": "void"
                        },
                        {
                            "name": "requestPermission",
                            "static": "1",
                            "type": "Promise<NotificationPermission>",
                            "param": [
                                {
                                    "name": "callback",
                                    "optional": "1",
                                    "type": "NotificationPermissionCallback"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "body",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "dir",
                            "read-only": "1",
                            "type": "NotificationDirection"
                        },
                        {
                            "name": "icon",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "lang",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "onclick",
                            "event-handler": "click",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onclose",
                            "event-handler": "close",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onerror",
                            "event-handler": "error",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onshow",
                            "event-handler": "show",
                            "type": "EventHandler"
                        },
                        {
                            "name": "permission",
                            "read-only": "1",
                            "static": "1",
                            "type": "NotificationPermission"
                        },
                        {
                            "name": "tag",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "title",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "OES_element_index_uint",
                "extends": "Object"
            },
            {
                "name": "OES_standard_derivatives",
                "extends": "Object",
                "constants": {
                    "constant": [
                        {
                            "name": "FRAGMENT_SHADER_DERIVATIVE_HINT_OES",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8B8B"
                            ]
                        }
                    ]
                }
            },
            {
                "name": "OES_texture_float",
                "extends": "Object"
            },
            {
                "name": "OES_texture_float_linear",
                "extends": "Object"
            },
            {
                "name": "OES_texture_half_float",
                "extends": "Object",
                "constants": {
                    "constant": [
                        {
                            "name": "HALF_FLOAT_OES",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8D61"
                            ]
                        }
                    ]
                }
            },
            {
                "name": "OES_texture_half_float_linear",
                "extends": "Object"
            },
            {
                "name": "OfflineAudioCompletionEvent",
                "extends": "Event",
                "properties": {
                    "property": [
                        {
                            "name": "renderedBuffer",
                            "read-only": "1",
                            "type": "AudioBuffer"
                        }
                    ]
                }
            },
            {
                "name": "OfflineAudioContext",
                "extends": "AudioContext",
                "constructor": {
                    "param": [
                        {
                            "name": "numberOfChannels",
                            "type": "unsigned long"
                        },
                        {
                            "name": "length",
                            "type": "unsigned long"
                        },
                        {
                            "name": "sampleRate",
                            "type": "float"
                        }
                    ]
                },
                "events": {
                    "event": [
                        {
                            "name": "complete",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "OfflineAudioCompletionEvent"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "startRendering",
                            "type": "Promise<AudioBuffer>"
                        },
                        {
                            "name": "suspend",
                            "type": "Promise<void>",
                            "param": [
                                {
                                    "name": "suspendTime",
                                    "type": "double"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "length",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "oncomplete",
                            "event-handler": "complete",
                            "type": "EventHandler"
                        }
                    ]
                }
            },
            {
                "name": "OscillatorNode",
                "extends": "AudioNode",
                "events": {
                    "event": [
                        {
                            "name": "end",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "setPeriodicWave",
                            "type": "void",
                            "param": [
                                {
                                    "name": "periodicWave",
                                    "type": "PeriodicWave"
                                }
                            ]
                        },
                        {
                            "name": "start",
                            "type": "void",
                            "param": [
                                {
                                    "name": "when",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "double"
                                }
                            ]
                        },
                        {
                            "name": "stop",
                            "type": "void",
                            "param": [
                                {
                                    "name": "when",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "double"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "detune",
                            "read-only": "1",
                            "type": "AudioParam"
                        },
                        {
                            "name": "frequency",
                            "read-only": "1",
                            "type": "AudioParam"
                        },
                        {
                            "name": "onended",
                            "event-handler": "ended",
                            "type": "EventHandler"
                        },
                        {
                            "name": "type",
                            "type": "OscillatorType"
                        }
                    ]
                }
            },
            {
                "name": "OverflowEvent",
                "extends": "UIEvent",
                "anonymous-methods": {
                    "method": [
                        {
                            "type": "initOverflowEvent",
                            "param": [
                                {
                                    "name": "typeArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "orient",
                                    "type": "long"
                                },
                                {
                                    "name": "horizontalOverflow",
                                    "type": "boolean"
                                },
                                {
                                    "name": "verticalOverflow",
                                    "type": "boolean"
                                }
                            ]
                        }
                    ]
                },
                "constants": {
                    "constant": [
                        {
                            "name": "BOTH",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "HORIZONTAL",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        },
                        {
                            "name": "VERTICAL",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "horizontalOverflow",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "orient",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "verticalOverflow",
                            "read-only": "1",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "PageTransitionEvent",
                "extends": "Event",
                "properties": {
                    "property": [
                        {
                            "name": "persisted",
                            "read-only": "1",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "PannerNode",
                "extends": "AudioNode",
                "methods": {
                    "method": [
                        {
                            "name": "setOrientation",
                            "type": "void",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                },
                                {
                                    "name": "z",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "setPosition",
                            "type": "void",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                },
                                {
                                    "name": "z",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "setVelocity",
                            "type": "void",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                },
                                {
                                    "name": "z",
                                    "type": "float"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "coneInnerAngle",
                            "type": "float"
                        },
                        {
                            "name": "coneOuterAngle",
                            "type": "float"
                        },
                        {
                            "name": "coneOuterGain",
                            "type": "float"
                        },
                        {
                            "name": "distanceModel",
                            "type": "DistanceModelType"
                        },
                        {
                            "name": "maxDistance",
                            "type": "float"
                        },
                        {
                            "name": "panningModel",
                            "type": "PanningModelType"
                        },
                        {
                            "name": "refDistance",
                            "type": "float"
                        },
                        {
                            "name": "rolloffFactor",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "Path2D",
                "extends": "Object",
                "constructor": {
                    "param": [
                        {
                            "name": "path",
                            "optional": "1",
                            "type": "Path2D"
                        }
                    ]
                },
                "implements": [
                    "CanvasPathMethods"
                ]
            },
            {
                "name": "PaymentAddress",
                "extends": "Object",
                "secure-context": "1",
                "methods": {
                    "method": [
                        {
                            "name": "toJSON",
                            "serializer": "1",
                            "serializer-info": "attribute",
                            "type": "any"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "addressLine",
                            "read-only": "1",
                            "type": "sequence<DOMString>"
                        },
                        {
                            "name": "city",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "country",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "dependentLocality",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "languageCode",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "organization",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "phone",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "postalCode",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "recipient",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "region",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "sortingCode",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "PaymentRequest",
                "extends": "EventTarget",
                "secure-context": "1",
                "constructor": {
                    "param": [
                        {
                            "name": "methodData",
                            "type": "sequence<PaymentMethodData>"
                        },
                        {
                            "name": "details",
                            "type": "PaymentDetails"
                        },
                        {
                            "name": "options",
                            "optional": "1",
                            "type": "PaymentOptions"
                        }
                    ]
                },
                "events": {
                    "event": [
                        {
                            "name": "shippingaddresschange",
                            "dispatch": "sync",
                            "type": "Event"
                        },
                        {
                            "name": "shippingoptionchange",
                            "dispatch": "sync",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "abort",
                            "type": "Promise<void>"
                        },
                        {
                            "name": "show",
                            "type": "Promise<PaymentResponse>"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "onshippingaddresschange",
                            "event-handler": "shippingaddresschange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onshippingoptionchange",
                            "event-handler": "shippingoptionchange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "shippingAddress",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "PaymentAddress"
                        },
                        {
                            "name": "shippingOption",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "shippingType",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "PaymentShippingType"
                        }
                    ]
                }
            },
            {
                "name": "PaymentRequestUpdateEvent",
                "extends": "Event",
                "secure-context": "1",
                "constructor": {
                    "param": [
                        {
                            "name": "type",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "optional": "1",
                            "type": "PaymentRequestUpdateEventInit"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "updateWith",
                            "type": "void",
                            "param": [
                                {
                                    "name": "d",
                                    "type": "Promise<PaymentDetails>"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "PaymentResponse",
                "extends": "Object",
                "secure-context": "1",
                "methods": {
                    "method": [
                        {
                            "name": "complete",
                            "type": "Promise<void>",
                            "param": [
                                {
                                    "name": "result",
                                    "default": "\"\"",
                                    "optional": "1",
                                    "type": "PaymentComplete"
                                }
                            ]
                        },
                        {
                            "name": "toJSON",
                            "serializer": "1",
                            "serializer-info": "attribute",
                            "type": "any"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "details",
                            "read-only": "1",
                            "type": "object"
                        },
                        {
                            "name": "methodName",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "payerEmail",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "payerName",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "payerPhone",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "shippingAddress",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "PaymentAddress"
                        },
                        {
                            "name": "shippingOption",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "Performance",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "clearMarks",
                            "type": "void",
                            "param": [
                                {
                                    "name": "markName",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "clearMeasures",
                            "type": "void",
                            "param": [
                                {
                                    "name": "measureName",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "clearResourceTimings",
                            "type": "void"
                        },
                        {
                            "name": "getEntries",
                            "type": "any"
                        },
                        {
                            "name": "getEntriesByName",
                            "type": "any",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "entryType",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "getEntriesByType",
                            "type": "any",
                            "param": [
                                {
                                    "name": "entryType",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "getMarks",
                            "type": "any",
                            "param": [
                                {
                                    "name": "markName",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "getMeasures",
                            "type": "any",
                            "param": [
                                {
                                    "name": "measureName",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "mark",
                            "type": "void",
                            "param": [
                                {
                                    "name": "markName",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "measure",
                            "type": "void",
                            "param": [
                                {
                                    "name": "measureName",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "startMarkName",
                                    "optional": "1",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "endMarkName",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "now",
                            "type": "DOMHighResTimeStamp"
                        },
                        {
                            "name": "setResourceTimingBufferSize",
                            "type": "void",
                            "param": [
                                {
                                    "name": "maxSize",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "toJSON",
                            "type": "any"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "navigation",
                            "read-only": "1",
                            "type": "PerformanceNavigation"
                        },
                        {
                            "name": "timing",
                            "read-only": "1",
                            "type": "PerformanceTiming"
                        }
                    ]
                }
            },
            {
                "name": "PerformanceEntry",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "duration",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        },
                        {
                            "name": "entryType",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "name",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "startTime",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        }
                    ]
                }
            },
            {
                "name": "PerformanceMark",
                "extends": "PerformanceEntry"
            },
            {
                "name": "PerformanceMeasure",
                "extends": "PerformanceEntry"
            },
            {
                "name": "PerformanceNavigation",
                "extends": "Object",
                "constants": {
                    "constant": [
                        {
                            "name": "TYPE_BACK_FORWARD",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "TYPE_NAVIGATE",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        },
                        {
                            "name": "TYPE_RELOAD",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "TYPE_RESERVED",
                            "type": "unsigned short",
                            "value": [
                                "255"
                            ]
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "toJSON",
                            "type": "any"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "redirectCount",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "type",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "PerformanceNavigationTiming",
                "extends": "PerformanceEntry",
                "properties": {
                    "property": [
                        {
                            "name": "connectEnd",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        },
                        {
                            "name": "connectStart",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        },
                        {
                            "name": "domainLookupEnd",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        },
                        {
                            "name": "domainLookupStart",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        },
                        {
                            "name": "domComplete",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        },
                        {
                            "name": "domContentLoadedEventEnd",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        },
                        {
                            "name": "domContentLoadedEventStart",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        },
                        {
                            "name": "domInteractive",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        },
                        {
                            "name": "domLoading",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        },
                        {
                            "name": "fetchStart",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        },
                        {
                            "name": "loadEventEnd",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        },
                        {
                            "name": "loadEventStart",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        },
                        {
                            "name": "navigationStart",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        },
                        {
                            "name": "redirectCount",
                            "read-only": "1",
                            "type": "unsigned short"
                        },
                        {
                            "name": "redirectEnd",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        },
                        {
                            "name": "redirectStart",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        },
                        {
                            "name": "requestStart",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        },
                        {
                            "name": "responseEnd",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        },
                        {
                            "name": "responseStart",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        },
                        {
                            "name": "type",
                            "read-only": "1",
                            "type": "NavigationType"
                        },
                        {
                            "name": "unloadEventEnd",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        },
                        {
                            "name": "unloadEventStart",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        }
                    ]
                }
            },
            {
                "name": "PerformanceResourceTiming",
                "extends": "PerformanceEntry",
                "properties": {
                    "property": [
                        {
                            "name": "connectEnd",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        },
                        {
                            "name": "connectStart",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        },
                        {
                            "name": "domainLookupEnd",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        },
                        {
                            "name": "domainLookupStart",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        },
                        {
                            "name": "fetchStart",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        },
                        {
                            "name": "initiatorType",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "redirectEnd",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        },
                        {
                            "name": "redirectStart",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        },
                        {
                            "name": "requestStart",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        },
                        {
                            "name": "responseEnd",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        },
                        {
                            "name": "responseStart",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        }
                    ]
                }
            },
            {
                "name": "PerformanceTiming",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "toJSON",
                            "type": "any"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "connectEnd",
                            "read-only": "1",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "connectStart",
                            "read-only": "1",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "domainLookupEnd",
                            "read-only": "1",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "domainLookupStart",
                            "read-only": "1",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "domComplete",
                            "read-only": "1",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "domContentLoadedEventEnd",
                            "read-only": "1",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "domContentLoadedEventStart",
                            "read-only": "1",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "domInteractive",
                            "read-only": "1",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "domLoading",
                            "read-only": "1",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "fetchStart",
                            "read-only": "1",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "loadEventEnd",
                            "read-only": "1",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "loadEventStart",
                            "read-only": "1",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "msFirstPaint",
                            "read-only": "1",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "navigationStart",
                            "read-only": "1",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "redirectEnd",
                            "read-only": "1",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "redirectStart",
                            "read-only": "1",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "requestStart",
                            "read-only": "1",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "responseEnd",
                            "read-only": "1",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "responseStart",
                            "read-only": "1",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "unloadEventEnd",
                            "read-only": "1",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "unloadEventStart",
                            "read-only": "1",
                            "type": "unsigned long long"
                        }
                    ]
                }
            },
            {
                "name": "PerfWidgetExternal",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "addEventListener",
                            "type": "void",
                            "param": [
                                {
                                    "name": "eventType",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "callback",
                                    "type": "Function"
                                }
                            ]
                        },
                        {
                            "name": "getMemoryUsage",
                            "type": "unsigned long"
                        },
                        {
                            "name": "getProcessCpuUsage",
                            "type": "unsigned long"
                        },
                        {
                            "name": "getRecentCpuUsage",
                            "type": "any",
                            "param": [
                                {
                                    "name": "last",
                                    "nullable": "1",
                                    "type": "unsigned long long"
                                }
                            ]
                        },
                        {
                            "name": "getRecentFrames",
                            "type": "any",
                            "param": [
                                {
                                    "name": "last",
                                    "nullable": "1",
                                    "type": "unsigned long long"
                                }
                            ]
                        },
                        {
                            "name": "getRecentMemoryUsage",
                            "type": "any",
                            "param": [
                                {
                                    "name": "last",
                                    "nullable": "1",
                                    "type": "unsigned long long"
                                }
                            ]
                        },
                        {
                            "name": "getRecentPaintRequests",
                            "type": "any",
                            "param": [
                                {
                                    "name": "last",
                                    "nullable": "1",
                                    "type": "unsigned long long"
                                }
                            ]
                        },
                        {
                            "name": "removeEventListener",
                            "type": "void",
                            "param": [
                                {
                                    "name": "eventType",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "callback",
                                    "type": "Function"
                                }
                            ]
                        },
                        {
                            "name": "repositionWindow",
                            "type": "void",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "long"
                                },
                                {
                                    "name": "y",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "resizeWindow",
                            "type": "void",
                            "param": [
                                {
                                    "name": "width",
                                    "type": "unsigned long"
                                },
                                {
                                    "name": "height",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "activeNetworkRequestCount",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "averageFrameTime",
                            "read-only": "1",
                            "type": "double"
                        },
                        {
                            "name": "averagePaintTime",
                            "read-only": "1",
                            "type": "double"
                        },
                        {
                            "name": "extraInformationEnabled",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "independentRenderingEnabled",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "irDisablingContentString",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "irStatusAvailable",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "maxCpuSpeed",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "paintRequestsPerSecond",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "performanceCounter",
                            "read-only": "1",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "performanceCounterFrequency",
                            "read-only": "1",
                            "type": "unsigned long long"
                        }
                    ]
                }
            },
            {
                "name": "PeriodicWave",
                "extends": "Object"
            },
            {
                "name": "PermissionRequest",
                "extends": "DeferredPermissionRequest",
                "methods": {
                    "method": [
                        {
                            "name": "defer",
                            "type": "void"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "state",
                            "read-only": "1",
                            "type": "MSWebViewPermissionState"
                        }
                    ]
                }
            },
            {
                "name": "PermissionRequestedEvent",
                "extends": "Event",
                "properties": {
                    "property": [
                        {
                            "name": "permissionRequest",
                            "read-only": "1",
                            "type": "PermissionRequest"
                        }
                    ]
                }
            },
            {
                "name": "Plugin",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "item",
                            "getter": "1",
                            "type": "MimeType",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "namedItem",
                            "getter": "1",
                            "type": "MimeType",
                            "param": [
                                {
                                    "name": "type",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "description",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "filename",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "length",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "name",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "version",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "PluginArray",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "item",
                            "getter": "1",
                            "type": "Plugin",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "namedItem",
                            "getter": "1",
                            "type": "Plugin",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "refresh",
                            "type": "void",
                            "param": [
                                {
                                    "name": "reload",
                                    "optional": "1",
                                    "type": "boolean"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "length",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "PointerEvent",
                "extends": "MouseEvent",
                "constructor": {
                    "param": [
                        {
                            "name": "typeArg",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "optional": "1",
                            "type": "PointerEventInit"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "getCurrentPoint",
                            "type": "void",
                            "param": [
                                {
                                    "name": "element",
                                    "type": "Element"
                                }
                            ]
                        },
                        {
                            "name": "getIntermediatePoints",
                            "type": "void",
                            "param": [
                                {
                                    "name": "element",
                                    "type": "Element"
                                }
                            ]
                        },
                        {
                            "name": "initPointerEvent",
                            "type": "void",
                            "param": [
                                {
                                    "name": "typeArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "canBubbleArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "cancelableArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "viewArg",
                                    "type": "Window"
                                },
                                {
                                    "name": "detailArg",
                                    "type": "long"
                                },
                                {
                                    "name": "screenXArg",
                                    "type": "long"
                                },
                                {
                                    "name": "screenYArg",
                                    "type": "long"
                                },
                                {
                                    "name": "clientXArg",
                                    "type": "float"
                                },
                                {
                                    "name": "clientYArg",
                                    "type": "float"
                                },
                                {
                                    "name": "ctrlKeyArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "altKeyArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "shiftKeyArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "metaKeyArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "buttonArg",
                                    "type": "unsigned short"
                                },
                                {
                                    "name": "relatedTargetArg",
                                    "type": "EventTarget"
                                },
                                {
                                    "name": "offsetXArg",
                                    "type": "float"
                                },
                                {
                                    "name": "offsetYArg",
                                    "type": "float"
                                },
                                {
                                    "name": "widthArg",
                                    "type": "long"
                                },
                                {
                                    "name": "heightArg",
                                    "type": "long"
                                },
                                {
                                    "name": "pressure",
                                    "type": "float"
                                },
                                {
                                    "name": "rotation",
                                    "type": "long"
                                },
                                {
                                    "name": "tiltX",
                                    "type": "long"
                                },
                                {
                                    "name": "tiltY",
                                    "type": "long"
                                },
                                {
                                    "name": "pointerIdArg",
                                    "type": "long"
                                },
                                {
                                    "name": "pointerType",
                                    "type": "any"
                                },
                                {
                                    "name": "hwTimestampArg",
                                    "type": "unsigned long long"
                                },
                                {
                                    "name": "isPrimary",
                                    "type": "boolean"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "currentPoint",
                            "read-only": "1",
                            "type": "any"
                        },
                        {
                            "name": "height",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "hwTimestamp",
                            "read-only": "1",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "intermediatePoints",
                            "read-only": "1",
                            "type": "any"
                        },
                        {
                            "name": "isPrimary",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "pointerId",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "pointerType",
                            "read-only": "1",
                            "type": "any"
                        },
                        {
                            "name": "pressure",
                            "read-only": "1",
                            "type": "float"
                        },
                        {
                            "name": "rotation",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "tiltX",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "tiltY",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "width",
                            "read-only": "1",
                            "type": "long"
                        }
                    ]
                }
            },
            {
                "name": "PopStateEvent",
                "extends": "Event",
                "constructor": {
                    "param": [
                        {
                            "name": "typeArg",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "optional": "1",
                            "type": "PopStateEventInit"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "initPopStateEvent",
                            "type": "void",
                            "param": [
                                {
                                    "name": "typeArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "canBubbleArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "cancelableArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "stateArg",
                                    "type": "any"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "state",
                            "read-only": "1",
                            "type": "any"
                        }
                    ]
                }
            },
            {
                "name": "Position",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "coords",
                            "read-only": "1",
                            "type": "Coordinates"
                        },
                        {
                            "name": "timestamp",
                            "read-only": "1",
                            "type": "DOMTimeStamp"
                        }
                    ]
                }
            },
            {
                "name": "PositionError",
                "extends": "Object",
                "constants": {
                    "constant": [
                        {
                            "name": "PERMISSION_DENIED",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "POSITION_UNAVAILABLE",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "TIMEOUT",
                            "type": "unsigned short",
                            "value": [
                                "3"
                            ]
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "toString",
                            "stringifier": "1",
                            "type": "DOMString"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "code",
                            "read-only": "1",
                            "type": "unsigned short"
                        },
                        {
                            "name": "message",
                            "read-only": "1",
                            "stringifier": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "ProcessingInstruction",
                "extends": "CharacterData",
                "events": {
                    "event": [
                        {
                            "name": "DOMCharacterDataModified",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "type": "MutationEvent"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "target",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "ProgressEvent",
                "extends": "Event",
                "constructor": {
                    "param": [
                        {
                            "name": "typeArg",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "optional": "1",
                            "type": "ProgressEventInit"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "initProgressEvent",
                            "type": "void",
                            "param": [
                                {
                                    "name": "typeArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "canBubbleArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "cancelableArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "lengthComputableArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "loadedArg",
                                    "type": "unsigned long long"
                                },
                                {
                                    "name": "totalArg",
                                    "type": "unsigned long long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "lengthComputable",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "loaded",
                            "read-only": "1",
                            "type": "unsigned long long"
                        },
                        {
                            "name": "total",
                            "read-only": "1",
                            "type": "unsigned long long"
                        }
                    ]
                }
            },
            {
                "name": "PushManager",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "getSubscription",
                            "type": "Promise<PushSubscription>"
                        },
                        {
                            "name": "permissionState",
                            "type": "Promise<PushPermissionState>",
                            "param": [
                                {
                                    "name": "options",
                                    "optional": "1",
                                    "type": "PushSubscriptionOptionsInit"
                                }
                            ]
                        },
                        {
                            "name": "subscribe",
                            "type": "Promise<PushSubscription>",
                            "param": [
                                {
                                    "name": "options",
                                    "optional": "1",
                                    "type": "PushSubscriptionOptionsInit"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "PushSubscription",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "getKey",
                            "nullable": "1",
                            "type": "ArrayBuffer",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "PushEncryptionKeyName"
                                }
                            ]
                        },
                        {
                            "name": "toJSON",
                            "serializer": "1",
                            "type": "any"
                        },
                        {
                            "name": "unsubscribe",
                            "type": "Promise<boolean>"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "endpoint",
                            "read-only": "1",
                            "type": "USVString"
                        },
                        {
                            "name": "options",
                            "read-only": "1",
                            "same-object": "1",
                            "type": "PushSubscriptionOptions"
                        }
                    ]
                }
            },
            {
                "name": "PushSubscriptionOptions",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "applicationServerKey",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "ArrayBuffer"
                        },
                        {
                            "name": "userVisibleOnly",
                            "read-only": "1",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "Range",
                "extends": "Object",
                "constants": {
                    "constant": [
                        {
                            "name": "END_TO_END",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "END_TO_START",
                            "type": "unsigned short",
                            "value": [
                                "3"
                            ]
                        },
                        {
                            "name": "START_TO_END",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "START_TO_START",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "cloneContents",
                            "type": "DocumentFragment"
                        },
                        {
                            "name": "cloneRange",
                            "type": "Range"
                        },
                        {
                            "name": "collapse",
                            "type": "void",
                            "param": [
                                {
                                    "name": "toStart",
                                    "type": "boolean"
                                }
                            ]
                        },
                        {
                            "name": "compareBoundaryPoints",
                            "type": "short",
                            "param": [
                                {
                                    "name": "how",
                                    "type": "unsigned short"
                                },
                                {
                                    "name": "sourceRange",
                                    "type": "Range"
                                }
                            ]
                        },
                        {
                            "name": "createContextualFragment",
                            "type": "DocumentFragment",
                            "param": [
                                {
                                    "name": "fragment",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "deleteContents",
                            "type": "void"
                        },
                        {
                            "name": "detach",
                            "type": "void"
                        },
                        {
                            "name": "expand",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "Unit",
                                    "type": "ExpandGranularity"
                                }
                            ]
                        },
                        {
                            "name": "extractContents",
                            "type": "DocumentFragment"
                        },
                        {
                            "name": "getBoundingClientRect",
                            "type": "ClientRect"
                        },
                        {
                            "name": "getClientRects",
                            "type": "ClientRectList"
                        },
                        {
                            "name": "insertNode",
                            "type": "void",
                            "param": [
                                {
                                    "name": "newNode",
                                    "type": "Node"
                                }
                            ]
                        },
                        {
                            "name": "selectNode",
                            "type": "void",
                            "param": [
                                {
                                    "name": "refNode",
                                    "type": "Node"
                                }
                            ]
                        },
                        {
                            "name": "selectNodeContents",
                            "type": "void",
                            "param": [
                                {
                                    "name": "refNode",
                                    "type": "Node"
                                }
                            ]
                        },
                        {
                            "name": "setEnd",
                            "type": "void",
                            "param": [
                                {
                                    "name": "refNode",
                                    "type": "Node"
                                },
                                {
                                    "name": "offset",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "setEndAfter",
                            "type": "void",
                            "param": [
                                {
                                    "name": "refNode",
                                    "type": "Node"
                                }
                            ]
                        },
                        {
                            "name": "setEndBefore",
                            "type": "void",
                            "param": [
                                {
                                    "name": "refNode",
                                    "type": "Node"
                                }
                            ]
                        },
                        {
                            "name": "setStart",
                            "type": "void",
                            "param": [
                                {
                                    "name": "refNode",
                                    "type": "Node"
                                },
                                {
                                    "name": "offset",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "setStartAfter",
                            "type": "void",
                            "param": [
                                {
                                    "name": "refNode",
                                    "type": "Node"
                                }
                            ]
                        },
                        {
                            "name": "setStartBefore",
                            "type": "void",
                            "param": [
                                {
                                    "name": "refNode",
                                    "type": "Node"
                                }
                            ]
                        },
                        {
                            "name": "surroundContents",
                            "type": "void",
                            "param": [
                                {
                                    "name": "newParent",
                                    "type": "Node"
                                }
                            ]
                        },
                        {
                            "name": "toString",
                            "stringifier": "1",
                            "type": "DOMString"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "collapsed",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "commonAncestorContainer",
                            "read-only": "1",
                            "type": "Node"
                        },
                        {
                            "name": "endContainer",
                            "read-only": "1",
                            "type": "Node"
                        },
                        {
                            "name": "endOffset",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "startContainer",
                            "read-only": "1",
                            "type": "Node"
                        },
                        {
                            "name": "startOffset",
                            "read-only": "1",
                            "type": "long"
                        }
                    ]
                }
            },
            {
                "name": "ReadableStream",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "cancel",
                            "type": "Promise<void>"
                        },
                        {
                            "name": "getReader",
                            "type": "ReadableStreamReader"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "locked",
                            "read-only": "1",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "ReadableStreamReader",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "cancel",
                            "type": "Promise<void>"
                        },
                        {
                            "name": "read",
                            "type": "Promise<any>"
                        },
                        {
                            "name": "releaseLock",
                            "type": "void"
                        }
                    ]
                }
            },
            {
                "name": "Request",
                "extends": "Object",
                "constructor": {
                    "param": [
                        {
                            "name": "input",
                            "type": "(Request or DOMString)",
                            "type-original": "RequestInfo"
                        },
                        {
                            "name": "init",
                            "optional": "1",
                            "type": "RequestInit"
                        }
                    ]
                },
                "implements": [
                    "Body"
                ],
                "methods": {
                    "method": [
                        {
                            "name": "clone",
                            "type": "Request"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "cache",
                            "read-only": "1",
                            "type": "RequestCache"
                        },
                        {
                            "name": "credentials",
                            "read-only": "1",
                            "type": "RequestCredentials"
                        },
                        {
                            "name": "destination",
                            "read-only": "1",
                            "type": "RequestDestination"
                        },
                        {
                            "name": "headers",
                            "read-only": "1",
                            "type": "Headers"
                        },
                        {
                            "name": "integrity",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "keepalive",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "method",
                            "read-only": "1",
                            "type": "DOMString",
                            "type-original": "ByteString"
                        },
                        {
                            "name": "mode",
                            "read-only": "1",
                            "type": "RequestMode"
                        },
                        {
                            "name": "redirect",
                            "read-only": "1",
                            "type": "RequestRedirect"
                        },
                        {
                            "name": "referrer",
                            "read-only": "1",
                            "type": "DOMString",
                            "type-original": "USVString"
                        },
                        {
                            "name": "referrerPolicy",
                            "read-only": "1",
                            "type": "ReferrerPolicy"
                        },
                        {
                            "name": "type",
                            "read-only": "1",
                            "type": "RequestType"
                        },
                        {
                            "name": "url",
                            "read-only": "1",
                            "type": "DOMString",
                            "type-original": "USVString"
                        }
                    ]
                }
            },
            {
                "name": "Response",
                "extends": "Object",
                "constructor": {
                    "param": [
                        {
                            "name": "body",
                            "default": "null",
                            "nullable": "1",
                            "optional": "1",
                            "type": "(Blob or BufferSource or FormData or DOMString)",
                            "type-original": "BodyInit"
                        },
                        {
                            "name": "init",
                            "optional": "1",
                            "type": "ResponseInit"
                        }
                    ]
                },
                "implements": [
                    "Body"
                ],
                "methods": {
                    "method": [
                        {
                            "name": "clone",
                            "type": "Response"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "body",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "ReadableStream"
                        },
                        {
                            "name": "headers",
                            "read-only": "1",
                            "type": "Headers"
                        },
                        {
                            "name": "ok",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "status",
                            "read-only": "1",
                            "type": "unsigned short"
                        },
                        {
                            "name": "statusText",
                            "read-only": "1",
                            "type": "DOMString",
                            "type-original": "ByteString"
                        },
                        {
                            "name": "type",
                            "read-only": "1",
                            "type": "ResponseType"
                        },
                        {
                            "name": "url",
                            "read-only": "1",
                            "type": "DOMString",
                            "type-original": "USVString"
                        }
                    ]
                }
            },
            {
                "name": "RTCDtlsTransport",
                "extends": "RTCStatsProvider",
                "constructor": {
                    "param": [
                        {
                            "name": "transport",
                            "type": "RTCIceTransport"
                        }
                    ]
                },
                "events": {
                    "event": [
                        {
                            "name": "dtlsstatechange",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "RTCDtlsTransportStateChangedEvent"
                        },
                        {
                            "name": "error",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "getLocalParameters",
                            "type": "RTCDtlsParameters"
                        },
                        {
                            "name": "getRemoteCertificates",
                            "type": "sequence<ArrayBuffer>"
                        },
                        {
                            "name": "getRemoteParameters",
                            "nullable": "1",
                            "type": "RTCDtlsParameters"
                        },
                        {
                            "name": "start",
                            "type": "void",
                            "param": [
                                {
                                    "name": "remoteParameters",
                                    "type": "RTCDtlsParameters"
                                }
                            ]
                        },
                        {
                            "name": "stop",
                            "type": "void"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "ondtlsstatechange",
                            "event-handler": "dtlsstatechange",
                            "nullable": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onerror",
                            "event-handler": "error",
                            "nullable": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "state",
                            "read-only": "1",
                            "type": "RTCDtlsTransportState"
                        },
                        {
                            "name": "transport",
                            "read-only": "1",
                            "type": "RTCIceTransport"
                        }
                    ]
                }
            },
            {
                "name": "RTCDtlsTransportStateChangedEvent",
                "extends": "Event",
                "properties": {
                    "property": [
                        {
                            "name": "state",
                            "read-only": "1",
                            "type": "RTCDtlsTransportState"
                        }
                    ]
                }
            },
            {
                "name": "RTCDtmfSender",
                "extends": "EventTarget",
                "constructor": {
                    "param": [
                        {
                            "name": "sender",
                            "type": "RTCRtpSender"
                        }
                    ]
                },
                "events": {
                    "event": [
                        {
                            "name": "tonechange",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "RTCDTMFToneChangeEvent"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "insertDTMF",
                            "type": "void",
                            "param": [
                                {
                                    "name": "tones",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "duration",
                                    "optional": "1",
                                    "type": "long"
                                },
                                {
                                    "name": "interToneGap",
                                    "optional": "1",
                                    "type": "long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "canInsertDTMF",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "duration",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "interToneGap",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "ontonechange",
                            "event-handler": "tonechange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "sender",
                            "read-only": "1",
                            "type": "RTCRtpSender"
                        },
                        {
                            "name": "toneBuffer",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "RTCDTMFToneChangeEvent",
                "extends": "Event",
                "constructor": {
                    "param": [
                        {
                            "name": "typeArg",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "type": "RTCDTMFToneChangeEventInit"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "tone",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "RTCIceCandidate",
                "extends": "Object",
                "constructor": {
                    "param": [
                        {
                            "name": "candidateInitDict",
                            "optional": "1",
                            "type": "RTCIceCandidateInit"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "toJSON",
                            "serializer": "1",
                            "serializer-info": "attribute",
                            "type": "any"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "candidate",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "sdpMid",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "sdpMLineIndex",
                            "nullable": "1",
                            "type": "unsigned short"
                        }
                    ]
                }
            },
            {
                "name": "RTCIceCandidatePairChangedEvent",
                "extends": "Event",
                "properties": {
                    "property": [
                        {
                            "name": "pair",
                            "read-only": "1",
                            "type": "RTCIceCandidatePair"
                        }
                    ]
                }
            },
            {
                "name": "RTCIceGatherer",
                "extends": "RTCStatsProvider",
                "constructor": {
                    "param": [
                        {
                            "name": "options",
                            "type": "RTCIceGatherOptions"
                        }
                    ]
                },
                "events": {
                    "event": [
                        {
                            "name": "error",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "localcandidate",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "RTCIceGathererEvent"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "createAssociatedGatherer",
                            "type": "RTCIceGatherer"
                        },
                        {
                            "name": "getLocalCandidates",
                            "type": "sequence<RTCIceCandidateDictionary>"
                        },
                        {
                            "name": "getLocalParameters",
                            "type": "RTCIceParameters"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "component",
                            "read-only": "1",
                            "type": "RTCIceComponent"
                        },
                        {
                            "name": "onerror",
                            "event-handler": "error",
                            "nullable": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onlocalcandidate",
                            "event-handler": "localcandidate",
                            "nullable": "1",
                            "type": "EventHandler"
                        }
                    ]
                }
            },
            {
                "name": "RTCIceGathererEvent",
                "extends": "Event",
                "properties": {
                    "property": [
                        {
                            "name": "candidate",
                            "read-only": "1",
                            "type": "(RTCIceCandidateDictionary or RTCIceCandidateComplete)",
                            "type-original": "RTCIceGatherCandidate"
                        }
                    ]
                }
            },
            {
                "name": "RTCIceTransport",
                "extends": "RTCStatsProvider",
                "constructor": {},
                "events": {
                    "event": [
                        {
                            "name": "icestatechange",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "RTCIceTransportStateChangedEvent"
                        },
                        {
                            "name": "candidatepairchange",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "RTCIceCandidatePairChangedEvent"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "addRemoteCandidate",
                            "type": "void",
                            "param": [
                                {
                                    "name": "remoteCandidate",
                                    "type": "(RTCIceCandidateDictionary or RTCIceCandidateComplete)",
                                    "type-original": "RTCIceGatherCandidate"
                                }
                            ]
                        },
                        {
                            "name": "createAssociatedTransport",
                            "type": "RTCIceTransport"
                        },
                        {
                            "name": "getNominatedCandidatePair",
                            "nullable": "1",
                            "type": "RTCIceCandidatePair"
                        },
                        {
                            "name": "getRemoteCandidates",
                            "type": "sequence<RTCIceCandidateDictionary>"
                        },
                        {
                            "name": "getRemoteParameters",
                            "nullable": "1",
                            "type": "RTCIceParameters"
                        },
                        {
                            "name": "setRemoteCandidates",
                            "type": "void",
                            "param": [
                                {
                                    "name": "remoteCandidates",
                                    "type": "sequence<RTCIceCandidateDictionary>"
                                }
                            ]
                        },
                        {
                            "name": "start",
                            "type": "void",
                            "param": [
                                {
                                    "name": "gatherer",
                                    "type": "RTCIceGatherer"
                                },
                                {
                                    "name": "remoteParameters",
                                    "type": "RTCIceParameters"
                                },
                                {
                                    "name": "role",
                                    "optional": "1",
                                    "type": "RTCIceRole"
                                }
                            ]
                        },
                        {
                            "name": "stop",
                            "type": "void"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "component",
                            "read-only": "1",
                            "type": "RTCIceComponent"
                        },
                        {
                            "name": "iceGatherer",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "RTCIceGatherer"
                        },
                        {
                            "name": "oncandidatepairchange",
                            "event-handler": "candidatepairchange",
                            "nullable": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onicestatechange",
                            "event-handler": "icestatechange",
                            "nullable": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "role",
                            "read-only": "1",
                            "type": "RTCIceRole"
                        },
                        {
                            "name": "state",
                            "read-only": "1",
                            "type": "RTCIceTransportState"
                        }
                    ]
                }
            },
            {
                "name": "RTCIceTransportStateChangedEvent",
                "extends": "Event",
                "properties": {
                    "property": [
                        {
                            "name": "state",
                            "read-only": "1",
                            "type": "RTCIceTransportState"
                        }
                    ]
                }
            },
            {
                "name": "RTCPeerConnection",
                "extends": "EventTarget",
                "constructor": {
                    "param": [
                        {
                            "name": "configuration",
                            "type": "RTCConfiguration"
                        }
                    ]
                },
                "events": {
                    "event": [
                        {
                            "name": "negotiationneeded",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "icecandidate",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "RTCPeerConnectionIceEvent"
                        },
                        {
                            "name": "signalingstatechange",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "addstream",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "MediaStreamEvent"
                        },
                        {
                            "name": "removestream",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "MediaStreamEvent"
                        },
                        {
                            "name": "iceconnectionstatechange",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "icegatheringstatechange",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "addIceCandidate",
                            "type": "Promise<void>",
                            "param": [
                                {
                                    "name": "candidate",
                                    "type": "RTCIceCandidate"
                                },
                                {
                                    "name": "successCallback",
                                    "optional": "1",
                                    "type": "VoidFunction"
                                },
                                {
                                    "name": "failureCallback",
                                    "optional": "1",
                                    "type": "RTCPeerConnectionErrorCallback"
                                }
                            ]
                        },
                        {
                            "name": "addStream",
                            "type": "void",
                            "param": [
                                {
                                    "name": "stream",
                                    "type": "MediaStream"
                                }
                            ]
                        },
                        {
                            "name": "close",
                            "type": "void"
                        },
                        {
                            "name": "createAnswer",
                            "type": "Promise<RTCSessionDescription>",
                            "param": [
                                {
                                    "name": "successCallback",
                                    "optional": "1",
                                    "type": "RTCSessionDescriptionCallback"
                                },
                                {
                                    "name": "failureCallback",
                                    "optional": "1",
                                    "type": "RTCPeerConnectionErrorCallback"
                                }
                            ]
                        },
                        {
                            "name": "createOffer",
                            "type": "Promise<RTCSessionDescription>",
                            "param": [
                                {
                                    "name": "successCallback",
                                    "optional": "1",
                                    "type": "RTCSessionDescriptionCallback"
                                },
                                {
                                    "name": "failureCallback",
                                    "optional": "1",
                                    "type": "RTCPeerConnectionErrorCallback"
                                },
                                {
                                    "name": "options",
                                    "optional": "1",
                                    "type": "RTCOfferOptions"
                                }
                            ]
                        },
                        {
                            "name": "getConfiguration",
                            "type": "RTCConfiguration"
                        },
                        {
                            "name": "getLocalStreams",
                            "type": "sequence<MediaStream>"
                        },
                        {
                            "name": "getRemoteStreams",
                            "type": "sequence<MediaStream>"
                        },
                        {
                            "name": "getStats",
                            "type": "Promise<RTCStatsReport>",
                            "param": [
                                {
                                    "name": "selector",
                                    "nullable": "1",
                                    "type": "MediaStreamTrack"
                                },
                                {
                                    "name": "successCallback",
                                    "optional": "1",
                                    "type": "RTCStatsCallback"
                                },
                                {
                                    "name": "failureCallback",
                                    "optional": "1",
                                    "type": "RTCPeerConnectionErrorCallback"
                                }
                            ]
                        },
                        {
                            "name": "getStreamById",
                            "nullable": "1",
                            "type": "MediaStream",
                            "param": [
                                {
                                    "name": "streamId",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "removeStream",
                            "type": "void",
                            "param": [
                                {
                                    "name": "stream",
                                    "type": "MediaStream"
                                }
                            ]
                        },
                        {
                            "name": "setLocalDescription",
                            "type": "Promise<void>",
                            "param": [
                                {
                                    "name": "description",
                                    "type": "RTCSessionDescription"
                                },
                                {
                                    "name": "successCallback",
                                    "optional": "1",
                                    "type": "VoidFunction"
                                },
                                {
                                    "name": "failureCallback",
                                    "optional": "1",
                                    "type": "RTCPeerConnectionErrorCallback"
                                }
                            ]
                        },
                        {
                            "name": "setRemoteDescription",
                            "type": "Promise<void>",
                            "param": [
                                {
                                    "name": "description",
                                    "type": "RTCSessionDescription"
                                },
                                {
                                    "name": "successCallback",
                                    "optional": "1",
                                    "type": "VoidFunction"
                                },
                                {
                                    "name": "failureCallback",
                                    "optional": "1",
                                    "type": "RTCPeerConnectionErrorCallback"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "canTrickleIceCandidates",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "iceConnectionState",
                            "read-only": "1",
                            "type": "RTCIceConnectionState"
                        },
                        {
                            "name": "iceGatheringState",
                            "read-only": "1",
                            "type": "RTCIceGatheringState"
                        },
                        {
                            "name": "localDescription",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "RTCSessionDescription"
                        },
                        {
                            "name": "onaddstream",
                            "event-handler": "addstream",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onicecandidate",
                            "event-handler": "icecandidate",
                            "type": "EventHandler"
                        },
                        {
                            "name": "oniceconnectionstatechange",
                            "event-handler": "iceconnectionstatechange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onicegatheringstatechange",
                            "event-handler": "icegatheringstatechange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onnegotiationneeded",
                            "event-handler": "negotiationneeded",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onremovestream",
                            "event-handler": "removestream",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onsignalingstatechange",
                            "event-handler": "signalingstatechange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "remoteDescription",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "RTCSessionDescription"
                        },
                        {
                            "name": "signalingState",
                            "read-only": "1",
                            "type": "RTCSignalingState"
                        }
                    ]
                }
            },
            {
                "name": "RTCPeerConnectionIceEvent",
                "extends": "Event",
                "constructor": {
                    "param": [
                        {
                            "name": "type",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "type": "RTCPeerConnectionIceEventInit"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "candidate",
                            "read-only": "1",
                            "type": "RTCIceCandidate"
                        }
                    ]
                }
            },
            {
                "name": "RTCRtpReceiver",
                "extends": "RTCStatsProvider",
                "constructor": {
                    "param": [
                        {
                            "name": "transport",
                            "type": "(RTCDtlsTransport or RTCSrtpSdesTransport)",
                            "type-original": "RTCTransport"
                        },
                        {
                            "name": "kind",
                            "type": "DOMString"
                        },
                        {
                            "name": "rtcpTransport",
                            "optional": "1",
                            "type": "RTCDtlsTransport"
                        }
                    ]
                },
                "events": {
                    "event": [
                        {
                            "name": "error",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "getCapabilities",
                            "static": "1",
                            "type": "RTCRtpCapabilities",
                            "param": [
                                {
                                    "name": "kind",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "getContributingSources",
                            "type": "sequence<RTCRtpContributingSource>"
                        },
                        {
                            "name": "receive",
                            "type": "void",
                            "param": [
                                {
                                    "name": "parameters",
                                    "type": "RTCRtpParameters"
                                }
                            ]
                        },
                        {
                            "name": "requestSendCSRC",
                            "type": "void",
                            "param": [
                                {
                                    "name": "csrc",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "setTransport",
                            "type": "void",
                            "param": [
                                {
                                    "name": "transport",
                                    "type": "(RTCDtlsTransport or RTCSrtpSdesTransport)",
                                    "type-original": "RTCTransport"
                                },
                                {
                                    "name": "rtcpTransport",
                                    "optional": "1",
                                    "type": "RTCDtlsTransport"
                                }
                            ]
                        },
                        {
                            "name": "stop",
                            "type": "void"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "onerror",
                            "event-handler": "error",
                            "nullable": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "rtcpTransport",
                            "read-only": "1",
                            "type": "RTCDtlsTransport"
                        },
                        {
                            "name": "track",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "MediaStreamTrack"
                        },
                        {
                            "name": "transport",
                            "read-only": "1",
                            "type": "(RTCDtlsTransport or RTCSrtpSdesTransport)",
                            "type-original": "RTCTransport"
                        }
                    ]
                }
            },
            {
                "name": "RTCRtpSender",
                "extends": "RTCStatsProvider",
                "constructor": {
                    "param": [
                        {
                            "name": "track",
                            "type": "MediaStreamTrack"
                        },
                        {
                            "name": "transport",
                            "type": "(RTCDtlsTransport or RTCSrtpSdesTransport)",
                            "type-original": "RTCTransport"
                        },
                        {
                            "name": "rtcpTransport",
                            "optional": "1",
                            "type": "RTCDtlsTransport"
                        }
                    ]
                },
                "events": {
                    "event": [
                        {
                            "name": "error",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "ssrcconflict",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "RTCSsrcConflictEvent"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "getCapabilities",
                            "static": "1",
                            "type": "RTCRtpCapabilities",
                            "param": [
                                {
                                    "name": "kind",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "send",
                            "type": "void",
                            "param": [
                                {
                                    "name": "parameters",
                                    "type": "RTCRtpParameters"
                                }
                            ]
                        },
                        {
                            "name": "setTrack",
                            "type": "void",
                            "param": [
                                {
                                    "name": "track",
                                    "type": "MediaStreamTrack"
                                }
                            ]
                        },
                        {
                            "name": "setTransport",
                            "type": "void",
                            "param": [
                                {
                                    "name": "transport",
                                    "type": "(RTCDtlsTransport or RTCSrtpSdesTransport)",
                                    "type-original": "RTCTransport"
                                },
                                {
                                    "name": "rtcpTransport",
                                    "optional": "1",
                                    "type": "RTCDtlsTransport"
                                }
                            ]
                        },
                        {
                            "name": "stop",
                            "type": "void"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "onerror",
                            "event-handler": "error",
                            "nullable": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onssrcconflict",
                            "event-handler": "ssrcconflict",
                            "nullable": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "rtcpTransport",
                            "read-only": "1",
                            "type": "RTCDtlsTransport"
                        },
                        {
                            "name": "track",
                            "read-only": "1",
                            "type": "MediaStreamTrack"
                        },
                        {
                            "name": "transport",
                            "read-only": "1",
                            "type": "(RTCDtlsTransport or RTCSrtpSdesTransport)",
                            "type-original": "RTCTransport"
                        }
                    ]
                }
            },
            {
                "name": "RTCSessionDescription",
                "extends": "Object",
                "constructor": {
                    "param": [
                        {
                            "name": "descriptionInitDict",
                            "optional": "1",
                            "type": "RTCSessionDescriptionInit"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "toJSON",
                            "serializer": "1",
                            "serializer-info": "attribute",
                            "type": "any"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "sdp",
                            "nullable": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "type",
                            "nullable": "1",
                            "type": "RTCSdpType"
                        }
                    ]
                }
            },
            {
                "name": "RTCSrtpSdesTransport",
                "extends": "EventTarget",
                "constructor": {
                    "param": [
                        {
                            "name": "transport",
                            "type": "RTCIceTransport"
                        },
                        {
                            "name": "encryptParameters",
                            "type": "RTCSrtpSdesParameters"
                        },
                        {
                            "name": "decryptParameters",
                            "type": "RTCSrtpSdesParameters"
                        }
                    ]
                },
                "events": {
                    "event": [
                        {
                            "name": "error",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "getLocalParameters",
                            "static": "1",
                            "type": "sequence<RTCSrtpSdesParameters>"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "onerror",
                            "event-handler": "error",
                            "nullable": "1",
                            "type": "EventHandler"
                        },
                        {
                            "name": "transport",
                            "read-only": "1",
                            "type": "RTCIceTransport"
                        }
                    ]
                }
            },
            {
                "name": "RTCSsrcConflictEvent",
                "extends": "Event",
                "properties": {
                    "property": [
                        {
                            "name": "ssrc",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "RTCStatsProvider",
                "extends": "EventTarget",
                "methods": {
                    "method": [
                        {
                            "name": "getStats",
                            "type": "Promise<RTCStatsReport>"
                        },
                        {
                            "name": "msGetStats",
                            "type": "Promise<RTCStatsReport>"
                        }
                    ]
                }
            },
            {
                "name": "ScopedCredential",
                "extends": "Object",
                "secure-context": "1",
                "properties": {
                    "property": [
                        {
                            "name": "id",
                            "read-only": "1",
                            "type": "ArrayBuffer"
                        },
                        {
                            "name": "type",
                            "read-only": "1",
                            "type": "ScopedCredentialType"
                        }
                    ]
                }
            },
            {
                "name": "ScopedCredentialInfo",
                "extends": "Object",
                "secure-context": "1",
                "properties": {
                    "property": [
                        {
                            "name": "credential",
                            "read-only": "1",
                            "type": "ScopedCredential"
                        },
                        {
                            "name": "publicKey",
                            "read-only": "1",
                            "type": "CryptoKey"
                        }
                    ]
                }
            },
            {
                "name": "Screen",
                "extends": "EventTarget",
                "events": {
                    "event": [
                        {
                            "name": "MSOrientationChange",
                            "dispatch": "async",
                            "skips-window": "1",
                            "tags": "IEOnly",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "msLockOrientation",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "orientations",
                                    "type": "(DOMString or sequence<DOMString>)"
                                }
                            ]
                        },
                        {
                            "name": "msUnlockOrientation",
                            "type": "void"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "availHeight",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "availWidth",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "bufferDepth",
                            "type": "long"
                        },
                        {
                            "name": "colorDepth",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "deviceXDPI",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "deviceYDPI",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "fontSmoothingEnabled",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "height",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "logicalXDPI",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "logicalYDPI",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "msOrientation",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "onmsorientationchange",
                            "event-handler": "MSOrientationChange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "pixelDepth",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "systemXDPI",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "systemYDPI",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "width",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "ScriptNotifyEvent",
                "extends": "Event",
                "tags": "MSAppOnly",
                "properties": {
                    "property": [
                        {
                            "name": "callingUri",
                            "read-only": "1",
                            "tags": "MSAppOnly",
                            "type": "DOMString"
                        },
                        {
                            "name": "value",
                            "read-only": "1",
                            "tags": "MSAppOnly",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "ScriptProcessorNode",
                "extends": "AudioNode",
                "events": {
                    "event": [
                        {
                            "name": "audioprocess",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "AudioProcessingEvent"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "bufferSize",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "onaudioprocess",
                            "event-handler": "audioprocess",
                            "type": "EventHandler"
                        }
                    ]
                }
            },
            {
                "name": "Selection",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "addRange",
                            "type": "void",
                            "param": [
                                {
                                    "name": "range",
                                    "type": "Range"
                                }
                            ]
                        },
                        {
                            "name": "collapse",
                            "type": "void",
                            "param": [
                                {
                                    "name": "parentNode",
                                    "type": "Node"
                                },
                                {
                                    "name": "offset",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "collapseToEnd",
                            "type": "void"
                        },
                        {
                            "name": "collapseToStart",
                            "type": "void"
                        },
                        {
                            "name": "containsNode",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "node",
                                    "type": "Node"
                                },
                                {
                                    "name": "partlyContained",
                                    "type": "boolean"
                                }
                            ]
                        },
                        {
                            "name": "deleteFromDocument",
                            "type": "void"
                        },
                        {
                            "name": "empty",
                            "type": "void"
                        },
                        {
                            "name": "extend",
                            "type": "void",
                            "param": [
                                {
                                    "name": "newNode",
                                    "type": "Node"
                                },
                                {
                                    "name": "offset",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "getRangeAt",
                            "type": "Range",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "removeAllRanges",
                            "type": "void"
                        },
                        {
                            "name": "removeRange",
                            "type": "void",
                            "param": [
                                {
                                    "name": "range",
                                    "type": "Range"
                                }
                            ]
                        },
                        {
                            "name": "selectAllChildren",
                            "type": "void",
                            "param": [
                                {
                                    "name": "parentNode",
                                    "type": "Node"
                                }
                            ]
                        },
                        {
                            "name": "setBaseAndExtent",
                            "type": "void",
                            "param": [
                                {
                                    "name": "baseNode",
                                    "type": "Node"
                                },
                                {
                                    "name": "baseOffset",
                                    "type": "long"
                                },
                                {
                                    "name": "extentNode",
                                    "type": "Node"
                                },
                                {
                                    "name": "extentOffset",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "setPosition",
                            "type": "void",
                            "param": [
                                {
                                    "name": "parentNode",
                                    "type": "Node"
                                },
                                {
                                    "name": "offset",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "toString",
                            "stringifier": "1",
                            "type": "DOMString"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "anchorNode",
                            "read-only": "1",
                            "type": "Node"
                        },
                        {
                            "name": "anchorOffset",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "baseNode",
                            "read-only": "1",
                            "type": "Node"
                        },
                        {
                            "name": "baseOffset",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "extentNode",
                            "read-only": "1",
                            "type": "Node"
                        },
                        {
                            "name": "extentOffset",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "focusNode",
                            "read-only": "1",
                            "type": "Node"
                        },
                        {
                            "name": "focusOffset",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "isCollapsed",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "rangeCount",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "type",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "ServiceWorker",
                "extends": "EventTarget",
                "events": {
                    "event": [
                        {
                            "name": "error",
                            "dispatch": "async",
                            "skips-window": "1",
                            "type": "ErrorEvent"
                        },
                        {
                            "name": "statechange",
                            "dispatch": "async",
                            "skips-window": "1",
                            "type": "Event"
                        }
                    ]
                },
                "implements": [
                    "AbstractWorker"
                ],
                "methods": {
                    "method": [
                        {
                            "name": "postMessage",
                            "type": "void",
                            "param": [
                                {
                                    "name": "message",
                                    "type": "any"
                                },
                                {
                                    "name": "transfer",
                                    "optional": "1",
                                    "type": "sequence<Transferable>"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "onstatechange",
                            "event-handler": "statechange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "scriptURL",
                            "read-only": "1",
                            "type": "USVString"
                        },
                        {
                            "name": "state",
                            "read-only": "1",
                            "type": "ServiceWorkerState"
                        }
                    ]
                }
            },
            {
                "name": "ServiceWorkerContainer",
                "extends": "EventTarget",
                "secure-context": "1",
                "events": {
                    "event": [
                        {
                            "name": "controllerchange",
                            "dispatch": "async",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "error",
                            "dispatch": "async",
                            "skips-window": "1",
                            "type": "ErrorEvent"
                        },
                        {
                            "name": "message",
                            "dispatch": "async",
                            "skips-window": "1",
                            "type": "ServiceWorkerMessageEvent"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "getRegistration",
                            "new-object": "1",
                            "type": "Promise<any>",
                            "param": [
                                {
                                    "name": "clientURL",
                                    "default": "\"\"",
                                    "optional": "1",
                                    "type": "USVString"
                                }
                            ]
                        },
                        {
                            "name": "getRegistrations",
                            "new-object": "1",
                            "type": "Promise<sequence<ServiceWorkerRegistration>>"
                        },
                        {
                            "name": "register",
                            "new-object": "1",
                            "type": "Promise<ServiceWorkerRegistration>",
                            "param": [
                                {
                                    "name": "scriptURL",
                                    "type": "USVString"
                                },
                                {
                                    "name": "options",
                                    "optional": "1",
                                    "type": "RegistrationOptions"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "controller",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "ServiceWorker"
                        },
                        {
                            "name": "oncontrollerchange",
                            "event-handler": "controllerchange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmessage",
                            "event-handler": "message",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ready",
                            "read-only": "1",
                            "same-object": "1",
                            "type": "Promise<ServiceWorkerRegistration>"
                        }
                    ]
                }
            },
            {
                "name": "ServiceWorkerMessageEvent",
                "extends": "Event",
                "constructor": {
                    "param": [
                        {
                            "name": "type",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "optional": "1",
                            "type": "ServiceWorkerMessageEventInit"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "data",
                            "read-only": "1",
                            "type": "any"
                        },
                        {
                            "name": "lastEventId",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "origin",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "ports",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "sequence<MessagePort>"
                        },
                        {
                            "name": "source",
                            "nullable": "1",
                            "read-only": "1",
                            "same-object": "1",
                            "type": "(ServiceWorker or MessagePort)"
                        }
                    ]
                }
            },
            {
                "name": "ServiceWorkerRegistration",
                "extends": "EventTarget",
                "events": {
                    "event": [
                        {
                            "name": "updatefound",
                            "dispatch": "async",
                            "skips-window": "1",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "getNotifications",
                            "type": "Promise<sequence<Notification>>",
                            "param": [
                                {
                                    "name": "filter",
                                    "optional": "1",
                                    "type": "GetNotificationOptions"
                                }
                            ]
                        },
                        {
                            "name": "showNotification",
                            "type": "Promise<void>",
                            "param": [
                                {
                                    "name": "title",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "options",
                                    "optional": "1",
                                    "type": "NotificationOptions"
                                }
                            ]
                        },
                        {
                            "name": "unregister",
                            "new-object": "1",
                            "type": "Promise<boolean>"
                        },
                        {
                            "name": "update",
                            "new-object": "1",
                            "type": "Promise<void>"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "active",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "ServiceWorker"
                        },
                        {
                            "name": "installing",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "ServiceWorker"
                        },
                        {
                            "name": "onupdatefound",
                            "event-handler": "updatefound",
                            "type": "EventHandler"
                        },
                        {
                            "name": "pushManager",
                            "read-only": "1",
                            "type": "PushManager"
                        },
                        {
                            "name": "scope",
                            "read-only": "1",
                            "type": "USVString"
                        },
                        {
                            "name": "sync",
                            "read-only": "1",
                            "type": "SyncManager"
                        },
                        {
                            "name": "waiting",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "ServiceWorker"
                        }
                    ]
                }
            },
            {
                "name": "SourceBuffer",
                "extends": "EventTarget",
                "events": {
                    "event": [
                        {
                            "name": "error",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "abort",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "updatestart",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "update",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "updateend",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "abort",
                            "type": "void"
                        },
                        {
                            "name": "appendBuffer",
                            "type": "void",
                            "param": [
                                {
                                    "name": "data",
                                    "type": "(ArrayBuffer or ArrayBufferView)"
                                }
                            ]
                        },
                        {
                            "name": "appendStream",
                            "type": "void",
                            "param": [
                                {
                                    "name": "stream",
                                    "type": "MSStream"
                                },
                                {
                                    "name": "maxSize",
                                    "optional": "1",
                                    "type": "unsigned long long"
                                }
                            ]
                        },
                        {
                            "name": "remove",
                            "type": "void",
                            "param": [
                                {
                                    "name": "start",
                                    "type": "double"
                                },
                                {
                                    "name": "end",
                                    "type": "double"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "appendWindowEnd",
                            "type": "double"
                        },
                        {
                            "name": "appendWindowStart",
                            "type": "double"
                        },
                        {
                            "name": "audioTracks",
                            "read-only": "1",
                            "type": "AudioTrackList"
                        },
                        {
                            "name": "buffered",
                            "read-only": "1",
                            "type": "TimeRanges"
                        },
                        {
                            "name": "mode",
                            "type": "AppendMode"
                        },
                        {
                            "name": "timestampOffset",
                            "type": "double"
                        },
                        {
                            "name": "updating",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "videoTracks",
                            "read-only": "1",
                            "type": "VideoTrackList"
                        }
                    ]
                }
            },
            {
                "name": "SourceBufferList",
                "extends": "EventTarget",
                "events": {
                    "event": [
                        {
                            "name": "addsourcebuffer",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "removesourcebuffer",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "item",
                            "getter": "1",
                            "type": "SourceBuffer",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "length",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "SpeechSynthesis",
                "extends": "EventTarget",
                "events": {
                    "event": [
                        {
                            "name": "voiceschanged",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "cancel",
                            "type": "void"
                        },
                        {
                            "name": "getVoices",
                            "type": "sequence<SpeechSynthesisVoice>"
                        },
                        {
                            "name": "pause",
                            "type": "void"
                        },
                        {
                            "name": "resume",
                            "type": "void"
                        },
                        {
                            "name": "speak",
                            "type": "void",
                            "param": [
                                {
                                    "name": "utterance",
                                    "type": "SpeechSynthesisUtterance"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "onvoiceschanged",
                            "event-handler": "voiceschanged",
                            "type": "EventHandler"
                        },
                        {
                            "name": "paused",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "pending",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "speaking",
                            "read-only": "1",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "SpeechSynthesisEvent",
                "extends": "Event",
                "constructor": {
                    "param": [
                        {
                            "name": "type",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "optional": "1",
                            "type": "SpeechSynthesisEventInit"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "charIndex",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "elapsedTime",
                            "read-only": "1",
                            "type": "float"
                        },
                        {
                            "name": "name",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "utterance",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "SpeechSynthesisUtterance"
                        }
                    ]
                }
            },
            {
                "name": "SpeechSynthesisUtterance",
                "extends": "EventTarget",
                "constructor": {
                    "param": [
                        {
                            "name": "text",
                            "optional": "1",
                            "type": "DOMString"
                        }
                    ]
                },
                "events": {
                    "event": [
                        {
                            "name": "start",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "pause",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "resume",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "end",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "error",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "mark",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "boundary",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "lang",
                            "type": "DOMString"
                        },
                        {
                            "name": "onboundary",
                            "event-handler": "boundary",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onend",
                            "event-handler": "end",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onerror",
                            "event-handler": "error",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmark",
                            "event-handler": "mark",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onpause",
                            "event-handler": "pause",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onresume",
                            "event-handler": "resume",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onstart",
                            "event-handler": "start",
                            "type": "EventHandler"
                        },
                        {
                            "name": "pitch",
                            "type": "float"
                        },
                        {
                            "name": "rate",
                            "type": "float"
                        },
                        {
                            "name": "text",
                            "type": "DOMString"
                        },
                        {
                            "name": "voice",
                            "type": "SpeechSynthesisVoice"
                        },
                        {
                            "name": "volume",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "SpeechSynthesisVoice",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "default",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "lang",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "localService",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "name",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "voiceURI",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "StereoPannerNode",
                "extends": "AudioNode",
                "properties": {
                    "property": [
                        {
                            "name": "pan",
                            "read-only": "1",
                            "type": "AudioParam"
                        }
                    ]
                }
            },
            {
                "name": "Storage",
                "extends": "Object",
                "override-builtins": "1",
                "methods": {
                    "method": [
                        {
                            "name": "clear",
                            "property-descriptor-not-enumerable": "1",
                            "type": "void"
                        },
                        {
                            "name": "getItem",
                            "getter": "1",
                            "property-descriptor-not-enumerable": "1",
                            "type": "any",
                            "param": [
                                {
                                    "name": "key",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "key",
                            "getter": "1",
                            "property-descriptor-not-enumerable": "1",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "removeItem",
                            "deleter": "1",
                            "property-descriptor-not-enumerable": "1",
                            "type": "void",
                            "param": [
                                {
                                    "name": "key",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "setItem",
                            "creator": "1",
                            "property-descriptor-not-enumerable": "1",
                            "setter": "1",
                            "type": "void",
                            "param": [
                                {
                                    "name": "key",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "data",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "length",
                            "property-descriptor-not-enumerable": "1",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "StorageEvent",
                "extends": "Event",
                "methods": {
                    "method": [
                        {
                            "name": "initStorageEvent",
                            "type": "void",
                            "param": [
                                {
                                    "name": "typeArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "canBubbleArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "cancelableArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "keyArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "oldValueArg",
                                    "type": "any"
                                },
                                {
                                    "name": "newValueArg",
                                    "type": "any"
                                },
                                {
                                    "name": "urlArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "storageAreaArg",
                                    "type": "Storage"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "key",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "newValue",
                            "read-only": "1",
                            "type": "any"
                        },
                        {
                            "name": "oldValue",
                            "read-only": "1",
                            "type": "any"
                        },
                        {
                            "name": "storageArea",
                            "read-only": "1",
                            "type": "Storage"
                        },
                        {
                            "name": "url",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "StyleMedia",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "matchMedium",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "mediaquery",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "type",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "StyleSheet",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "disabled",
                            "type": "boolean"
                        },
                        {
                            "name": "href",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "media",
                            "put-forwards": "mediaText",
                            "read-only": "1",
                            "type": "MediaList"
                        },
                        {
                            "name": "ownerNode",
                            "read-only": "1",
                            "type": "Node"
                        },
                        {
                            "name": "parentStyleSheet",
                            "read-only": "1",
                            "type": "StyleSheet"
                        },
                        {
                            "name": "title",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "type",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "StyleSheetList",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "item",
                            "getter": "1",
                            "type": "StyleSheet",
                            "param": [
                                {
                                    "name": "index",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "length",
                            "read-only": "1",
                            "type": "long"
                        }
                    ]
                }
            },
            {
                "name": "StyleSheetPageList",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "item",
                            "getter": "1",
                            "type": "CSSPageRule",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "length",
                            "read-only": "1",
                            "type": "long"
                        }
                    ]
                }
            },
            {
                "name": "SubtleCrypto",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "decrypt",
                            "type": "Promise<any>",
                            "param": [
                                {
                                    "name": "algorithm",
                                    "type": "(DOMString or Algorithm)",
                                    "type-original": "AlgorithmIdentifier"
                                },
                                {
                                    "name": "key",
                                    "type": "CryptoKey"
                                },
                                {
                                    "name": "data",
                                    "type": "ArrayBufferView",
                                    "type-original": "CryptoOperationData"
                                }
                            ]
                        },
                        {
                            "name": "deriveBits",
                            "type": "Promise<any>",
                            "param": [
                                {
                                    "name": "algorithm",
                                    "type": "(DOMString or Algorithm)",
                                    "type-original": "AlgorithmIdentifier"
                                },
                                {
                                    "name": "baseKey",
                                    "type": "CryptoKey"
                                },
                                {
                                    "name": "length",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "deriveKey",
                            "type": "Promise<any>",
                            "param": [
                                {
                                    "name": "algorithm",
                                    "type": "(DOMString or Algorithm)",
                                    "type-original": "AlgorithmIdentifier"
                                },
                                {
                                    "name": "baseKey",
                                    "type": "CryptoKey"
                                },
                                {
                                    "name": "derivedKeyType",
                                    "type": "(DOMString or Algorithm)",
                                    "type-original": "AlgorithmIdentifier"
                                },
                                {
                                    "name": "extractable",
                                    "type": "boolean"
                                },
                                {
                                    "name": "keyUsages",
                                    "type": "sequence<DOMString>"
                                }
                            ]
                        },
                        {
                            "name": "digest",
                            "type": "Promise<any>",
                            "param": [
                                {
                                    "name": "algorithm",
                                    "type": "(DOMString or Algorithm)",
                                    "type-original": "AlgorithmIdentifier"
                                },
                                {
                                    "name": "data",
                                    "type": "ArrayBufferView",
                                    "type-original": "CryptoOperationData"
                                }
                            ]
                        },
                        {
                            "name": "encrypt",
                            "type": "Promise<any>",
                            "param": [
                                {
                                    "name": "algorithm",
                                    "type": "(DOMString or Algorithm)",
                                    "type-original": "AlgorithmIdentifier"
                                },
                                {
                                    "name": "key",
                                    "type": "CryptoKey"
                                },
                                {
                                    "name": "data",
                                    "type": "ArrayBufferView",
                                    "type-original": "CryptoOperationData"
                                }
                            ]
                        },
                        {
                            "name": "exportKey",
                            "type": "Promise<any>",
                            "param": [
                                {
                                    "name": "format",
                                    "type": "DOMString",
                                    "type-original": "KeyFormat"
                                },
                                {
                                    "name": "key",
                                    "type": "CryptoKey"
                                }
                            ]
                        },
                        {
                            "name": "generateKey",
                            "type": "Promise<any>",
                            "param": [
                                {
                                    "name": "algorithm",
                                    "type": "(DOMString or Algorithm)",
                                    "type-original": "AlgorithmIdentifier"
                                },
                                {
                                    "name": "extractable",
                                    "type": "boolean"
                                },
                                {
                                    "name": "keyUsages",
                                    "type": "sequence<DOMString>"
                                }
                            ]
                        },
                        {
                            "name": "importKey",
                            "type": "Promise<any>",
                            "param": [
                                {
                                    "name": "format",
                                    "type": "DOMString",
                                    "type-original": "KeyFormat"
                                },
                                {
                                    "name": "keyData",
                                    "type": "ArrayBufferView",
                                    "type-original": "CryptoOperationData"
                                },
                                {
                                    "name": "algorithm",
                                    "nullable": "1",
                                    "type": "(DOMString or Algorithm)",
                                    "type-original": "AlgorithmIdentifier"
                                },
                                {
                                    "name": "extractable",
                                    "type": "boolean"
                                },
                                {
                                    "name": "keyUsages",
                                    "type": "sequence<DOMString>"
                                }
                            ]
                        },
                        {
                            "name": "sign",
                            "type": "Promise<any>",
                            "param": [
                                {
                                    "name": "algorithm",
                                    "type": "(DOMString or Algorithm)",
                                    "type-original": "AlgorithmIdentifier"
                                },
                                {
                                    "name": "key",
                                    "type": "CryptoKey"
                                },
                                {
                                    "name": "data",
                                    "type": "ArrayBufferView",
                                    "type-original": "CryptoOperationData"
                                }
                            ]
                        },
                        {
                            "name": "unwrapKey",
                            "type": "Promise<any>",
                            "param": [
                                {
                                    "name": "format",
                                    "type": "DOMString",
                                    "type-original": "KeyFormat"
                                },
                                {
                                    "name": "wrappedKey",
                                    "type": "ArrayBufferView",
                                    "type-original": "CryptoOperationData"
                                },
                                {
                                    "name": "unwrappingKey",
                                    "type": "CryptoKey"
                                },
                                {
                                    "name": "unwrapAlgorithm",
                                    "type": "(DOMString or Algorithm)",
                                    "type-original": "AlgorithmIdentifier"
                                },
                                {
                                    "name": "unwrappedKeyAlgorithm",
                                    "nullable": "1",
                                    "type": "(DOMString or Algorithm)",
                                    "type-original": "AlgorithmIdentifier"
                                },
                                {
                                    "name": "extractable",
                                    "type": "boolean"
                                },
                                {
                                    "name": "keyUsages",
                                    "type": "sequence<DOMString>"
                                }
                            ]
                        },
                        {
                            "name": "verify",
                            "type": "Promise<any>",
                            "param": [
                                {
                                    "name": "algorithm",
                                    "type": "(DOMString or Algorithm)",
                                    "type-original": "AlgorithmIdentifier"
                                },
                                {
                                    "name": "key",
                                    "type": "CryptoKey"
                                },
                                {
                                    "name": "signature",
                                    "type": "ArrayBufferView",
                                    "type-original": "CryptoOperationData"
                                },
                                {
                                    "name": "data",
                                    "type": "ArrayBufferView",
                                    "type-original": "CryptoOperationData"
                                }
                            ]
                        },
                        {
                            "name": "wrapKey",
                            "type": "Promise<any>",
                            "param": [
                                {
                                    "name": "format",
                                    "type": "DOMString",
                                    "type-original": "KeyFormat"
                                },
                                {
                                    "name": "key",
                                    "type": "CryptoKey"
                                },
                                {
                                    "name": "wrappingKey",
                                    "type": "CryptoKey"
                                },
                                {
                                    "name": "wrapAlgorithm",
                                    "type": "(DOMString or Algorithm)",
                                    "type-original": "AlgorithmIdentifier"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "SVGAElement",
                "extends": "SVGGraphicsElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "none inherit",
                            "name": "clip-path",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit",
                            "name": "cursor",
                            "value-syntax": "comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"
                        },
                        {
                            "enum-values": "inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit initial",
                            "name": "display",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "accumulate inherit",
                            "name": "enable-background",
                            "value-syntax": "svg_enum_new_followed_by_svg_viewbox"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "filter",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "mask",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "inherit initial",
                            "name": "opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "visible hidden collapse inherit initial",
                            "name": "visibility",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "a",
                        "namespace": "SVG"
                    }
                ],
                "implements": [
                    "SVGURIReference"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "target",
                            "content-attribute": "target",
                            "content-attribute-enum-values": "_blank _self _parent _top",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "name_ref",
                            "read-only": "1",
                            "type": "SVGAnimatedString"
                        }
                    ]
                }
            },
            {
                "name": "SVGAngle",
                "extends": "Object",
                "constants": {
                    "constant": [
                        {
                            "name": "SVG_ANGLETYPE_DEG",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "SVG_ANGLETYPE_GRAD",
                            "type": "unsigned short",
                            "value": [
                                "4"
                            ]
                        },
                        {
                            "name": "SVG_ANGLETYPE_RAD",
                            "type": "unsigned short",
                            "value": [
                                "3"
                            ]
                        },
                        {
                            "name": "SVG_ANGLETYPE_UNKNOWN",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        },
                        {
                            "name": "SVG_ANGLETYPE_UNSPECIFIED",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "convertToSpecifiedUnits",
                            "type": "void",
                            "param": [
                                {
                                    "name": "unitType",
                                    "type": "unsigned short"
                                }
                            ]
                        },
                        {
                            "name": "newValueSpecifiedUnits",
                            "type": "void",
                            "param": [
                                {
                                    "name": "unitType",
                                    "type": "unsigned short"
                                },
                                {
                                    "name": "valueInSpecifiedUnits",
                                    "type": "float"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "unitType",
                            "read-only": "1",
                            "type": "unsigned short"
                        },
                        {
                            "name": "value",
                            "type": "float"
                        },
                        {
                            "name": "valueAsString",
                            "type": "DOMString"
                        },
                        {
                            "name": "valueInSpecifiedUnits",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "SVGAnimatedAngle",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "animVal",
                            "read-only": "1",
                            "type": "SVGAngle"
                        },
                        {
                            "name": "baseVal",
                            "read-only": "1",
                            "type": "SVGAngle"
                        }
                    ]
                }
            },
            {
                "name": "SVGAnimatedBoolean",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "animVal",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "baseVal",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "SVGAnimatedEnumeration",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "animVal",
                            "read-only": "1",
                            "type": "unsigned short"
                        },
                        {
                            "name": "baseVal",
                            "type": "unsigned short"
                        }
                    ]
                }
            },
            {
                "name": "SVGAnimatedInteger",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "animVal",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "baseVal",
                            "type": "long"
                        }
                    ]
                }
            },
            {
                "name": "SVGAnimatedLength",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "animVal",
                            "read-only": "1",
                            "type": "SVGLength"
                        },
                        {
                            "name": "baseVal",
                            "read-only": "1",
                            "type": "SVGLength"
                        }
                    ]
                }
            },
            {
                "name": "SVGAnimatedLengthList",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "animVal",
                            "read-only": "1",
                            "type": "SVGLengthList"
                        },
                        {
                            "name": "baseVal",
                            "read-only": "1",
                            "type": "SVGLengthList"
                        }
                    ]
                }
            },
            {
                "name": "SVGAnimatedNumber",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "animVal",
                            "read-only": "1",
                            "type": "float"
                        },
                        {
                            "name": "baseVal",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "SVGAnimatedNumberList",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "animVal",
                            "read-only": "1",
                            "type": "SVGNumberList"
                        },
                        {
                            "name": "baseVal",
                            "read-only": "1",
                            "type": "SVGNumberList"
                        }
                    ]
                }
            },
            {
                "name": "SVGAnimatedPreserveAspectRatio",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "animVal",
                            "read-only": "1",
                            "type": "SVGPreserveAspectRatio"
                        },
                        {
                            "name": "baseVal",
                            "read-only": "1",
                            "type": "SVGPreserveAspectRatio"
                        }
                    ]
                }
            },
            {
                "name": "SVGAnimatedRect",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "animVal",
                            "read-only": "1",
                            "type": "SVGRect"
                        },
                        {
                            "name": "baseVal",
                            "read-only": "1",
                            "type": "SVGRect"
                        }
                    ]
                }
            },
            {
                "name": "SVGAnimatedString",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "animVal",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "baseVal",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "SVGAnimatedTransformList",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "animVal",
                            "read-only": "1",
                            "type": "SVGTransformList"
                        },
                        {
                            "name": "baseVal",
                            "read-only": "1",
                            "type": "SVGTransformList"
                        }
                    ]
                }
            },
            {
                "name": "SVGCircleElement",
                "extends": "SVGGraphicsElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "none inherit",
                            "name": "clip-path",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "nonzero evenodd inherit",
                            "name": "clip-rule",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "inherit initial",
                            "name": "color",
                            "value-syntax": "css_color"
                        },
                        {
                            "enum-values": "auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit",
                            "name": "cursor",
                            "value-syntax": "comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"
                        },
                        {
                            "enum-values": "inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit initial",
                            "name": "display",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none currentColor inherit",
                            "name": "fill",
                            "value-syntax": "svg_paint_or_css_color"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "fill-opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "nonzero evenodd inherit",
                            "name": "fill-rule",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "filter",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "mask",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "inherit initial",
                            "name": "opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "auto none visiblePainted visibleFill visibleStroke visible painted fill stroke all inherit initial",
                            "name": "pointer-events",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none currentColor inherit",
                            "name": "stroke",
                            "value-syntax": "svg_paint_or_css_color"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "stroke-dasharray",
                            "value-syntax": "comma_or_space_separated_css_percentage_or_length"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-dashoffset",
                            "value-syntax": "css_percentage_or_length"
                        },
                        {
                            "enum-values": "butt round square inherit",
                            "name": "stroke-linecap",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "miter round bevel inherit",
                            "name": "stroke-linejoin",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-miterlimit",
                            "value-syntax": "1_or_greater_floating_point_number"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-width",
                            "value-syntax": "css_percentage_or_length"
                        },
                        {
                            "enum-values": "visible hidden collapse inherit initial",
                            "name": "visibility",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "circle",
                        "namespace": "SVG"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "cx",
                            "content-attribute": "cx",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "cy",
                            "content-attribute": "cy",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "r",
                            "content-attribute": "r",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        }
                    ]
                }
            },
            {
                "name": "SVGClipPathElement",
                "extends": "SVGGraphicsElement",
                "element": [
                    {
                        "name": "clipPath",
                        "namespace": "SVG"
                    }
                ],
                "implements": [
                    "SVGUnitTypes"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "clipPathUnits",
                            "content-attribute": "clipPathUnits",
                            "content-attribute-enum-values": "userSpaceOnUse objectBoundingBox",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "read-only": "1",
                            "type": "SVGAnimatedEnumeration"
                        }
                    ]
                }
            },
            {
                "name": "SVGComponentTransferFunctionElement",
                "extends": "SVGElement",
                "constants": {
                    "constant": [
                        {
                            "name": "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE",
                            "type": "unsigned short",
                            "value": [
                                "3"
                            ]
                        },
                        {
                            "name": "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA",
                            "type": "unsigned short",
                            "value": [
                                "5"
                            ]
                        },
                        {
                            "name": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR",
                            "type": "unsigned short",
                            "value": [
                                "4"
                            ]
                        },
                        {
                            "name": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "amplitude",
                            "content-attribute": "amplitude",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "exponent",
                            "content-attribute": "exponent",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "intercept",
                            "content-attribute": "intercept",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "offset",
                            "content-attribute": "offset",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "slope",
                            "content-attribute": "slope",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "tableValues",
                            "content-attribute": "tableValues",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "comma_or_space_separated_floating_point_numbers",
                            "read-only": "1",
                            "type": "SVGAnimatedNumberList"
                        },
                        {
                            "name": "type",
                            "content-attribute": "type",
                            "content-attribute-enum-values": "identity table discrete linear gamma",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "read-only": "1",
                            "type": "SVGAnimatedEnumeration"
                        }
                    ]
                }
            },
            {
                "name": "SVGDefsElement",
                "extends": "SVGGraphicsElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "none inherit",
                            "name": "clip-path",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit",
                            "name": "cursor",
                            "value-syntax": "comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"
                        },
                        {
                            "enum-values": "accumulate inherit",
                            "name": "enable-background",
                            "value-syntax": "svg_enum_new_followed_by_svg_viewbox"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "filter",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "mask",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "inherit initial",
                            "name": "opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "defs",
                        "namespace": "SVG"
                    }
                ]
            },
            {
                "name": "SVGDescElement",
                "extends": "SVGElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "default preserve",
                            "name": "xml:space",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "desc",
                        "namespace": "SVG"
                    }
                ]
            },
            {
                "name": "SVGElement",
                "extends": "Element",
                "events": {
                    "event": [
                        {
                            "name": "SVGLoad",
                            "dispatch": "async",
                            "type": "Event"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "className",
                            "content-attribute": "class",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "space_separated_tokens",
                            "read-only": "1",
                            "type": "SVGAnimatedString"
                        },
                        {
                            "name": "onclick",
                            "content-attribute": "onclick",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "click",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondblclick",
                            "content-attribute": "ondblclick",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "dblclick",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onfocusin",
                            "content-attribute": "onfocusin",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "focusin",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onfocusout",
                            "content-attribute": "onfocusout",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "focusout",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onload",
                            "content-attribute": "onload",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "load",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmousedown",
                            "content-attribute": "onmousedown",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "mousedown",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmousemove",
                            "content-attribute": "onmousemove",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "mousemove",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmouseout",
                            "content-attribute": "onmouseout",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "mouseout",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmouseover",
                            "content-attribute": "onmouseover",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "mouseover",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmouseup",
                            "content-attribute": "onmouseup",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "mouseup",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ownerSVGElement",
                            "read-only": "1",
                            "type": "SVGSVGElement"
                        },
                        {
                            "name": "style",
                            "content-attribute": "style",
                            "content-attribute-value-syntax": "css",
                            "read-only": "1",
                            "type": "CSSStyleDeclaration"
                        },
                        {
                            "name": "viewportElement",
                            "read-only": "1",
                            "type": "SVGElement"
                        },
                        {
                            "name": "xmlbase",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "SVGElementInstance",
                "extends": "EventTarget",
                "properties": {
                    "property": [
                        {
                            "name": "childNodes",
                            "read-only": "1",
                            "type": "SVGElementInstanceList"
                        },
                        {
                            "name": "correspondingElement",
                            "read-only": "1",
                            "type": "SVGElement"
                        },
                        {
                            "name": "correspondingUseElement",
                            "read-only": "1",
                            "type": "SVGUseElement"
                        },
                        {
                            "name": "firstChild",
                            "read-only": "1",
                            "type": "SVGElementInstance"
                        },
                        {
                            "name": "lastChild",
                            "read-only": "1",
                            "type": "SVGElementInstance"
                        },
                        {
                            "name": "nextSibling",
                            "read-only": "1",
                            "type": "SVGElementInstance"
                        },
                        {
                            "name": "parentNode",
                            "read-only": "1",
                            "type": "SVGElementInstance"
                        },
                        {
                            "name": "previousSibling",
                            "read-only": "1",
                            "type": "SVGElementInstance"
                        }
                    ]
                }
            },
            {
                "name": "SVGElementInstanceList",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "item",
                            "type": "SVGElementInstance",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "length",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "SVGEllipseElement",
                "extends": "SVGGraphicsElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "none inherit",
                            "name": "clip-path",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "nonzero evenodd inherit",
                            "name": "clip-rule",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "inherit initial",
                            "name": "color",
                            "value-syntax": "css_color"
                        },
                        {
                            "enum-values": "auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit",
                            "name": "cursor",
                            "value-syntax": "comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"
                        },
                        {
                            "enum-values": "inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit initial",
                            "name": "display",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none currentColor inherit",
                            "name": "fill",
                            "value-syntax": "svg_paint_or_css_color"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "fill-opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "nonzero evenodd inherit",
                            "name": "fill-rule",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "filter",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "mask",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "inherit initial",
                            "name": "opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "auto none visiblePainted visibleFill visibleStroke visible painted fill stroke all inherit initial",
                            "name": "pointer-events",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none currentColor inherit",
                            "name": "stroke",
                            "value-syntax": "svg_paint_or_css_color"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "stroke-dasharray",
                            "value-syntax": "comma_or_space_separated_css_percentage_or_length"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-dashoffset",
                            "value-syntax": "css_percentage_or_length"
                        },
                        {
                            "enum-values": "butt round square inherit",
                            "name": "stroke-linecap",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "miter round bevel inherit",
                            "name": "stroke-linejoin",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-miterlimit",
                            "value-syntax": "1_or_greater_floating_point_number"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-width",
                            "value-syntax": "css_percentage_or_length"
                        },
                        {
                            "enum-values": "visible hidden collapse inherit initial",
                            "name": "visibility",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "ellipse",
                        "namespace": "SVG"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "cx",
                            "content-attribute": "cx",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "cy",
                            "content-attribute": "cy",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "rx",
                            "content-attribute": "rx",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "ry",
                            "content-attribute": "ry",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        }
                    ]
                }
            },
            {
                "name": "SVGFEBlendElement",
                "extends": "SVGElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "linearRGB auto sRGB inherit",
                            "name": "color-interpolation-filters",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "constants": {
                    "constant": [
                        {
                            "name": "SVG_FEBLEND_MODE_COLOR",
                            "type": "unsigned short",
                            "value": [
                                "15"
                            ]
                        },
                        {
                            "name": "SVG_FEBLEND_MODE_COLOR_BURN",
                            "type": "unsigned short",
                            "value": [
                                "8"
                            ]
                        },
                        {
                            "name": "SVG_FEBLEND_MODE_COLOR_DODGE",
                            "type": "unsigned short",
                            "value": [
                                "7"
                            ]
                        },
                        {
                            "name": "SVG_FEBLEND_MODE_DARKEN",
                            "type": "unsigned short",
                            "value": [
                                "4"
                            ]
                        },
                        {
                            "name": "SVG_FEBLEND_MODE_DIFFERENCE",
                            "type": "unsigned short",
                            "value": [
                                "11"
                            ]
                        },
                        {
                            "name": "SVG_FEBLEND_MODE_EXCLUSION",
                            "type": "unsigned short",
                            "value": [
                                "12"
                            ]
                        },
                        {
                            "name": "SVG_FEBLEND_MODE_HARD_LIGHT",
                            "type": "unsigned short",
                            "value": [
                                "9"
                            ]
                        },
                        {
                            "name": "SVG_FEBLEND_MODE_HUE",
                            "type": "unsigned short",
                            "value": [
                                "13"
                            ]
                        },
                        {
                            "name": "SVG_FEBLEND_MODE_LIGHTEN",
                            "type": "unsigned short",
                            "value": [
                                "5"
                            ]
                        },
                        {
                            "name": "SVG_FEBLEND_MODE_LUMINOSITY",
                            "type": "unsigned short",
                            "value": [
                                "16"
                            ]
                        },
                        {
                            "name": "SVG_FEBLEND_MODE_MULTIPLY",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "SVG_FEBLEND_MODE_NORMAL",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "SVG_FEBLEND_MODE_OVERLAY",
                            "type": "unsigned short",
                            "value": [
                                "6"
                            ]
                        },
                        {
                            "name": "SVG_FEBLEND_MODE_SATURATION",
                            "type": "unsigned short",
                            "value": [
                                "14"
                            ]
                        },
                        {
                            "name": "SVG_FEBLEND_MODE_SCREEN",
                            "type": "unsigned short",
                            "value": [
                                "3"
                            ]
                        },
                        {
                            "name": "SVG_FEBLEND_MODE_SOFT_LIGHT",
                            "type": "unsigned short",
                            "value": [
                                "10"
                            ]
                        },
                        {
                            "name": "SVG_FEBLEND_MODE_UNKNOWN",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        }
                    ]
                },
                "element": [
                    {
                        "name": "feBlend",
                        "namespace": "SVG"
                    }
                ],
                "implements": [
                    "SVGFilterPrimitiveStandardAttributes"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "in1",
                            "content-attribute": "in",
                            "content-attribute-enum-values": "SourceGraphic SourceAlpha BackgroundImage BackgroundAlpha FillPaint StrokePaint",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "filter_result_ref",
                            "read-only": "1",
                            "type": "SVGAnimatedString"
                        },
                        {
                            "name": "in2",
                            "content-attribute": "in2",
                            "content-attribute-enum-values": "SourceGraphic SourceAlpha BackgroundImage BackgroundAlpha FillPaint StrokePaint",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "filter_result_ref",
                            "read-only": "1",
                            "type": "SVGAnimatedString"
                        },
                        {
                            "name": "mode",
                            "content-attribute": "mode",
                            "content-attribute-enum-values": "normal multiply screen darken lighten",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "read-only": "1",
                            "type": "SVGAnimatedEnumeration"
                        }
                    ]
                }
            },
            {
                "name": "SVGFEColorMatrixElement",
                "extends": "SVGElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "linearRGB auto sRGB inherit",
                            "name": "color-interpolation-filters",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "constants": {
                    "constant": [
                        {
                            "name": "SVG_FECOLORMATRIX_TYPE_HUEROTATE",
                            "type": "unsigned short",
                            "value": [
                                "3"
                            ]
                        },
                        {
                            "name": "SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA",
                            "type": "unsigned short",
                            "value": [
                                "4"
                            ]
                        },
                        {
                            "name": "SVG_FECOLORMATRIX_TYPE_MATRIX",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "SVG_FECOLORMATRIX_TYPE_SATURATE",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "SVG_FECOLORMATRIX_TYPE_UNKNOWN",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        }
                    ]
                },
                "element": [
                    {
                        "name": "feColorMatrix",
                        "namespace": "SVG"
                    }
                ],
                "implements": [
                    "SVGFilterPrimitiveStandardAttributes"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "in1",
                            "content-attribute": "in",
                            "content-attribute-enum-values": "SourceGraphic SourceAlpha BackgroundImage BackgroundAlpha FillPaint StrokePaint",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "filter_result_ref",
                            "read-only": "1",
                            "type": "SVGAnimatedString"
                        },
                        {
                            "name": "type",
                            "content-attribute": "type",
                            "content-attribute-enum-values": "matrix saturate hueRotate luminanceToAlpha",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "read-only": "1",
                            "type": "SVGAnimatedEnumeration"
                        },
                        {
                            "name": "values",
                            "content-attribute": "values",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_5x5_matrix_values_or_single_floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumberList"
                        }
                    ]
                }
            },
            {
                "name": "SVGFEComponentTransferElement",
                "extends": "SVGElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "linearRGB auto sRGB inherit",
                            "name": "color-interpolation-filters",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "feComponentTransfer",
                        "namespace": "SVG"
                    }
                ],
                "implements": [
                    "SVGFilterPrimitiveStandardAttributes"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "in1",
                            "content-attribute": "in",
                            "content-attribute-enum-values": "SourceGraphic SourceAlpha BackgroundImage BackgroundAlpha FillPaint StrokePaint",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "filter_result_ref",
                            "read-only": "1",
                            "type": "SVGAnimatedString"
                        }
                    ]
                }
            },
            {
                "name": "SVGFECompositeElement",
                "extends": "SVGElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "linearRGB auto sRGB inherit",
                            "name": "color-interpolation-filters",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "constants": {
                    "constant": [
                        {
                            "name": "SVG_FECOMPOSITE_OPERATOR_ARITHMETIC",
                            "type": "unsigned short",
                            "value": [
                                "6"
                            ]
                        },
                        {
                            "name": "SVG_FECOMPOSITE_OPERATOR_ATOP",
                            "type": "unsigned short",
                            "value": [
                                "4"
                            ]
                        },
                        {
                            "name": "SVG_FECOMPOSITE_OPERATOR_IN",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "SVG_FECOMPOSITE_OPERATOR_OUT",
                            "type": "unsigned short",
                            "value": [
                                "3"
                            ]
                        },
                        {
                            "name": "SVG_FECOMPOSITE_OPERATOR_OVER",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "SVG_FECOMPOSITE_OPERATOR_UNKNOWN",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        },
                        {
                            "name": "SVG_FECOMPOSITE_OPERATOR_XOR",
                            "type": "unsigned short",
                            "value": [
                                "5"
                            ]
                        }
                    ]
                },
                "element": [
                    {
                        "name": "feComposite",
                        "namespace": "SVG"
                    }
                ],
                "implements": [
                    "SVGFilterPrimitiveStandardAttributes"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "in1",
                            "content-attribute": "in",
                            "content-attribute-enum-values": "SourceGraphic SourceAlpha BackgroundImage BackgroundAlpha FillPaint StrokePaint",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "filter_result_ref",
                            "read-only": "1",
                            "type": "SVGAnimatedString"
                        },
                        {
                            "name": "in2",
                            "content-attribute": "in2",
                            "content-attribute-enum-values": "SourceGraphic SourceAlpha BackgroundImage BackgroundAlpha FillPaint StrokePaint",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "filter_result_ref",
                            "read-only": "1",
                            "type": "SVGAnimatedString"
                        },
                        {
                            "name": "k1",
                            "content-attribute": "k1",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "k2",
                            "content-attribute": "k2",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "k3",
                            "content-attribute": "k3",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "k4",
                            "content-attribute": "k4",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "operator",
                            "content-attribute": "operator",
                            "content-attribute-enum-values": "over in out atop xor arithmetic",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "read-only": "1",
                            "type": "SVGAnimatedEnumeration"
                        }
                    ]
                }
            },
            {
                "name": "SVGFEConvolveMatrixElement",
                "extends": "SVGElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "linearRGB auto sRGB inherit",
                            "name": "color-interpolation-filters",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "constants": {
                    "constant": [
                        {
                            "name": "SVG_EDGEMODE_DUPLICATE",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "SVG_EDGEMODE_NONE",
                            "type": "unsigned short",
                            "value": [
                                "3"
                            ]
                        },
                        {
                            "name": "SVG_EDGEMODE_UNKNOWN",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        },
                        {
                            "name": "SVG_EDGEMODE_WRAP",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        }
                    ]
                },
                "element": [
                    {
                        "name": "feConvolveMatrix",
                        "namespace": "SVG"
                    }
                ],
                "implements": [
                    "SVGFilterPrimitiveStandardAttributes"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "bias",
                            "content-attribute": "bias",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "divisor",
                            "content-attribute": "divisor",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "edgeMode",
                            "content-attribute": "edgeMode",
                            "content-attribute-enum-values": "duplicate wrap none",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "read-only": "1",
                            "type": "SVGAnimatedEnumeration"
                        },
                        {
                            "name": "in1",
                            "content-attribute": "in",
                            "content-attribute-enum-values": "SourceGraphic SourceAlpha BackgroundImage BackgroundAlpha FillPaint StrokePaint",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "filter_result_ref",
                            "read-only": "1",
                            "type": "SVGAnimatedString"
                        },
                        {
                            "name": "kernelMatrix",
                            "content-attribute": "kernelMatrix",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "comma_or_space_separated_floating_point_numbers",
                            "read-only": "1",
                            "type": "SVGAnimatedNumberList"
                        },
                        {
                            "name": "kernelUnitLengthX",
                            "content-attribute": "kernelUnitLength",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_x_y_pair",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "kernelUnitLengthY",
                            "content-attribute": "kernelUnitLength",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_x_y_pair",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "orderX",
                            "content-attribute": "order",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_x_y_pair",
                            "read-only": "1",
                            "type": "SVGAnimatedInteger"
                        },
                        {
                            "name": "orderY",
                            "content-attribute": "order",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_x_y_pair",
                            "read-only": "1",
                            "type": "SVGAnimatedInteger"
                        },
                        {
                            "name": "preserveAlpha",
                            "content-attribute": "preserveAlpha",
                            "content-attribute-enum-values": "false true",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "read-only": "1",
                            "type": "SVGAnimatedBoolean"
                        },
                        {
                            "name": "targetX",
                            "content-attribute": "targetX",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "signed_integer",
                            "read-only": "1",
                            "type": "SVGAnimatedInteger"
                        },
                        {
                            "name": "targetY",
                            "content-attribute": "targetY",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "signed_integer",
                            "read-only": "1",
                            "type": "SVGAnimatedInteger"
                        }
                    ]
                }
            },
            {
                "name": "SVGFEDiffuseLightingElement",
                "extends": "SVGElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "inherit initial",
                            "name": "color",
                            "value-syntax": "css_color"
                        },
                        {
                            "enum-values": "linearRGB auto sRGB inherit",
                            "name": "color-interpolation-filters",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "currentColor inherit initial",
                            "name": "lighting-color",
                            "value-syntax": "css_color"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "feDiffuseLighting",
                        "namespace": "SVG"
                    }
                ],
                "implements": [
                    "SVGFilterPrimitiveStandardAttributes"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "diffuseConstant",
                            "content-attribute": "diffuseConstant",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "in1",
                            "content-attribute": "in",
                            "content-attribute-enum-values": "SourceGraphic SourceAlpha BackgroundImage BackgroundAlpha FillPaint StrokePaint",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "filter_result_ref",
                            "read-only": "1",
                            "type": "SVGAnimatedString"
                        },
                        {
                            "name": "kernelUnitLengthX",
                            "content-attribute": "kernelUnitLength",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_x_y_pair",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "kernelUnitLengthY",
                            "content-attribute": "kernelUnitLength",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_x_y_pair",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "surfaceScale",
                            "content-attribute": "surfaceScale",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        }
                    ]
                }
            },
            {
                "name": "SVGFEDisplacementMapElement",
                "extends": "SVGElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "linearRGB auto sRGB inherit",
                            "name": "color-interpolation-filters",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "constants": {
                    "constant": [
                        {
                            "name": "SVG_CHANNEL_A",
                            "type": "unsigned short",
                            "value": [
                                "4"
                            ]
                        },
                        {
                            "name": "SVG_CHANNEL_B",
                            "type": "unsigned short",
                            "value": [
                                "3"
                            ]
                        },
                        {
                            "name": "SVG_CHANNEL_G",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "SVG_CHANNEL_R",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "SVG_CHANNEL_UNKNOWN",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        }
                    ]
                },
                "element": [
                    {
                        "name": "feDisplacementMap",
                        "namespace": "SVG"
                    }
                ],
                "implements": [
                    "SVGFilterPrimitiveStandardAttributes"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "in1",
                            "content-attribute": "in",
                            "content-attribute-enum-values": "SourceGraphic SourceAlpha BackgroundImage BackgroundAlpha FillPaint StrokePaint",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "filter_result_ref",
                            "read-only": "1",
                            "type": "SVGAnimatedString"
                        },
                        {
                            "name": "in2",
                            "content-attribute": "in2",
                            "content-attribute-enum-values": "SourceGraphic SourceAlpha BackgroundImage BackgroundAlpha FillPaint StrokePaint",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "filter_result_ref",
                            "read-only": "1",
                            "type": "SVGAnimatedString"
                        },
                        {
                            "name": "scale",
                            "content-attribute": "scale",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "xChannelSelector",
                            "content-attribute": "xChannelSelector",
                            "content-attribute-enum-values": "A R G B",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "read-only": "1",
                            "type": "SVGAnimatedEnumeration"
                        },
                        {
                            "name": "yChannelSelector",
                            "content-attribute": "yChannelSelector",
                            "content-attribute-enum-values": "A R G B",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "read-only": "1",
                            "type": "SVGAnimatedEnumeration"
                        }
                    ]
                }
            },
            {
                "name": "SVGFEDistantLightElement",
                "extends": "SVGElement",
                "element": [
                    {
                        "name": "feDistantLight",
                        "namespace": "SVG"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "azimuth",
                            "content-attribute": "azimuth",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "elevation",
                            "content-attribute": "elevation",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        }
                    ]
                }
            },
            {
                "name": "SVGFEFloodElement",
                "extends": "SVGElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "inherit initial",
                            "name": "color",
                            "value-syntax": "css_color"
                        },
                        {
                            "enum-values": "linearRGB auto sRGB inherit",
                            "name": "color-interpolation-filters",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "currentColor inherit initial",
                            "name": "flood-color",
                            "value-syntax": "css_color"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "flood-opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "feFlood",
                        "namespace": "SVG"
                    }
                ],
                "implements": [
                    "SVGFilterPrimitiveStandardAttributes"
                ]
            },
            {
                "name": "SVGFEFuncAElement",
                "extends": "SVGComponentTransferFunctionElement",
                "element": [
                    {
                        "name": "feFuncA",
                        "namespace": "SVG"
                    }
                ]
            },
            {
                "name": "SVGFEFuncBElement",
                "extends": "SVGComponentTransferFunctionElement",
                "element": [
                    {
                        "name": "feFuncB",
                        "namespace": "SVG"
                    }
                ]
            },
            {
                "name": "SVGFEFuncGElement",
                "extends": "SVGComponentTransferFunctionElement",
                "element": [
                    {
                        "name": "feFuncG",
                        "namespace": "SVG"
                    }
                ]
            },
            {
                "name": "SVGFEFuncRElement",
                "extends": "SVGComponentTransferFunctionElement",
                "element": [
                    {
                        "name": "feFuncR",
                        "namespace": "SVG"
                    }
                ]
            },
            {
                "name": "SVGFEGaussianBlurElement",
                "extends": "SVGElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "linearRGB auto sRGB inherit",
                            "name": "color-interpolation-filters",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "feGaussianBlur",
                        "namespace": "SVG"
                    }
                ],
                "implements": [
                    "SVGFilterPrimitiveStandardAttributes"
                ],
                "methods": {
                    "method": [
                        {
                            "name": "setStdDeviation",
                            "type": "void",
                            "param": [
                                {
                                    "name": "stdDeviationX",
                                    "type": "float"
                                },
                                {
                                    "name": "stdDeviationY",
                                    "type": "float"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "in1",
                            "content-attribute": "in",
                            "content-attribute-enum-values": "SourceGraphic SourceAlpha BackgroundImage BackgroundAlpha FillPaint StrokePaint",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "filter_result_ref",
                            "read-only": "1",
                            "type": "SVGAnimatedString"
                        },
                        {
                            "name": "stdDeviationX",
                            "content-attribute": "stdDeviation",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "stdDeviationY",
                            "content-attribute": "stdDeviation",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        }
                    ]
                }
            },
            {
                "name": "SVGFEImageElement",
                "extends": "SVGElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "false true",
                            "name": "externalResourcesRequired",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "default preserve",
                            "name": "xml:space",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "linearRGB auto sRGB inherit",
                            "name": "color-interpolation-filters",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "feImage",
                        "namespace": "SVG"
                    }
                ],
                "implements": [
                    "SVGFilterPrimitiveStandardAttributes",
                    "SVGURIReference"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "preserveAspectRatio",
                            "read-only": "1",
                            "type": "SVGAnimatedPreserveAspectRatio"
                        }
                    ]
                }
            },
            {
                "name": "SVGFEMergeElement",
                "extends": "SVGElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "linearRGB auto sRGB inherit",
                            "name": "color-interpolation-filters",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "feMerge",
                        "namespace": "SVG"
                    }
                ],
                "implements": [
                    "SVGFilterPrimitiveStandardAttributes"
                ]
            },
            {
                "name": "SVGFEMergeNodeElement",
                "extends": "SVGElement",
                "element": [
                    {
                        "name": "feMergeNode",
                        "namespace": "SVG"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "in1",
                            "content-attribute": "in",
                            "content-attribute-enum-values": "SourceGraphic SourceAlpha BackgroundImage BackgroundAlpha FillPaint StrokePaint",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "filter_result_ref",
                            "read-only": "1",
                            "type": "SVGAnimatedString"
                        }
                    ]
                }
            },
            {
                "name": "SVGFEMorphologyElement",
                "extends": "SVGElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "linearRGB auto sRGB inherit",
                            "name": "color-interpolation-filters",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "constants": {
                    "constant": [
                        {
                            "name": "SVG_MORPHOLOGY_OPERATOR_DILATE",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "SVG_MORPHOLOGY_OPERATOR_ERODE",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "SVG_MORPHOLOGY_OPERATOR_UNKNOWN",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        }
                    ]
                },
                "element": [
                    {
                        "name": "feMorphology",
                        "namespace": "SVG"
                    }
                ],
                "implements": [
                    "SVGFilterPrimitiveStandardAttributes"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "in1",
                            "content-attribute": "in",
                            "content-attribute-enum-values": "SourceGraphic SourceAlpha BackgroundImage BackgroundAlpha FillPaint StrokePaint",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "filter_result_ref",
                            "read-only": "1",
                            "type": "SVGAnimatedString"
                        },
                        {
                            "name": "operator",
                            "content-attribute": "operator",
                            "content-attribute-enum-values": "erode dilate",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "read-only": "1",
                            "type": "SVGAnimatedEnumeration"
                        },
                        {
                            "name": "radiusX",
                            "content-attribute": "radius",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_x_y_pair",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "radiusY",
                            "content-attribute": "radius",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_x_y_pair",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        }
                    ]
                }
            },
            {
                "name": "SVGFEOffsetElement",
                "extends": "SVGElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "linearRGB auto sRGB inherit",
                            "name": "color-interpolation-filters",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "feOffset",
                        "namespace": "SVG"
                    }
                ],
                "implements": [
                    "SVGFilterPrimitiveStandardAttributes"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "dx",
                            "content-attribute": "dx",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "dy",
                            "content-attribute": "dy",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "in1",
                            "content-attribute": "in",
                            "content-attribute-enum-values": "SourceGraphic SourceAlpha BackgroundImage BackgroundAlpha FillPaint StrokePaint",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "filter_result_ref",
                            "read-only": "1",
                            "type": "SVGAnimatedString"
                        }
                    ]
                }
            },
            {
                "name": "SVGFEPointLightElement",
                "extends": "SVGElement",
                "element": [
                    {
                        "name": "fePointLight",
                        "namespace": "SVG"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "x",
                            "content-attribute": "x",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "y",
                            "content-attribute": "y",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "z",
                            "content-attribute": "z",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        }
                    ]
                }
            },
            {
                "name": "SVGFESpecularLightingElement",
                "extends": "SVGElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "inherit initial",
                            "name": "color",
                            "value-syntax": "css_color"
                        },
                        {
                            "enum-values": "linearRGB auto sRGB inherit",
                            "name": "color-interpolation-filters",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "currentColor inherit initial",
                            "name": "lighting-color",
                            "value-syntax": "css_color"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "feSpecularLighting",
                        "namespace": "SVG"
                    }
                ],
                "implements": [
                    "SVGFilterPrimitiveStandardAttributes"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "in1",
                            "content-attribute": "in",
                            "content-attribute-enum-values": "SourceGraphic SourceAlpha BackgroundImage BackgroundAlpha FillPaint StrokePaint",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "filter_result_ref",
                            "read-only": "1",
                            "type": "SVGAnimatedString"
                        },
                        {
                            "name": "kernelUnitLengthX",
                            "content-attribute": "kernelUnitLength",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_x_y_pair",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "kernelUnitLengthY",
                            "content-attribute": "kernelUnitLength",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_x_y_pair",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "specularConstant",
                            "content-attribute": "specularConstant",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "specularExponent",
                            "content-attribute": "specularExponent",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "surfaceScale",
                            "content-attribute": "surfaceScale",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        }
                    ]
                }
            },
            {
                "name": "SVGFESpotLightElement",
                "extends": "SVGElement",
                "element": [
                    {
                        "name": "feSpotLight",
                        "namespace": "SVG"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "limitingConeAngle",
                            "content-attribute": "limitingConeAngle",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "pointsAtX",
                            "content-attribute": "pointsAtX",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "pointsAtY",
                            "content-attribute": "pointsAtY",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "pointsAtZ",
                            "content-attribute": "pointsAtZ",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "specularExponent",
                            "content-attribute": "specularExponent",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "x",
                            "content-attribute": "x",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "y",
                            "content-attribute": "y",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "z",
                            "content-attribute": "z",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        }
                    ]
                }
            },
            {
                "name": "SVGFETileElement",
                "extends": "SVGElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "linearRGB auto sRGB inherit",
                            "name": "color-interpolation-filters",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "feTile",
                        "namespace": "SVG"
                    }
                ],
                "implements": [
                    "SVGFilterPrimitiveStandardAttributes"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "in1",
                            "content-attribute": "in",
                            "content-attribute-enum-values": "SourceGraphic SourceAlpha BackgroundImage BackgroundAlpha FillPaint StrokePaint",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "filter_result_ref",
                            "read-only": "1",
                            "type": "SVGAnimatedString"
                        }
                    ]
                }
            },
            {
                "name": "SVGFETurbulenceElement",
                "extends": "SVGElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "linearRGB auto sRGB inherit",
                            "name": "color-interpolation-filters",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "constants": {
                    "constant": [
                        {
                            "name": "SVG_STITCHTYPE_NOSTITCH",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "SVG_STITCHTYPE_STITCH",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "SVG_STITCHTYPE_UNKNOWN",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        },
                        {
                            "name": "SVG_TURBULENCE_TYPE_FRACTALNOISE",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "SVG_TURBULENCE_TYPE_TURBULENCE",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "SVG_TURBULENCE_TYPE_UNKNOWN",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        }
                    ]
                },
                "element": [
                    {
                        "name": "feTurbulence",
                        "namespace": "SVG"
                    }
                ],
                "implements": [
                    "SVGFilterPrimitiveStandardAttributes"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "baseFrequencyX",
                            "content-attribute": "baseFrequency",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_x_y_pair",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "baseFrequencyY",
                            "content-attribute": "baseFrequency",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_x_y_pair",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "numOctaves",
                            "content-attribute": "numOctaves",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "signed_integer",
                            "read-only": "1",
                            "type": "SVGAnimatedInteger"
                        },
                        {
                            "name": "seed",
                            "content-attribute": "seed",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        },
                        {
                            "name": "stitchTiles",
                            "content-attribute": "stitchTiles",
                            "content-attribute-enum-values": "noStitch stitch",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "read-only": "1",
                            "type": "SVGAnimatedEnumeration"
                        },
                        {
                            "name": "type",
                            "content-attribute": "type",
                            "content-attribute-enum-values": "turbulence fractalNoise",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "read-only": "1",
                            "type": "SVGAnimatedEnumeration"
                        }
                    ]
                }
            },
            {
                "name": "SVGFilterElement",
                "extends": "SVGElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "default preserve",
                            "name": "xml:space",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "false true",
                            "name": "externalResourcesRequired",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "filter",
                        "namespace": "SVG"
                    }
                ],
                "implements": [
                    "SVGUnitTypes",
                    "SVGURIReference"
                ],
                "methods": {
                    "method": [
                        {
                            "name": "setFilterRes",
                            "type": "void",
                            "param": [
                                {
                                    "name": "filterResX",
                                    "type": "unsigned long"
                                },
                                {
                                    "name": "filterResY",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "filterResX",
                            "content-attribute": "filterRes",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_x_y_pair",
                            "read-only": "1",
                            "type": "SVGAnimatedInteger"
                        },
                        {
                            "name": "filterResY",
                            "content-attribute": "filterRes",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_x_y_pair",
                            "read-only": "1",
                            "type": "SVGAnimatedInteger"
                        },
                        {
                            "name": "filterUnits",
                            "content-attribute": "filterUnits",
                            "content-attribute-enum-values": "objectBoundingBox userSpaceOnUse",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "read-only": "1",
                            "type": "SVGAnimatedEnumeration"
                        },
                        {
                            "name": "height",
                            "content-attribute": "height",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "primitiveUnits",
                            "content-attribute": "primitiveUnits",
                            "content-attribute-enum-values": "userSpaceOnUse objectBoundingBox",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "read-only": "1",
                            "type": "SVGAnimatedEnumeration"
                        },
                        {
                            "name": "width",
                            "content-attribute": "width",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "x",
                            "content-attribute": "x",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "y",
                            "content-attribute": "y",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        }
                    ]
                }
            },
            {
                "name": "SVGForeignObjectElement",
                "extends": "SVGGraphicsElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "auto inherit",
                            "name": "clip",
                            "value-syntax": "css_shape_rect"
                        },
                        {
                            "enum-values": "inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit initial",
                            "name": "display",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "visible hidden scroll auto inherit",
                            "name": "overflow",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "foreignObject",
                        "namespace": "SVG"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "height",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "width",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "x",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "y",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        }
                    ]
                }
            },
            {
                "name": "SVGGElement",
                "extends": "SVGGraphicsElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "none inherit",
                            "name": "clip-path",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit",
                            "name": "cursor",
                            "value-syntax": "comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"
                        },
                        {
                            "enum-values": "inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit initial",
                            "name": "display",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "accumulate inherit",
                            "name": "enable-background",
                            "value-syntax": "svg_enum_new_followed_by_svg_viewbox"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "filter",
                            "value-syntax": "css_url_of_local_id_ref"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "g",
                        "namespace": "SVG"
                    }
                ]
            },
            {
                "name": "SVGGradientElement",
                "extends": "SVGElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "false true",
                            "name": "externalResourcesRequired",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "constants": {
                    "constant": [
                        {
                            "name": "SVG_SPREADMETHOD_PAD",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "SVG_SPREADMETHOD_REFLECT",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "SVG_SPREADMETHOD_REPEAT",
                            "type": "unsigned short",
                            "value": [
                                "3"
                            ]
                        },
                        {
                            "name": "SVG_SPREADMETHOD_UNKNOWN",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        }
                    ]
                },
                "implements": [
                    "SVGUnitTypes",
                    "SVGURIReference"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "gradientTransform",
                            "content-attribute": "gradientTransform",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_transform_list",
                            "read-only": "1",
                            "type": "SVGAnimatedTransformList"
                        },
                        {
                            "name": "gradientUnits",
                            "content-attribute": "gradientUnits",
                            "content-attribute-enum-values": "objectBoundingBox userSpaceOnUse",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "read-only": "1",
                            "type": "SVGAnimatedEnumeration"
                        },
                        {
                            "name": "spreadMethod",
                            "content-attribute": "spreadMethod",
                            "content-attribute-enum-values": "pad reflect repeat",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "read-only": "1",
                            "type": "SVGAnimatedEnumeration"
                        }
                    ]
                }
            },
            {
                "name": "SVGGraphicsElement",
                "extends": "SVGElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "default preserve",
                            "name": "xml:space",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "false true",
                            "name": "externalResourcesRequired",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "implements": [
                    "SVGTests"
                ],
                "methods": {
                    "method": [
                        {
                            "name": "getBBox",
                            "type": "SVGRect"
                        },
                        {
                            "name": "getCTM",
                            "type": "SVGMatrix"
                        },
                        {
                            "name": "getScreenCTM",
                            "type": "SVGMatrix"
                        },
                        {
                            "name": "getTransformToElement",
                            "type": "SVGMatrix",
                            "param": [
                                {
                                    "name": "element",
                                    "type": "SVGElement"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "farthestViewportElement",
                            "read-only": "1",
                            "type": "SVGElement"
                        },
                        {
                            "name": "nearestViewportElement",
                            "read-only": "1",
                            "type": "SVGElement"
                        },
                        {
                            "name": "transform",
                            "content-attribute": "transform",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_transform_list",
                            "read-only": "1",
                            "same-object": "1",
                            "type": "SVGAnimatedTransformList"
                        }
                    ]
                }
            },
            {
                "name": "SVGImageElement",
                "extends": "SVGGraphicsElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "auto inherit",
                            "name": "clip",
                            "value-syntax": "css_shape_rect"
                        },
                        {
                            "enum-values": "visible hidden scroll auto inherit",
                            "name": "overflow",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "clip-path",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit",
                            "name": "cursor",
                            "value-syntax": "comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "image",
                        "namespace": "SVG"
                    }
                ],
                "events": {
                    "event": [
                        {
                            "name": "SVGAbort",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "type": "Event"
                        },
                        {
                            "name": "SVGError",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "type": "Event"
                        },
                        {
                            "name": "error",
                            "bubbles": "1",
                            "dispatch": "async",
                            "tags": "IEOnly",
                            "type": "Event"
                        }
                    ]
                },
                "implements": [
                    "SVGURIReference"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "height",
                            "content-attribute": "height",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "preserveAspectRatio",
                            "content-attribute": "preserveAspectRatio",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_aspect_ratio",
                            "read-only": "1",
                            "type": "SVGAnimatedPreserveAspectRatio"
                        },
                        {
                            "name": "width",
                            "content-attribute": "width",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "x",
                            "content-attribute": "x",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "y",
                            "content-attribute": "y",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        }
                    ]
                }
            },
            {
                "name": "SVGLength",
                "extends": "Object",
                "constants": {
                    "constant": [
                        {
                            "name": "SVG_LENGTHTYPE_CM",
                            "type": "unsigned short",
                            "value": [
                                "6"
                            ]
                        },
                        {
                            "name": "SVG_LENGTHTYPE_EMS",
                            "type": "unsigned short",
                            "value": [
                                "3"
                            ]
                        },
                        {
                            "name": "SVG_LENGTHTYPE_EXS",
                            "type": "unsigned short",
                            "value": [
                                "4"
                            ]
                        },
                        {
                            "name": "SVG_LENGTHTYPE_IN",
                            "type": "unsigned short",
                            "value": [
                                "8"
                            ]
                        },
                        {
                            "name": "SVG_LENGTHTYPE_MM",
                            "type": "unsigned short",
                            "value": [
                                "7"
                            ]
                        },
                        {
                            "name": "SVG_LENGTHTYPE_NUMBER",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "SVG_LENGTHTYPE_PC",
                            "type": "unsigned short",
                            "value": [
                                "10"
                            ]
                        },
                        {
                            "name": "SVG_LENGTHTYPE_PERCENTAGE",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "SVG_LENGTHTYPE_PT",
                            "type": "unsigned short",
                            "value": [
                                "9"
                            ]
                        },
                        {
                            "name": "SVG_LENGTHTYPE_PX",
                            "type": "unsigned short",
                            "value": [
                                "5"
                            ]
                        },
                        {
                            "name": "SVG_LENGTHTYPE_UNKNOWN",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "convertToSpecifiedUnits",
                            "type": "void",
                            "param": [
                                {
                                    "name": "unitType",
                                    "type": "unsigned short"
                                }
                            ]
                        },
                        {
                            "name": "newValueSpecifiedUnits",
                            "type": "void",
                            "param": [
                                {
                                    "name": "unitType",
                                    "type": "unsigned short"
                                },
                                {
                                    "name": "valueInSpecifiedUnits",
                                    "type": "float"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "unitType",
                            "read-only": "1",
                            "type": "unsigned short"
                        },
                        {
                            "name": "value",
                            "type": "float"
                        },
                        {
                            "name": "valueAsString",
                            "type": "DOMString"
                        },
                        {
                            "name": "valueInSpecifiedUnits",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "SVGLengthList",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "appendItem",
                            "type": "SVGLength",
                            "param": [
                                {
                                    "name": "newItem",
                                    "type": "SVGLength"
                                }
                            ]
                        },
                        {
                            "name": "clear",
                            "type": "void"
                        },
                        {
                            "name": "getItem",
                            "type": "SVGLength",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "initialize",
                            "type": "SVGLength",
                            "param": [
                                {
                                    "name": "newItem",
                                    "type": "SVGLength"
                                }
                            ]
                        },
                        {
                            "name": "insertItemBefore",
                            "type": "SVGLength",
                            "param": [
                                {
                                    "name": "newItem",
                                    "type": "SVGLength"
                                },
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "removeItem",
                            "type": "SVGLength",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "replaceItem",
                            "type": "SVGLength",
                            "param": [
                                {
                                    "name": "newItem",
                                    "type": "SVGLength"
                                },
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "numberOfItems",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "SVGLinearGradientElement",
                "extends": "SVGGradientElement",
                "element": [
                    {
                        "name": "linearGradient",
                        "namespace": "SVG"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "x1",
                            "content-attribute": "x1",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "x2",
                            "content-attribute": "x2",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "y1",
                            "content-attribute": "y1",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "y2",
                            "content-attribute": "y2",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        }
                    ]
                }
            },
            {
                "name": "SVGLineElement",
                "extends": "SVGGraphicsElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "none inherit",
                            "name": "clip-path",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "nonzero evenodd inherit",
                            "name": "clip-rule",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "inherit initial",
                            "name": "color",
                            "value-syntax": "css_color"
                        },
                        {
                            "enum-values": "auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit",
                            "name": "cursor",
                            "value-syntax": "comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"
                        },
                        {
                            "enum-values": "inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit initial",
                            "name": "display",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none currentColor inherit",
                            "name": "fill",
                            "value-syntax": "svg_paint_or_css_color"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "fill-opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "nonzero evenodd inherit",
                            "name": "fill-rule",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "filter",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "marker",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "marker-end",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "marker-mid",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "marker-start",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "mask",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "inherit initial",
                            "name": "opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "auto none visiblePainted visibleFill visibleStroke visible painted fill stroke all inherit initial",
                            "name": "pointer-events",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none currentColor inherit",
                            "name": "stroke",
                            "value-syntax": "svg_paint_or_css_color"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "stroke-dasharray",
                            "value-syntax": "comma_or_space_separated_css_percentage_or_length"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-dashoffset",
                            "value-syntax": "css_percentage_or_length"
                        },
                        {
                            "enum-values": "butt round square inherit",
                            "name": "stroke-linecap",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "miter round bevel inherit",
                            "name": "stroke-linejoin",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-miterlimit",
                            "value-syntax": "1_or_greater_floating_point_number"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-width",
                            "value-syntax": "css_percentage_or_length"
                        },
                        {
                            "enum-values": "visible hidden collapse inherit initial",
                            "name": "visibility",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "line",
                        "namespace": "SVG"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "x1",
                            "content-attribute": "x1",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "x2",
                            "content-attribute": "x2",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "y1",
                            "content-attribute": "y1",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "y2",
                            "content-attribute": "y2",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        }
                    ]
                }
            },
            {
                "name": "SVGMarkerElement",
                "extends": "SVGElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "auto inherit",
                            "name": "clip",
                            "value-syntax": "css_shape_rect"
                        },
                        {
                            "enum-values": "visible hidden scroll auto inherit",
                            "name": "overflow",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "clip-path",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit",
                            "name": "cursor",
                            "value-syntax": "comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"
                        },
                        {
                            "enum-values": "accumulate inherit",
                            "name": "enable-background",
                            "value-syntax": "svg_enum_new_followed_by_svg_viewbox"
                        },
                        {
                            "enum-values": "false true",
                            "name": "externalResourcesRequired",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "filter",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "mask",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "inherit initial",
                            "name": "opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "default preserve",
                            "name": "xml:space",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "constants": {
                    "constant": [
                        {
                            "name": "SVG_MARKER_ORIENT_ANGLE",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "SVG_MARKER_ORIENT_AUTO",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "SVG_MARKER_ORIENT_UNKNOWN",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        },
                        {
                            "name": "SVG_MARKERUNITS_STROKEWIDTH",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "SVG_MARKERUNITS_UNKNOWN",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        },
                        {
                            "name": "SVG_MARKERUNITS_USERSPACEONUSE",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        }
                    ]
                },
                "element": [
                    {
                        "name": "marker",
                        "namespace": "SVG"
                    }
                ],
                "implements": [
                    "SVGFitToViewBox"
                ],
                "methods": {
                    "method": [
                        {
                            "name": "setOrientToAngle",
                            "type": "void",
                            "param": [
                                {
                                    "name": "angle",
                                    "type": "SVGAngle"
                                }
                            ]
                        },
                        {
                            "name": "setOrientToAuto",
                            "type": "void"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "markerHeight",
                            "content-attribute": "markerHeight",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "markerUnits",
                            "content-attribute": "markerUnits",
                            "content-attribute-enum-values": "strokeWidth userSpaceOnUse",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "read-only": "1",
                            "type": "SVGAnimatedEnumeration"
                        },
                        {
                            "name": "markerWidth",
                            "content-attribute": "markerWidth",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "orientAngle",
                            "content-attribute": "orient",
                            "content-attribute-enum-values": "auto",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedAngle"
                        },
                        {
                            "name": "orientType",
                            "content-attribute": "orient",
                            "content-attribute-enum-values": "auto",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedEnumeration"
                        },
                        {
                            "name": "refX",
                            "content-attribute": "refX",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "refY",
                            "content-attribute": "refY",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        }
                    ]
                }
            },
            {
                "name": "SVGMaskElement",
                "extends": "SVGElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "none inherit",
                            "name": "clip-path",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit",
                            "name": "cursor",
                            "value-syntax": "comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"
                        },
                        {
                            "enum-values": "accumulate inherit",
                            "name": "enable-background",
                            "value-syntax": "svg_enum_new_followed_by_svg_viewbox"
                        },
                        {
                            "enum-values": "false true",
                            "name": "externalResourcesRequired",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "filter",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "mask",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "inherit initial",
                            "name": "opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "default preserve",
                            "name": "xml:space",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "mask",
                        "namespace": "SVG"
                    }
                ],
                "implements": [
                    "SVGTests",
                    "SVGUnitTypes"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "height",
                            "content-attribute": "height",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "maskContentUnits",
                            "content-attribute": "maskContentUnits",
                            "content-attribute-enum-values": "userSpaceOnUse objectBoundingBox",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "read-only": "1",
                            "type": "SVGAnimatedEnumeration"
                        },
                        {
                            "name": "maskUnits",
                            "content-attribute": "maskUnits",
                            "content-attribute-enum-values": "objectBoundingBox userSpaceOnUse",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "read-only": "1",
                            "type": "SVGAnimatedEnumeration"
                        },
                        {
                            "name": "width",
                            "content-attribute": "width",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "x",
                            "content-attribute": "x",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "y",
                            "content-attribute": "y",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        }
                    ]
                }
            },
            {
                "name": "SVGMatrix",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "flipX",
                            "type": "SVGMatrix"
                        },
                        {
                            "name": "flipY",
                            "type": "SVGMatrix"
                        },
                        {
                            "name": "inverse",
                            "type": "SVGMatrix"
                        },
                        {
                            "name": "multiply",
                            "type": "SVGMatrix",
                            "param": [
                                {
                                    "name": "secondMatrix",
                                    "type": "SVGMatrix"
                                }
                            ]
                        },
                        {
                            "name": "rotate",
                            "type": "SVGMatrix",
                            "param": [
                                {
                                    "name": "angle",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "rotateFromVector",
                            "type": "SVGMatrix",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "scale",
                            "type": "SVGMatrix",
                            "param": [
                                {
                                    "name": "scaleFactor",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "scaleNonUniform",
                            "type": "SVGMatrix",
                            "param": [
                                {
                                    "name": "scaleFactorX",
                                    "type": "float"
                                },
                                {
                                    "name": "scaleFactorY",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "skewX",
                            "type": "SVGMatrix",
                            "param": [
                                {
                                    "name": "angle",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "skewY",
                            "type": "SVGMatrix",
                            "param": [
                                {
                                    "name": "angle",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "translate",
                            "type": "SVGMatrix",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "a",
                            "type": "float"
                        },
                        {
                            "name": "b",
                            "type": "float"
                        },
                        {
                            "name": "c",
                            "type": "float"
                        },
                        {
                            "name": "d",
                            "type": "float"
                        },
                        {
                            "name": "e",
                            "type": "float"
                        },
                        {
                            "name": "f",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "SVGMetadataElement",
                "extends": "SVGElement",
                "element": [
                    {
                        "name": "metadata",
                        "namespace": "SVG"
                    }
                ]
            },
            {
                "name": "SVGNumber",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "value",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "SVGNumberList",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "appendItem",
                            "type": "SVGNumber",
                            "param": [
                                {
                                    "name": "newItem",
                                    "type": "SVGNumber"
                                }
                            ]
                        },
                        {
                            "name": "clear",
                            "type": "void"
                        },
                        {
                            "name": "getItem",
                            "type": "SVGNumber",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "initialize",
                            "type": "SVGNumber",
                            "param": [
                                {
                                    "name": "newItem",
                                    "type": "SVGNumber"
                                }
                            ]
                        },
                        {
                            "name": "insertItemBefore",
                            "type": "SVGNumber",
                            "param": [
                                {
                                    "name": "newItem",
                                    "type": "SVGNumber"
                                },
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "removeItem",
                            "type": "SVGNumber",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "replaceItem",
                            "type": "SVGNumber",
                            "param": [
                                {
                                    "name": "newItem",
                                    "type": "SVGNumber"
                                },
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "numberOfItems",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "SVGPathElement",
                "extends": "SVGGraphicsElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "name": "d",
                            "value-syntax": "svg_path_data"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "clip-path",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "nonzero evenodd inherit",
                            "name": "clip-rule",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "inherit initial",
                            "name": "color",
                            "value-syntax": "css_color"
                        },
                        {
                            "enum-values": "auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit",
                            "name": "cursor",
                            "value-syntax": "comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"
                        },
                        {
                            "enum-values": "inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit initial",
                            "name": "display",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none currentColor inherit",
                            "name": "fill",
                            "value-syntax": "svg_paint_or_css_color"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "fill-opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "nonzero evenodd inherit",
                            "name": "fill-rule",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "filter",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "marker",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "marker-end",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "marker-mid",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "marker-start",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "mask",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "inherit initial",
                            "name": "opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "auto none visiblePainted visibleFill visibleStroke visible painted fill stroke all inherit initial",
                            "name": "pointer-events",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none currentColor inherit",
                            "name": "stroke",
                            "value-syntax": "svg_paint_or_css_color"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "stroke-dasharray",
                            "value-syntax": "comma_or_space_separated_css_percentage_or_length"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-dashoffset",
                            "value-syntax": "css_percentage_or_length"
                        },
                        {
                            "enum-values": "butt round square inherit",
                            "name": "stroke-linecap",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "miter round bevel inherit",
                            "name": "stroke-linejoin",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-miterlimit",
                            "value-syntax": "1_or_greater_floating_point_number"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-width",
                            "value-syntax": "css_percentage_or_length"
                        },
                        {
                            "enum-values": "visible hidden collapse inherit initial",
                            "name": "visibility",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "path",
                        "namespace": "SVG"
                    }
                ],
                "methods": {
                    "method": [
                        {
                            "name": "createSVGPathSegArcAbs",
                            "type": "SVGPathSegArcAbs",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                },
                                {
                                    "name": "r1",
                                    "type": "float"
                                },
                                {
                                    "name": "r2",
                                    "type": "float"
                                },
                                {
                                    "name": "angle",
                                    "type": "float"
                                },
                                {
                                    "name": "largeArcFlag",
                                    "type": "boolean"
                                },
                                {
                                    "name": "sweepFlag",
                                    "type": "boolean"
                                }
                            ]
                        },
                        {
                            "name": "createSVGPathSegArcRel",
                            "type": "SVGPathSegArcRel",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                },
                                {
                                    "name": "r1",
                                    "type": "float"
                                },
                                {
                                    "name": "r2",
                                    "type": "float"
                                },
                                {
                                    "name": "angle",
                                    "type": "float"
                                },
                                {
                                    "name": "largeArcFlag",
                                    "type": "boolean"
                                },
                                {
                                    "name": "sweepFlag",
                                    "type": "boolean"
                                }
                            ]
                        },
                        {
                            "name": "createSVGPathSegClosePath",
                            "type": "SVGPathSegClosePath"
                        },
                        {
                            "name": "createSVGPathSegCurvetoCubicAbs",
                            "type": "SVGPathSegCurvetoCubicAbs",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                },
                                {
                                    "name": "x1",
                                    "type": "float"
                                },
                                {
                                    "name": "y1",
                                    "type": "float"
                                },
                                {
                                    "name": "x2",
                                    "type": "float"
                                },
                                {
                                    "name": "y2",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "createSVGPathSegCurvetoCubicRel",
                            "type": "SVGPathSegCurvetoCubicRel",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                },
                                {
                                    "name": "x1",
                                    "type": "float"
                                },
                                {
                                    "name": "y1",
                                    "type": "float"
                                },
                                {
                                    "name": "x2",
                                    "type": "float"
                                },
                                {
                                    "name": "y2",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "createSVGPathSegCurvetoCubicSmoothAbs",
                            "type": "SVGPathSegCurvetoCubicSmoothAbs",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                },
                                {
                                    "name": "x2",
                                    "type": "float"
                                },
                                {
                                    "name": "y2",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "createSVGPathSegCurvetoCubicSmoothRel",
                            "type": "SVGPathSegCurvetoCubicSmoothRel",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                },
                                {
                                    "name": "x2",
                                    "type": "float"
                                },
                                {
                                    "name": "y2",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "createSVGPathSegCurvetoQuadraticAbs",
                            "type": "SVGPathSegCurvetoQuadraticAbs",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                },
                                {
                                    "name": "x1",
                                    "type": "float"
                                },
                                {
                                    "name": "y1",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "createSVGPathSegCurvetoQuadraticRel",
                            "type": "SVGPathSegCurvetoQuadraticRel",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                },
                                {
                                    "name": "x1",
                                    "type": "float"
                                },
                                {
                                    "name": "y1",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "createSVGPathSegCurvetoQuadraticSmoothAbs",
                            "type": "SVGPathSegCurvetoQuadraticSmoothAbs",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "createSVGPathSegCurvetoQuadraticSmoothRel",
                            "type": "SVGPathSegCurvetoQuadraticSmoothRel",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "createSVGPathSegLinetoAbs",
                            "type": "SVGPathSegLinetoAbs",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "createSVGPathSegLinetoHorizontalAbs",
                            "type": "SVGPathSegLinetoHorizontalAbs",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "createSVGPathSegLinetoHorizontalRel",
                            "type": "SVGPathSegLinetoHorizontalRel",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "createSVGPathSegLinetoRel",
                            "type": "SVGPathSegLinetoRel",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "createSVGPathSegLinetoVerticalAbs",
                            "type": "SVGPathSegLinetoVerticalAbs",
                            "param": [
                                {
                                    "name": "y",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "createSVGPathSegLinetoVerticalRel",
                            "type": "SVGPathSegLinetoVerticalRel",
                            "param": [
                                {
                                    "name": "y",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "createSVGPathSegMovetoAbs",
                            "type": "SVGPathSegMovetoAbs",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "createSVGPathSegMovetoRel",
                            "type": "SVGPathSegMovetoRel",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "getPathSegAtLength",
                            "type": "unsigned long",
                            "param": [
                                {
                                    "name": "distance",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "getPointAtLength",
                            "type": "SVGPoint",
                            "param": [
                                {
                                    "name": "distance",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "getTotalLength",
                            "type": "float"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "pathSegList",
                            "read-only": "1",
                            "type": "SVGPathSegList"
                        }
                    ]
                }
            },
            {
                "name": "SVGPathSeg",
                "extends": "Object",
                "constants": {
                    "constant": [
                        {
                            "name": "PATHSEG_ARC_ABS",
                            "type": "unsigned short",
                            "value": [
                                "10"
                            ]
                        },
                        {
                            "name": "PATHSEG_ARC_REL",
                            "type": "unsigned short",
                            "value": [
                                "11"
                            ]
                        },
                        {
                            "name": "PATHSEG_CLOSEPATH",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "PATHSEG_CURVETO_CUBIC_ABS",
                            "type": "unsigned short",
                            "value": [
                                "6"
                            ]
                        },
                        {
                            "name": "PATHSEG_CURVETO_CUBIC_REL",
                            "type": "unsigned short",
                            "value": [
                                "7"
                            ]
                        },
                        {
                            "name": "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS",
                            "type": "unsigned short",
                            "value": [
                                "16"
                            ]
                        },
                        {
                            "name": "PATHSEG_CURVETO_CUBIC_SMOOTH_REL",
                            "type": "unsigned short",
                            "value": [
                                "17"
                            ]
                        },
                        {
                            "name": "PATHSEG_CURVETO_QUADRATIC_ABS",
                            "type": "unsigned short",
                            "value": [
                                "8"
                            ]
                        },
                        {
                            "name": "PATHSEG_CURVETO_QUADRATIC_REL",
                            "type": "unsigned short",
                            "value": [
                                "9"
                            ]
                        },
                        {
                            "name": "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS",
                            "type": "unsigned short",
                            "value": [
                                "18"
                            ]
                        },
                        {
                            "name": "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL",
                            "type": "unsigned short",
                            "value": [
                                "19"
                            ]
                        },
                        {
                            "name": "PATHSEG_LINETO_ABS",
                            "type": "unsigned short",
                            "value": [
                                "4"
                            ]
                        },
                        {
                            "name": "PATHSEG_LINETO_HORIZONTAL_ABS",
                            "type": "unsigned short",
                            "value": [
                                "12"
                            ]
                        },
                        {
                            "name": "PATHSEG_LINETO_HORIZONTAL_REL",
                            "type": "unsigned short",
                            "value": [
                                "13"
                            ]
                        },
                        {
                            "name": "PATHSEG_LINETO_REL",
                            "type": "unsigned short",
                            "value": [
                                "5"
                            ]
                        },
                        {
                            "name": "PATHSEG_LINETO_VERTICAL_ABS",
                            "type": "unsigned short",
                            "value": [
                                "14"
                            ]
                        },
                        {
                            "name": "PATHSEG_LINETO_VERTICAL_REL",
                            "type": "unsigned short",
                            "value": [
                                "15"
                            ]
                        },
                        {
                            "name": "PATHSEG_MOVETO_ABS",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "PATHSEG_MOVETO_REL",
                            "type": "unsigned short",
                            "value": [
                                "3"
                            ]
                        },
                        {
                            "name": "PATHSEG_UNKNOWN",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "pathSegType",
                            "read-only": "1",
                            "type": "unsigned short"
                        },
                        {
                            "name": "pathSegTypeAsLetter",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "SVGPathSegArcAbs",
                "extends": "SVGPathSeg",
                "properties": {
                    "property": [
                        {
                            "name": "angle",
                            "type": "float"
                        },
                        {
                            "name": "largeArcFlag",
                            "type": "boolean"
                        },
                        {
                            "name": "r1",
                            "type": "float"
                        },
                        {
                            "name": "r2",
                            "type": "float"
                        },
                        {
                            "name": "sweepFlag",
                            "type": "boolean"
                        },
                        {
                            "name": "x",
                            "type": "float"
                        },
                        {
                            "name": "y",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "SVGPathSegArcRel",
                "extends": "SVGPathSeg",
                "properties": {
                    "property": [
                        {
                            "name": "angle",
                            "type": "float"
                        },
                        {
                            "name": "largeArcFlag",
                            "type": "boolean"
                        },
                        {
                            "name": "r1",
                            "type": "float"
                        },
                        {
                            "name": "r2",
                            "type": "float"
                        },
                        {
                            "name": "sweepFlag",
                            "type": "boolean"
                        },
                        {
                            "name": "x",
                            "type": "float"
                        },
                        {
                            "name": "y",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "SVGPathSegClosePath",
                "extends": "SVGPathSeg"
            },
            {
                "name": "SVGPathSegCurvetoCubicAbs",
                "extends": "SVGPathSeg",
                "properties": {
                    "property": [
                        {
                            "name": "x",
                            "type": "float"
                        },
                        {
                            "name": "x1",
                            "type": "float"
                        },
                        {
                            "name": "x2",
                            "type": "float"
                        },
                        {
                            "name": "y",
                            "type": "float"
                        },
                        {
                            "name": "y1",
                            "type": "float"
                        },
                        {
                            "name": "y2",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "SVGPathSegCurvetoCubicRel",
                "extends": "SVGPathSeg",
                "properties": {
                    "property": [
                        {
                            "name": "x",
                            "type": "float"
                        },
                        {
                            "name": "x1",
                            "type": "float"
                        },
                        {
                            "name": "x2",
                            "type": "float"
                        },
                        {
                            "name": "y",
                            "type": "float"
                        },
                        {
                            "name": "y1",
                            "type": "float"
                        },
                        {
                            "name": "y2",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "SVGPathSegCurvetoCubicSmoothAbs",
                "extends": "SVGPathSeg",
                "properties": {
                    "property": [
                        {
                            "name": "x",
                            "type": "float"
                        },
                        {
                            "name": "x2",
                            "type": "float"
                        },
                        {
                            "name": "y",
                            "type": "float"
                        },
                        {
                            "name": "y2",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "SVGPathSegCurvetoCubicSmoothRel",
                "extends": "SVGPathSeg",
                "properties": {
                    "property": [
                        {
                            "name": "x",
                            "type": "float"
                        },
                        {
                            "name": "x2",
                            "type": "float"
                        },
                        {
                            "name": "y",
                            "type": "float"
                        },
                        {
                            "name": "y2",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "SVGPathSegCurvetoQuadraticAbs",
                "extends": "SVGPathSeg",
                "properties": {
                    "property": [
                        {
                            "name": "x",
                            "type": "float"
                        },
                        {
                            "name": "x1",
                            "type": "float"
                        },
                        {
                            "name": "y",
                            "type": "float"
                        },
                        {
                            "name": "y1",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "SVGPathSegCurvetoQuadraticRel",
                "extends": "SVGPathSeg",
                "properties": {
                    "property": [
                        {
                            "name": "x",
                            "type": "float"
                        },
                        {
                            "name": "x1",
                            "type": "float"
                        },
                        {
                            "name": "y",
                            "type": "float"
                        },
                        {
                            "name": "y1",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "SVGPathSegCurvetoQuadraticSmoothAbs",
                "extends": "SVGPathSeg",
                "properties": {
                    "property": [
                        {
                            "name": "x",
                            "type": "float"
                        },
                        {
                            "name": "y",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "SVGPathSegCurvetoQuadraticSmoothRel",
                "extends": "SVGPathSeg",
                "properties": {
                    "property": [
                        {
                            "name": "x",
                            "type": "float"
                        },
                        {
                            "name": "y",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "SVGPathSegLinetoAbs",
                "extends": "SVGPathSeg",
                "properties": {
                    "property": [
                        {
                            "name": "x",
                            "type": "float"
                        },
                        {
                            "name": "y",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "SVGPathSegLinetoHorizontalAbs",
                "extends": "SVGPathSeg",
                "properties": {
                    "property": [
                        {
                            "name": "x",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "SVGPathSegLinetoHorizontalRel",
                "extends": "SVGPathSeg",
                "properties": {
                    "property": [
                        {
                            "name": "x",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "SVGPathSegLinetoRel",
                "extends": "SVGPathSeg",
                "properties": {
                    "property": [
                        {
                            "name": "x",
                            "type": "float"
                        },
                        {
                            "name": "y",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "SVGPathSegLinetoVerticalAbs",
                "extends": "SVGPathSeg",
                "properties": {
                    "property": [
                        {
                            "name": "y",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "SVGPathSegLinetoVerticalRel",
                "extends": "SVGPathSeg",
                "properties": {
                    "property": [
                        {
                            "name": "y",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "SVGPathSegList",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "appendItem",
                            "type": "SVGPathSeg",
                            "param": [
                                {
                                    "name": "newItem",
                                    "type": "SVGPathSeg"
                                }
                            ]
                        },
                        {
                            "name": "clear",
                            "type": "void"
                        },
                        {
                            "name": "getItem",
                            "type": "SVGPathSeg",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "initialize",
                            "type": "SVGPathSeg",
                            "param": [
                                {
                                    "name": "newItem",
                                    "type": "SVGPathSeg"
                                }
                            ]
                        },
                        {
                            "name": "insertItemBefore",
                            "type": "SVGPathSeg",
                            "param": [
                                {
                                    "name": "newItem",
                                    "type": "SVGPathSeg"
                                },
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "removeItem",
                            "type": "SVGPathSeg",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "replaceItem",
                            "type": "SVGPathSeg",
                            "param": [
                                {
                                    "name": "newItem",
                                    "type": "SVGPathSeg"
                                },
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "numberOfItems",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "SVGPathSegMovetoAbs",
                "extends": "SVGPathSeg",
                "properties": {
                    "property": [
                        {
                            "name": "x",
                            "type": "float"
                        },
                        {
                            "name": "y",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "SVGPathSegMovetoRel",
                "extends": "SVGPathSeg",
                "properties": {
                    "property": [
                        {
                            "name": "x",
                            "type": "float"
                        },
                        {
                            "name": "y",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "SVGPatternElement",
                "extends": "SVGElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "auto inherit",
                            "name": "clip",
                            "value-syntax": "css_shape_rect"
                        },
                        {
                            "enum-values": "visible hidden scroll auto inherit",
                            "name": "overflow",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "clip-path",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit",
                            "name": "cursor",
                            "value-syntax": "comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"
                        },
                        {
                            "enum-values": "accumulate inherit",
                            "name": "enable-background",
                            "value-syntax": "svg_enum_new_followed_by_svg_viewbox"
                        },
                        {
                            "enum-values": "false true",
                            "name": "externalResourcesRequired",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "filter",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "mask",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "inherit initial",
                            "name": "opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "default preserve",
                            "name": "xml:space",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "pattern",
                        "namespace": "SVG"
                    }
                ],
                "implements": [
                    "SVGTests",
                    "SVGUnitTypes",
                    "SVGFitToViewBox",
                    "SVGURIReference"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "height",
                            "content-attribute": "height",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "patternContentUnits",
                            "content-attribute": "patternContentUnits",
                            "content-attribute-enum-values": "userSpaceOnUse objectBoundingBox",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "read-only": "1",
                            "type": "SVGAnimatedEnumeration"
                        },
                        {
                            "name": "patternTransform",
                            "content-attribute": "patternTransform",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_transform_list",
                            "read-only": "1",
                            "type": "SVGAnimatedTransformList"
                        },
                        {
                            "name": "patternUnits",
                            "content-attribute": "patternUnits",
                            "content-attribute-enum-values": "objectBoundingBox userSpaceOnUse",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "read-only": "1",
                            "type": "SVGAnimatedEnumeration"
                        },
                        {
                            "name": "width",
                            "content-attribute": "width",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "x",
                            "content-attribute": "x",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "y",
                            "content-attribute": "y",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        }
                    ]
                }
            },
            {
                "name": "SVGPoint",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "matrixTransform",
                            "type": "SVGPoint",
                            "param": [
                                {
                                    "name": "matrix",
                                    "type": "SVGMatrix"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "x",
                            "type": "float"
                        },
                        {
                            "name": "y",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "SVGPointList",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "appendItem",
                            "type": "SVGPoint",
                            "param": [
                                {
                                    "name": "newItem",
                                    "type": "SVGPoint"
                                }
                            ]
                        },
                        {
                            "name": "clear",
                            "type": "void"
                        },
                        {
                            "name": "getItem",
                            "type": "SVGPoint",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "initialize",
                            "type": "SVGPoint",
                            "param": [
                                {
                                    "name": "newItem",
                                    "type": "SVGPoint"
                                }
                            ]
                        },
                        {
                            "name": "insertItemBefore",
                            "type": "SVGPoint",
                            "param": [
                                {
                                    "name": "newItem",
                                    "type": "SVGPoint"
                                },
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "removeItem",
                            "type": "SVGPoint",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "replaceItem",
                            "type": "SVGPoint",
                            "param": [
                                {
                                    "name": "newItem",
                                    "type": "SVGPoint"
                                },
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "numberOfItems",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "SVGPolygonElement",
                "extends": "SVGGraphicsElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "none inherit",
                            "name": "clip-path",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "nonzero evenodd inherit",
                            "name": "clip-rule",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "inherit initial",
                            "name": "color",
                            "value-syntax": "css_color"
                        },
                        {
                            "enum-values": "auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit",
                            "name": "cursor",
                            "value-syntax": "comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"
                        },
                        {
                            "enum-values": "inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit initial",
                            "name": "display",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none currentColor inherit",
                            "name": "fill",
                            "value-syntax": "svg_paint_or_css_color"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "fill-opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "nonzero evenodd inherit",
                            "name": "fill-rule",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "filter",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "marker",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "marker-end",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "marker-mid",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "marker-start",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "mask",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "inherit initial",
                            "name": "opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "auto none visiblePainted visibleFill visibleStroke visible painted fill stroke all inherit initial",
                            "name": "pointer-events",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none currentColor inherit",
                            "name": "stroke",
                            "value-syntax": "svg_paint_or_css_color"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "stroke-dasharray",
                            "value-syntax": "comma_or_space_separated_css_percentage_or_length"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-dashoffset",
                            "value-syntax": "css_percentage_or_length"
                        },
                        {
                            "enum-values": "butt round square inherit",
                            "name": "stroke-linecap",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "miter round bevel inherit",
                            "name": "stroke-linejoin",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-miterlimit",
                            "value-syntax": "1_or_greater_floating_point_number"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-width",
                            "value-syntax": "css_percentage_or_length"
                        },
                        {
                            "enum-values": "visible hidden collapse inherit initial",
                            "name": "visibility",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "polygon",
                        "namespace": "SVG"
                    }
                ],
                "implements": [
                    "SVGAnimatedPoints"
                ]
            },
            {
                "name": "SVGPolylineElement",
                "extends": "SVGGraphicsElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "none inherit",
                            "name": "clip-path",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "nonzero evenodd inherit",
                            "name": "clip-rule",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "inherit initial",
                            "name": "color",
                            "value-syntax": "css_color"
                        },
                        {
                            "enum-values": "auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit",
                            "name": "cursor",
                            "value-syntax": "comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"
                        },
                        {
                            "enum-values": "inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit initial",
                            "name": "display",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none currentColor inherit",
                            "name": "fill",
                            "value-syntax": "svg_paint_or_css_color"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "fill-opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "nonzero evenodd inherit",
                            "name": "fill-rule",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "filter",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "marker",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "marker-end",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "marker-mid",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "marker-start",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "mask",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "inherit initial",
                            "name": "opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "auto none visiblePainted visibleFill visibleStroke visible painted fill stroke all inherit initial",
                            "name": "pointer-events",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none currentColor inherit",
                            "name": "stroke",
                            "value-syntax": "svg_paint_or_css_color"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "stroke-dasharray",
                            "value-syntax": "comma_or_space_separated_css_percentage_or_length"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-dashoffset",
                            "value-syntax": "css_percentage_or_length"
                        },
                        {
                            "enum-values": "butt round square inherit",
                            "name": "stroke-linecap",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "miter round bevel inherit",
                            "name": "stroke-linejoin",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-miterlimit",
                            "value-syntax": "1_or_greater_floating_point_number"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-width",
                            "value-syntax": "css_percentage_or_length"
                        },
                        {
                            "enum-values": "visible hidden collapse inherit initial",
                            "name": "visibility",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "polyline",
                        "namespace": "SVG"
                    }
                ],
                "implements": [
                    "SVGAnimatedPoints"
                ]
            },
            {
                "name": "SVGPreserveAspectRatio",
                "extends": "Object",
                "constants": {
                    "constant": [
                        {
                            "name": "SVG_MEETORSLICE_MEET",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "SVG_MEETORSLICE_SLICE",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "SVG_MEETORSLICE_UNKNOWN",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        },
                        {
                            "name": "SVG_PRESERVEASPECTRATIO_NONE",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "SVG_PRESERVEASPECTRATIO_UNKNOWN",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        },
                        {
                            "name": "SVG_PRESERVEASPECTRATIO_XMAXYMAX",
                            "type": "unsigned short",
                            "value": [
                                "10"
                            ]
                        },
                        {
                            "name": "SVG_PRESERVEASPECTRATIO_XMAXYMID",
                            "type": "unsigned short",
                            "value": [
                                "7"
                            ]
                        },
                        {
                            "name": "SVG_PRESERVEASPECTRATIO_XMAXYMIN",
                            "type": "unsigned short",
                            "value": [
                                "4"
                            ]
                        },
                        {
                            "name": "SVG_PRESERVEASPECTRATIO_XMIDYMAX",
                            "type": "unsigned short",
                            "value": [
                                "9"
                            ]
                        },
                        {
                            "name": "SVG_PRESERVEASPECTRATIO_XMIDYMID",
                            "type": "unsigned short",
                            "value": [
                                "6"
                            ]
                        },
                        {
                            "name": "SVG_PRESERVEASPECTRATIO_XMIDYMIN",
                            "type": "unsigned short",
                            "value": [
                                "3"
                            ]
                        },
                        {
                            "name": "SVG_PRESERVEASPECTRATIO_XMINYMAX",
                            "type": "unsigned short",
                            "value": [
                                "8"
                            ]
                        },
                        {
                            "name": "SVG_PRESERVEASPECTRATIO_XMINYMID",
                            "type": "unsigned short",
                            "value": [
                                "5"
                            ]
                        },
                        {
                            "name": "SVG_PRESERVEASPECTRATIO_XMINYMIN",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "align",
                            "type": "unsigned short"
                        },
                        {
                            "name": "meetOrSlice",
                            "type": "unsigned short"
                        }
                    ]
                }
            },
            {
                "name": "SVGRadialGradientElement",
                "extends": "SVGGradientElement",
                "element": [
                    {
                        "name": "radialGradient",
                        "namespace": "SVG"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "cx",
                            "content-attribute": "cx",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "cy",
                            "content-attribute": "cy",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "fx",
                            "content-attribute": "fx",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "fy",
                            "content-attribute": "fy",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "r",
                            "content-attribute": "r",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        }
                    ]
                }
            },
            {
                "name": "SVGRect",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "height",
                            "type": "float"
                        },
                        {
                            "name": "width",
                            "type": "float"
                        },
                        {
                            "name": "x",
                            "type": "float"
                        },
                        {
                            "name": "y",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "SVGRectElement",
                "extends": "SVGGraphicsElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "none inherit",
                            "name": "clip-path",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "nonzero evenodd inherit",
                            "name": "clip-rule",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "inherit initial",
                            "name": "color",
                            "value-syntax": "css_color"
                        },
                        {
                            "enum-values": "auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit",
                            "name": "cursor",
                            "value-syntax": "comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"
                        },
                        {
                            "enum-values": "inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit initial",
                            "name": "display",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none currentColor inherit",
                            "name": "fill",
                            "value-syntax": "svg_paint_or_css_color"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "fill-opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "nonzero evenodd inherit",
                            "name": "fill-rule",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "filter",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "mask",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "inherit initial",
                            "name": "opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "auto none visiblePainted visibleFill visibleStroke visible painted fill stroke all inherit initial",
                            "name": "pointer-events",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none currentColor inherit",
                            "name": "stroke",
                            "value-syntax": "svg_paint_or_css_color"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "stroke-dasharray",
                            "value-syntax": "comma_or_space_separated_css_percentage_or_length"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-dashoffset",
                            "value-syntax": "css_percentage_or_length"
                        },
                        {
                            "enum-values": "butt round square inherit",
                            "name": "stroke-linecap",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "miter round bevel inherit",
                            "name": "stroke-linejoin",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-miterlimit",
                            "value-syntax": "1_or_greater_floating_point_number"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-width",
                            "value-syntax": "css_percentage_or_length"
                        },
                        {
                            "enum-values": "visible hidden collapse inherit initial",
                            "name": "visibility",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "rect",
                        "namespace": "SVG"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "height",
                            "content-attribute": "height",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "rx",
                            "content-attribute": "rx",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "ry",
                            "content-attribute": "ry",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "width",
                            "content-attribute": "width",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "x",
                            "content-attribute": "x",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "y",
                            "content-attribute": "y",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        }
                    ]
                }
            },
            {
                "name": "SVGScriptElement",
                "extends": "SVGElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "false true",
                            "name": "externalResourcesRequired",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "script",
                        "namespace": "SVG"
                    }
                ],
                "implements": [
                    "SVGURIReference"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "type",
                            "content-attribute": "type",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "mime_type",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "SVGStopElement",
                "extends": "SVGElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "inherit initial",
                            "name": "color",
                            "value-syntax": "css_color"
                        },
                        {
                            "enum-values": "currentColor inherit initial",
                            "name": "stop-color",
                            "value-syntax": "css_color"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stop-opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "stop",
                        "namespace": "SVG"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "offset",
                            "content-attribute": "offset",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "floating_point_number",
                            "read-only": "1",
                            "type": "SVGAnimatedNumber"
                        }
                    ]
                }
            },
            {
                "name": "SVGStringList",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "appendItem",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "newItem",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "clear",
                            "type": "void"
                        },
                        {
                            "name": "getItem",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "initialize",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "newItem",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "insertItemBefore",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "newItem",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "removeItem",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "replaceItem",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "newItem",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "numberOfItems",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "SVGStyleElement",
                "extends": "SVGElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "default preserve",
                            "name": "xml:space",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "style",
                        "namespace": "SVG"
                    }
                ],
                "properties": {
                    "property": [
                        {
                            "name": "disabled",
                            "type": "boolean"
                        },
                        {
                            "name": "media",
                            "content-attribute": "media",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "media_query",
                            "type": "DOMString"
                        },
                        {
                            "name": "title",
                            "content-attribute": "title",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "type",
                            "content-attribute": "type",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "mime_type",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "SVGSVGElement",
                "extends": "SVGGraphicsElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "name": "version",
                            "value-syntax": "floating_point_number"
                        },
                        {
                            "name": "baseProfile"
                        },
                        {
                            "enum-values": "false true",
                            "name": "externalResourcesRequired",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "default preserve",
                            "name": "xml:space",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "auto inherit",
                            "name": "clip",
                            "value-syntax": "css_shape_rect"
                        },
                        {
                            "enum-values": "inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit initial",
                            "name": "display",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "visible hidden scroll auto inherit",
                            "name": "overflow",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "clip-path",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit",
                            "name": "cursor",
                            "value-syntax": "comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"
                        },
                        {
                            "enum-values": "accumulate inherit",
                            "name": "enable-background",
                            "value-syntax": "svg_enum_new_followed_by_svg_viewbox"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "filter",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "mask",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "inherit initial",
                            "name": "opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "svg",
                        "namespace": "SVG"
                    }
                ],
                "events": {
                    "event": [
                        {
                            "name": "SVGScroll",
                            "bubbles": "1",
                            "dispatch": "sync-or-async",
                            "type": "Event"
                        },
                        {
                            "name": "SVGZoom",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "type": "SVGZoomEvent"
                        }
                    ]
                },
                "implements": [
                    "DocumentEvent",
                    "SVGFitToViewBox",
                    "SVGZoomAndPan"
                ],
                "methods": {
                    "method": [
                        {
                            "name": "checkEnclosure",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "element",
                                    "type": "SVGElement"
                                },
                                {
                                    "name": "rect",
                                    "type": "SVGRect"
                                }
                            ]
                        },
                        {
                            "name": "checkIntersection",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "element",
                                    "type": "SVGElement"
                                },
                                {
                                    "name": "rect",
                                    "type": "SVGRect"
                                }
                            ]
                        },
                        {
                            "name": "createSVGAngle",
                            "type": "SVGAngle"
                        },
                        {
                            "name": "createSVGLength",
                            "type": "SVGLength"
                        },
                        {
                            "name": "createSVGMatrix",
                            "type": "SVGMatrix"
                        },
                        {
                            "name": "createSVGNumber",
                            "type": "SVGNumber"
                        },
                        {
                            "name": "createSVGPoint",
                            "type": "SVGPoint"
                        },
                        {
                            "name": "createSVGRect",
                            "type": "SVGRect"
                        },
                        {
                            "name": "createSVGTransform",
                            "type": "SVGTransform"
                        },
                        {
                            "name": "createSVGTransformFromMatrix",
                            "type": "SVGTransform",
                            "param": [
                                {
                                    "name": "matrix",
                                    "type": "SVGMatrix"
                                }
                            ]
                        },
                        {
                            "name": "deselectAll",
                            "type": "void"
                        },
                        {
                            "name": "forceRedraw",
                            "type": "void"
                        },
                        {
                            "name": "getComputedStyle",
                            "type": "CSSStyleDeclaration",
                            "param": [
                                {
                                    "name": "elt",
                                    "type": "Element"
                                },
                                {
                                    "name": "pseudoElt",
                                    "nullable": "1",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "getCurrentTime",
                            "type": "float"
                        },
                        {
                            "name": "getElementById",
                            "type": "Element",
                            "param": [
                                {
                                    "name": "elementId",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "getEnclosureList",
                            "type": "NodeList",
                            "param": [
                                {
                                    "name": "rect",
                                    "type": "SVGRect"
                                },
                                {
                                    "name": "referenceElement",
                                    "type": "SVGElement"
                                }
                            ]
                        },
                        {
                            "name": "getIntersectionList",
                            "type": "NodeList",
                            "param": [
                                {
                                    "name": "rect",
                                    "type": "SVGRect"
                                },
                                {
                                    "name": "referenceElement",
                                    "type": "SVGElement"
                                }
                            ]
                        },
                        {
                            "name": "pauseAnimations",
                            "type": "void"
                        },
                        {
                            "name": "setCurrentTime",
                            "type": "void",
                            "param": [
                                {
                                    "name": "seconds",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "suspendRedraw",
                            "type": "unsigned long",
                            "param": [
                                {
                                    "name": "maxWaitMilliseconds",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "unpauseAnimations",
                            "type": "void"
                        },
                        {
                            "name": "unsuspendRedraw",
                            "type": "void",
                            "param": [
                                {
                                    "name": "suspendHandleID",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "unsuspendRedrawAll",
                            "type": "void"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "contentScriptType",
                            "content-attribute": "contentScriptType",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "mime_type",
                            "type": "DOMString"
                        },
                        {
                            "name": "contentStyleType",
                            "content-attribute": "contentStyleType",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "mime_type",
                            "type": "DOMString"
                        },
                        {
                            "name": "currentScale",
                            "type": "float"
                        },
                        {
                            "name": "currentTranslate",
                            "read-only": "1",
                            "type": "SVGPoint"
                        },
                        {
                            "name": "height",
                            "content-attribute": "height",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "onabort",
                            "content-attribute": "onabort",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "SVGAbort",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onerror",
                            "content-attribute": "onerror",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "SVGError",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onresize",
                            "content-attribute": "onresize",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "resize",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onscroll",
                            "content-attribute": "onscroll",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "scroll",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onunload",
                            "content-attribute": "onunload",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "SVGUnload",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onzoom",
                            "content-attribute": "onzoom",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "SVGZoom",
                            "type": "EventHandler"
                        },
                        {
                            "name": "pixelUnitToMillimeterX",
                            "read-only": "1",
                            "type": "float"
                        },
                        {
                            "name": "pixelUnitToMillimeterY",
                            "read-only": "1",
                            "type": "float"
                        },
                        {
                            "name": "screenPixelToMillimeterX",
                            "read-only": "1",
                            "type": "float"
                        },
                        {
                            "name": "screenPixelToMillimeterY",
                            "read-only": "1",
                            "type": "float"
                        },
                        {
                            "name": "viewport",
                            "read-only": "1",
                            "type": "SVGRect"
                        },
                        {
                            "name": "width",
                            "content-attribute": "width",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "x",
                            "content-attribute": "x",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "y",
                            "content-attribute": "y",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        }
                    ]
                }
            },
            {
                "name": "SVGSwitchElement",
                "extends": "SVGGraphicsElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "none inherit",
                            "name": "clip-path",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit",
                            "name": "cursor",
                            "value-syntax": "comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"
                        },
                        {
                            "enum-values": "inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit initial",
                            "name": "display",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "accumulate inherit",
                            "name": "enable-background",
                            "value-syntax": "svg_enum_new_followed_by_svg_viewbox"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "filter",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "mask",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "inherit initial",
                            "name": "opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "switch",
                        "namespace": "SVG"
                    }
                ]
            },
            {
                "name": "SVGSymbolElement",
                "extends": "SVGElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "auto inherit",
                            "name": "clip",
                            "value-syntax": "css_shape_rect"
                        },
                        {
                            "enum-values": "visible hidden scroll auto inherit",
                            "name": "overflow",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "clip-path",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit",
                            "name": "cursor",
                            "value-syntax": "comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"
                        },
                        {
                            "enum-values": "accumulate inherit",
                            "name": "enable-background",
                            "value-syntax": "svg_enum_new_followed_by_svg_viewbox"
                        },
                        {
                            "enum-values": "false true",
                            "name": "externalResourcesRequired",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "filter",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "mask",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "inherit initial",
                            "name": "opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "default preserve",
                            "name": "xml:space",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "symbol",
                        "namespace": "SVG"
                    }
                ],
                "implements": [
                    "SVGFitToViewBox"
                ]
            },
            {
                "name": "SVGTextContentElement",
                "extends": "SVGGraphicsElement",
                "constants": {
                    "constant": [
                        {
                            "name": "LENGTHADJUST_SPACING",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "LENGTHADJUST_SPACINGANDGLYPHS",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "LENGTHADJUST_UNKNOWN",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "getCharNumAtPosition",
                            "type": "long",
                            "param": [
                                {
                                    "name": "point",
                                    "type": "SVGPoint"
                                }
                            ]
                        },
                        {
                            "name": "getComputedTextLength",
                            "type": "float"
                        },
                        {
                            "name": "getEndPositionOfChar",
                            "type": "SVGPoint",
                            "param": [
                                {
                                    "name": "charnum",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "getExtentOfChar",
                            "type": "SVGRect",
                            "param": [
                                {
                                    "name": "charnum",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "getNumberOfChars",
                            "type": "long"
                        },
                        {
                            "name": "getRotationOfChar",
                            "type": "float",
                            "param": [
                                {
                                    "name": "charnum",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "getStartPositionOfChar",
                            "type": "SVGPoint",
                            "param": [
                                {
                                    "name": "charnum",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "getSubStringLength",
                            "type": "float",
                            "param": [
                                {
                                    "name": "charnum",
                                    "type": "unsigned long"
                                },
                                {
                                    "name": "nchars",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "selectSubString",
                            "type": "void",
                            "param": [
                                {
                                    "name": "charnum",
                                    "type": "unsigned long"
                                },
                                {
                                    "name": "nchars",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "lengthAdjust",
                            "content-attribute": "lengthAdjust",
                            "content-attribute-enum-values": "spacing spacingAndGlyphs",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "read-only": "1",
                            "type": "SVGAnimatedEnumeration"
                        },
                        {
                            "name": "textLength",
                            "content-attribute": "textLength",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        }
                    ]
                }
            },
            {
                "name": "SVGTextElement",
                "extends": "SVGTextPositioningElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "none inherit",
                            "name": "clip-path",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "nonzero evenodd inherit",
                            "name": "clip-rule",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "inherit initial",
                            "name": "color",
                            "value-syntax": "css_color"
                        },
                        {
                            "enum-values": "auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit",
                            "name": "cursor",
                            "value-syntax": "comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"
                        },
                        {
                            "enum-values": "inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit initial",
                            "name": "display",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "ltr rtl inherit",
                            "name": "direction",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "auto use-script no-change reset-size ideographic alphabetic hanging mathematical central middle text-after-edge text-before-edge inherit",
                            "name": "dominant-baseline",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none currentColor inherit",
                            "name": "fill",
                            "value-syntax": "svg_paint_or_css_color"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "fill-opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "nonzero evenodd inherit",
                            "name": "fill-rule",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "filter",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "caption icon menu message-box small-caption status-bar inherit",
                            "name": "font",
                            "value-syntax": "css_font"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "font-family",
                            "value-syntax": "comma_separated_css_font_family_followed_by_generic_family"
                        },
                        {
                            "enum-values": "smaller larger xx-small x-small small medium large x-large xx-large inherit initial",
                            "name": "font-size",
                            "value-syntax": "css_percentage_or_length"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "font-size-adjust",
                            "value-syntax": "floating_point_number"
                        },
                        {
                            "enum-values": "normal wider narrower ultra-condensed extra-condensed condensed semi-condensed semi-expanded expanded extra-expanded ultra-expanded inherit",
                            "name": "font-stretch",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "normal italic oblique inherit initial",
                            "name": "font-style",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "normal small-caps inherit initial",
                            "name": "font-variant",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "normal bold bolder lighter 100 200 300 400 500 600 700 800 900 inherit initial",
                            "name": "font-weight",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "glyph-orientation-horizontal",
                            "value-syntax": "css_angle"
                        },
                        {
                            "enum-values": "auto inherit",
                            "name": "glyph-orientation-vertical",
                            "value-syntax": "css_angle"
                        },
                        {
                            "enum-values": "auto inherit",
                            "name": "kerning",
                            "value-syntax": "css_length"
                        },
                        {
                            "enum-values": "normal inherit initial",
                            "name": "letter-spacing",
                            "value-syntax": "css_length"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "mask",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "inherit initial",
                            "name": "opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "auto none visiblePainted visibleFill visibleStroke visible painted fill stroke all inherit initial",
                            "name": "pointer-events",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none currentColor inherit",
                            "name": "stroke",
                            "value-syntax": "svg_paint_or_css_color"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "stroke-dasharray",
                            "value-syntax": "comma_or_space_separated_css_percentage_or_length"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-dashoffset",
                            "value-syntax": "css_percentage_or_length"
                        },
                        {
                            "enum-values": "butt round square inherit",
                            "name": "stroke-linecap",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "miter round bevel inherit",
                            "name": "stroke-linejoin",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-miterlimit",
                            "value-syntax": "1_or_greater_floating_point_number"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-width",
                            "value-syntax": "css_percentage_or_length"
                        },
                        {
                            "enum-values": "start middle end inherit",
                            "name": "text-anchor",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none underline overline line-through blink inherit",
                            "name": "text-decoration",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "normal embed bidi-override inherit",
                            "name": "unicode-bidi",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "visible hidden collapse inherit initial",
                            "name": "visibility",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "normal inherit initial",
                            "name": "word-spacing",
                            "value-syntax": "css_length"
                        },
                        {
                            "enum-values": "lr-tb tb-rl rl-tb bt-rl tb-lr bt-lr lr-bt rl-bt lr rl tb horizontal-tb vertical-lr vertical-rl inherit",
                            "name": "writing-mode",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "text",
                        "namespace": "SVG"
                    }
                ]
            },
            {
                "name": "SVGTextPathElement",
                "extends": "SVGTextContentElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "auto baseline before-edge text-before-edge middle central after-edge text-after-edge ideographic alphabetic hanging mathematical inherit",
                            "name": "alignment-baseline",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "baseline sub super inherit",
                            "name": "baseline-shift",
                            "value-syntax": "css_percentage_or_length"
                        },
                        {
                            "enum-values": "inherit initial",
                            "name": "color",
                            "value-syntax": "css_color"
                        },
                        {
                            "enum-values": "inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit initial",
                            "name": "display",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "ltr rtl inherit",
                            "name": "direction",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "auto use-script no-change reset-size ideographic alphabetic hanging mathematical central middle text-after-edge text-before-edge inherit",
                            "name": "dominant-baseline",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none currentColor inherit",
                            "name": "fill",
                            "value-syntax": "svg_paint_or_css_color"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "fill-opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "nonzero evenodd inherit",
                            "name": "fill-rule",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "caption icon menu message-box small-caption status-bar inherit",
                            "name": "font",
                            "value-syntax": "css_font"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "font-family",
                            "value-syntax": "comma_separated_css_font_family_followed_by_generic_family"
                        },
                        {
                            "enum-values": "smaller larger xx-small x-small small medium large x-large xx-large inherit initial",
                            "name": "font-size",
                            "value-syntax": "css_percentage_or_length"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "font-size-adjust",
                            "value-syntax": "floating_point_number"
                        },
                        {
                            "enum-values": "normal wider narrower ultra-condensed extra-condensed condensed semi-condensed semi-expanded expanded extra-expanded ultra-expanded inherit",
                            "name": "font-stretch",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "normal italic oblique inherit initial",
                            "name": "font-style",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "normal small-caps inherit initial",
                            "name": "font-variant",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "normal bold bolder lighter 100 200 300 400 500 600 700 800 900 inherit initial",
                            "name": "font-weight",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "glyph-orientation-horizontal",
                            "value-syntax": "css_angle"
                        },
                        {
                            "enum-values": "auto inherit",
                            "name": "glyph-orientation-vertical",
                            "value-syntax": "css_angle"
                        },
                        {
                            "enum-values": "auto inherit",
                            "name": "kerning",
                            "value-syntax": "css_length"
                        },
                        {
                            "enum-values": "normal inherit initial",
                            "name": "letter-spacing",
                            "value-syntax": "css_length"
                        },
                        {
                            "enum-values": "none currentColor inherit",
                            "name": "stroke",
                            "value-syntax": "svg_paint_or_css_color"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "stroke-dasharray",
                            "value-syntax": "comma_or_space_separated_css_percentage_or_length"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-dashoffset",
                            "value-syntax": "css_percentage_or_length"
                        },
                        {
                            "enum-values": "butt round square inherit",
                            "name": "stroke-linecap",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "miter round bevel inherit",
                            "name": "stroke-linejoin",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-miterlimit",
                            "value-syntax": "1_or_greater_floating_point_number"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-width",
                            "value-syntax": "css_percentage_or_length"
                        },
                        {
                            "enum-values": "start middle end inherit",
                            "name": "text-anchor",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none underline overline line-through blink inherit",
                            "name": "text-decoration",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "normal embed bidi-override inherit",
                            "name": "unicode-bidi",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "visible hidden collapse inherit initial",
                            "name": "visibility",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "normal inherit initial",
                            "name": "word-spacing",
                            "value-syntax": "css_length"
                        }
                    ]
                },
                "constants": {
                    "constant": [
                        {
                            "name": "TEXTPATH_METHODTYPE_ALIGN",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "TEXTPATH_METHODTYPE_STRETCH",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "TEXTPATH_METHODTYPE_UNKNOWN",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        },
                        {
                            "name": "TEXTPATH_SPACINGTYPE_AUTO",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "TEXTPATH_SPACINGTYPE_EXACT",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "TEXTPATH_SPACINGTYPE_UNKNOWN",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        }
                    ]
                },
                "element": [
                    {
                        "name": "textPath",
                        "namespace": "SVG"
                    }
                ],
                "implements": [
                    "SVGURIReference"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "method",
                            "content-attribute": "method",
                            "content-attribute-enum-values": "align stretch",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "read-only": "1",
                            "type": "SVGAnimatedEnumeration"
                        },
                        {
                            "name": "spacing",
                            "content-attribute": "spacing",
                            "content-attribute-enum-values": "auto exact",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "read-only": "1",
                            "type": "SVGAnimatedEnumeration"
                        },
                        {
                            "name": "startOffset",
                            "content-attribute": "startOffset",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        }
                    ]
                }
            },
            {
                "name": "SVGTextPositioningElement",
                "extends": "SVGTextContentElement",
                "properties": {
                    "property": [
                        {
                            "name": "dx",
                            "content-attribute": "dx",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "comma_or_space_separated_svg_number_with_optional_units",
                            "read-only": "1",
                            "type": "SVGAnimatedLengthList"
                        },
                        {
                            "name": "dy",
                            "content-attribute": "dy",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "comma_or_space_separated_svg_number_with_optional_units",
                            "read-only": "1",
                            "type": "SVGAnimatedLengthList"
                        },
                        {
                            "name": "rotate",
                            "content-attribute": "rotate",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "comma_or_space_separated_floating_point_numbers",
                            "read-only": "1",
                            "type": "SVGAnimatedNumberList"
                        },
                        {
                            "name": "x",
                            "content-attribute": "x",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "comma_or_space_separated_svg_number_with_optional_units",
                            "read-only": "1",
                            "type": "SVGAnimatedLengthList"
                        },
                        {
                            "name": "y",
                            "content-attribute": "y",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "comma_or_space_separated_svg_number_with_optional_units",
                            "read-only": "1",
                            "type": "SVGAnimatedLengthList"
                        }
                    ]
                }
            },
            {
                "name": "SVGTitleElement",
                "extends": "SVGElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "default preserve",
                            "name": "xml:space",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "title",
                        "namespace": "SVG"
                    }
                ]
            },
            {
                "name": "SVGTransform",
                "extends": "Object",
                "constants": {
                    "constant": [
                        {
                            "name": "SVG_TRANSFORM_MATRIX",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "SVG_TRANSFORM_ROTATE",
                            "type": "unsigned short",
                            "value": [
                                "4"
                            ]
                        },
                        {
                            "name": "SVG_TRANSFORM_SCALE",
                            "type": "unsigned short",
                            "value": [
                                "3"
                            ]
                        },
                        {
                            "name": "SVG_TRANSFORM_SKEWX",
                            "type": "unsigned short",
                            "value": [
                                "5"
                            ]
                        },
                        {
                            "name": "SVG_TRANSFORM_SKEWY",
                            "type": "unsigned short",
                            "value": [
                                "6"
                            ]
                        },
                        {
                            "name": "SVG_TRANSFORM_TRANSLATE",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "SVG_TRANSFORM_UNKNOWN",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "setMatrix",
                            "type": "void",
                            "param": [
                                {
                                    "name": "matrix",
                                    "type": "SVGMatrix"
                                }
                            ]
                        },
                        {
                            "name": "setRotate",
                            "type": "void",
                            "param": [
                                {
                                    "name": "angle",
                                    "type": "float"
                                },
                                {
                                    "name": "cx",
                                    "type": "float"
                                },
                                {
                                    "name": "cy",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "setScale",
                            "type": "void",
                            "param": [
                                {
                                    "name": "sx",
                                    "type": "float"
                                },
                                {
                                    "name": "sy",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "setSkewX",
                            "type": "void",
                            "param": [
                                {
                                    "name": "angle",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "setSkewY",
                            "type": "void",
                            "param": [
                                {
                                    "name": "angle",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "setTranslate",
                            "type": "void",
                            "param": [
                                {
                                    "name": "tx",
                                    "type": "float"
                                },
                                {
                                    "name": "ty",
                                    "type": "float"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "angle",
                            "read-only": "1",
                            "type": "float"
                        },
                        {
                            "name": "matrix",
                            "read-only": "1",
                            "type": "SVGMatrix"
                        },
                        {
                            "name": "type",
                            "read-only": "1",
                            "type": "unsigned short"
                        }
                    ]
                }
            },
            {
                "name": "SVGTransformList",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "appendItem",
                            "type": "SVGTransform",
                            "param": [
                                {
                                    "name": "newItem",
                                    "type": "SVGTransform"
                                }
                            ]
                        },
                        {
                            "name": "clear",
                            "type": "void"
                        },
                        {
                            "name": "consolidate",
                            "type": "SVGTransform"
                        },
                        {
                            "name": "createSVGTransformFromMatrix",
                            "type": "SVGTransform",
                            "param": [
                                {
                                    "name": "matrix",
                                    "type": "SVGMatrix"
                                }
                            ]
                        },
                        {
                            "name": "getItem",
                            "type": "SVGTransform",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "initialize",
                            "type": "SVGTransform",
                            "param": [
                                {
                                    "name": "newItem",
                                    "type": "SVGTransform"
                                }
                            ]
                        },
                        {
                            "name": "insertItemBefore",
                            "type": "SVGTransform",
                            "param": [
                                {
                                    "name": "newItem",
                                    "type": "SVGTransform"
                                },
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "removeItem",
                            "type": "SVGTransform",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "replaceItem",
                            "type": "SVGTransform",
                            "param": [
                                {
                                    "name": "newItem",
                                    "type": "SVGTransform"
                                },
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "numberOfItems",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "SVGTSpanElement",
                "extends": "SVGTextPositioningElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "auto baseline before-edge text-before-edge middle central after-edge text-after-edge ideographic alphabetic hanging mathematical inherit",
                            "name": "alignment-baseline",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "baseline sub super inherit",
                            "name": "baseline-shift",
                            "value-syntax": "css_percentage_or_length"
                        },
                        {
                            "enum-values": "inherit initial",
                            "name": "color",
                            "value-syntax": "css_color"
                        },
                        {
                            "enum-values": "inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit initial",
                            "name": "display",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "ltr rtl inherit",
                            "name": "direction",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "auto use-script no-change reset-size ideographic alphabetic hanging mathematical central middle text-after-edge text-before-edge inherit",
                            "name": "dominant-baseline",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none currentColor inherit",
                            "name": "fill",
                            "value-syntax": "svg_paint_or_css_color"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "fill-opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "nonzero evenodd inherit",
                            "name": "fill-rule",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "caption icon menu message-box small-caption status-bar inherit",
                            "name": "font",
                            "value-syntax": "css_font"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "font-family",
                            "value-syntax": "comma_separated_css_font_family_followed_by_generic_family"
                        },
                        {
                            "enum-values": "smaller larger xx-small x-small small medium large x-large xx-large inherit initial",
                            "name": "font-size",
                            "value-syntax": "css_percentage_or_length"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "font-size-adjust",
                            "value-syntax": "floating_point_number"
                        },
                        {
                            "enum-values": "normal wider narrower ultra-condensed extra-condensed condensed semi-condensed semi-expanded expanded extra-expanded ultra-expanded inherit",
                            "name": "font-stretch",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "normal italic oblique inherit initial",
                            "name": "font-style",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "normal small-caps inherit initial",
                            "name": "font-variant",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "normal bold bolder lighter 100 200 300 400 500 600 700 800 900 inherit initial",
                            "name": "font-weight",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "glyph-orientation-horizontal",
                            "value-syntax": "css_angle"
                        },
                        {
                            "enum-values": "auto inherit",
                            "name": "glyph-orientation-vertical",
                            "value-syntax": "css_angle"
                        },
                        {
                            "enum-values": "auto inherit",
                            "name": "kerning",
                            "value-syntax": "css_length"
                        },
                        {
                            "enum-values": "normal inherit initial",
                            "name": "letter-spacing",
                            "value-syntax": "css_length"
                        },
                        {
                            "enum-values": "none currentColor inherit",
                            "name": "stroke",
                            "value-syntax": "svg_paint_or_css_color"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "stroke-dasharray",
                            "value-syntax": "comma_or_space_separated_css_percentage_or_length"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-dashoffset",
                            "value-syntax": "css_percentage_or_length"
                        },
                        {
                            "enum-values": "butt round square inherit",
                            "name": "stroke-linecap",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "miter round bevel inherit",
                            "name": "stroke-linejoin",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-miterlimit",
                            "value-syntax": "1_or_greater_floating_point_number"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "inherit",
                            "name": "stroke-width",
                            "value-syntax": "css_percentage_or_length"
                        },
                        {
                            "enum-values": "start middle end inherit",
                            "name": "text-anchor",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none underline overline line-through blink inherit",
                            "name": "text-decoration",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "normal embed bidi-override inherit",
                            "name": "unicode-bidi",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "visible hidden collapse inherit initial",
                            "name": "visibility",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "normal inherit initial",
                            "name": "word-spacing",
                            "value-syntax": "css_length"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "tspan",
                        "namespace": "SVG"
                    }
                ]
            },
            {
                "name": "SVGUnitTypes",
                "extends": "Object",
                "static": "1",
                "constants": {
                    "constant": [
                        {
                            "name": "SVG_UNIT_TYPE_OBJECTBOUNDINGBOX",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "SVG_UNIT_TYPE_UNKNOWN",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        },
                        {
                            "name": "SVG_UNIT_TYPE_USERSPACEONUSE",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        }
                    ]
                }
            },
            {
                "name": "SVGUseElement",
                "extends": "SVGGraphicsElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "none inherit",
                            "name": "clip-path",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "nonzero evenodd inherit",
                            "name": "clip-rule",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "auto default none context-menu help pointer progress wait cell crosshair text vertical-text alias copy move no-drop not-allowed e-resize n-resize ne-resize nw-resize s-resize se-resize sw-resize w-resize ew-resize ns-resize nesw-resize nwse-resize col-resize row-resize all-scroll zoom-in zoom-out inherit",
                            "name": "cursor",
                            "value-syntax": "comma_separated_css_url_with_optional_x_y_offset_followed_by_enum"
                        },
                        {
                            "enum-values": "inline block inline-block list-item table inline-table table-header-group table-footer-group table-row-group table-column-group table-row table-column table-cell table-caption run-in ruby ruby-base ruby-text ruby-base-container flex inline-flex -ms-grid -ms-inline-grid none inherit initial",
                            "name": "display",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "filter",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "none inherit",
                            "name": "mask",
                            "value-syntax": "css_url_of_local_id_ref"
                        },
                        {
                            "enum-values": "inherit initial",
                            "name": "opacity",
                            "value-syntax": "0_to_1_floating_point_number"
                        },
                        {
                            "enum-values": "auto none visiblePainted visibleFill visibleStroke visible painted fill stroke all inherit initial",
                            "name": "pointer-events",
                            "value-syntax": "enum"
                        },
                        {
                            "enum-values": "visible hidden collapse inherit initial",
                            "name": "visibility",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "use",
                        "namespace": "SVG"
                    }
                ],
                "implements": [
                    "SVGURIReference"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "animatedInstanceRoot",
                            "read-only": "1",
                            "type": "SVGElementInstance"
                        },
                        {
                            "name": "height",
                            "content-attribute": "height",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "instanceRoot",
                            "read-only": "1",
                            "type": "SVGElementInstance"
                        },
                        {
                            "name": "width",
                            "content-attribute": "width",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "x",
                            "content-attribute": "x",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "y",
                            "content-attribute": "y",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        }
                    ]
                }
            },
            {
                "name": "SVGViewElement",
                "extends": "SVGElement",
                "anonymous-content-attributes": {
                    "parsedattribute": [
                        {
                            "enum-values": "false true",
                            "name": "externalResourcesRequired",
                            "value-syntax": "enum"
                        }
                    ]
                },
                "element": [
                    {
                        "name": "view",
                        "namespace": "SVG"
                    }
                ],
                "implements": [
                    "SVGZoomAndPan",
                    "SVGFitToViewBox"
                ],
                "properties": {
                    "property": [
                        {
                            "name": "viewTarget",
                            "content-attribute": "viewTarget",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "space_separated_urls",
                            "read-only": "1",
                            "type": "SVGStringList"
                        }
                    ]
                }
            },
            {
                "name": "SVGZoomAndPan",
                "extends": "Object",
                "static": "1",
                "constants": {
                    "constant": [
                        {
                            "name": "SVG_ZOOMANDPAN_DISABLE",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "SVG_ZOOMANDPAN_MAGNIFY",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "SVG_ZOOMANDPAN_UNKNOWN",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "zoomAndPan",
                            "content-attribute": "zoomAndPan",
                            "content-attribute-enum-values": "disable magnify",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "read-only": "1",
                            "type": "unsigned short"
                        }
                    ]
                }
            },
            {
                "name": "SVGZoomEvent",
                "extends": "UIEvent",
                "properties": {
                    "property": [
                        {
                            "name": "newScale",
                            "read-only": "1",
                            "type": "float"
                        },
                        {
                            "name": "newTranslate",
                            "read-only": "1",
                            "type": "SVGPoint"
                        },
                        {
                            "name": "previousScale",
                            "read-only": "1",
                            "type": "float"
                        },
                        {
                            "name": "previousTranslate",
                            "read-only": "1",
                            "type": "SVGPoint"
                        },
                        {
                            "name": "zoomRectScreen",
                            "read-only": "1",
                            "type": "SVGRect"
                        }
                    ]
                }
            },
            {
                "name": "SyncManager",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "getTags",
                            "type": "Promise<sequence<DOMString>>"
                        },
                        {
                            "name": "register",
                            "type": "Promise<void>",
                            "param": [
                                {
                                    "name": "tag",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "Text",
                "extends": "CharacterData",
                "events": {
                    "event": [
                        {
                            "name": "DOMNodeInserted",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "type": "MutationEvent"
                        },
                        {
                            "name": "DOMNodeRemoved",
                            "bubbles": "1",
                            "dispatch": "sync",
                            "type": "MutationEvent"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "splitText",
                            "type": "Text",
                            "param": [
                                {
                                    "name": "offset",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "wholeText",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "TextEvent",
                "extends": "UIEvent",
                "constants": {
                    "constant": [
                        {
                            "name": "DOM_INPUT_METHOD_DROP",
                            "type": "unsigned long",
                            "value": [
                                "0x03"
                            ]
                        },
                        {
                            "name": "DOM_INPUT_METHOD_HANDWRITING",
                            "type": "unsigned long",
                            "value": [
                                "0x06"
                            ]
                        },
                        {
                            "name": "DOM_INPUT_METHOD_IME",
                            "type": "unsigned long",
                            "value": [
                                "0x04"
                            ]
                        },
                        {
                            "name": "DOM_INPUT_METHOD_KEYBOARD",
                            "type": "unsigned long",
                            "value": [
                                "0x01"
                            ]
                        },
                        {
                            "name": "DOM_INPUT_METHOD_MULTIMODAL",
                            "type": "unsigned long",
                            "value": [
                                "0x08"
                            ]
                        },
                        {
                            "name": "DOM_INPUT_METHOD_OPTION",
                            "type": "unsigned long",
                            "value": [
                                "0x05"
                            ]
                        },
                        {
                            "name": "DOM_INPUT_METHOD_PASTE",
                            "type": "unsigned long",
                            "value": [
                                "0x02"
                            ]
                        },
                        {
                            "name": "DOM_INPUT_METHOD_SCRIPT",
                            "type": "unsigned long",
                            "value": [
                                "0x09"
                            ]
                        },
                        {
                            "name": "DOM_INPUT_METHOD_UNKNOWN",
                            "type": "unsigned long",
                            "value": [
                                "0x00"
                            ]
                        },
                        {
                            "name": "DOM_INPUT_METHOD_VOICE",
                            "type": "unsigned long",
                            "value": [
                                "0x07"
                            ]
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "initTextEvent",
                            "type": "void",
                            "param": [
                                {
                                    "name": "typeArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "canBubbleArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "cancelableArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "viewArg",
                                    "type": "Window"
                                },
                                {
                                    "name": "dataArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "inputMethod",
                                    "type": "unsigned long"
                                },
                                {
                                    "name": "locale",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "data",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "inputMethod",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "locale",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "TextMetrics",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "width",
                            "read-only": "1",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "TextTrack",
                "extends": "EventTarget",
                "constants": {
                    "constant": [
                        {
                            "name": "DISABLED",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        },
                        {
                            "name": "ERROR",
                            "type": "unsigned short",
                            "value": [
                                "3"
                            ]
                        },
                        {
                            "name": "HIDDEN",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "LOADED",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "LOADING",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "NONE",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        },
                        {
                            "name": "SHOWING",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        }
                    ]
                },
                "events": {
                    "event": [
                        {
                            "name": "cuechange",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "error",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "load",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "addCue",
                            "type": "void",
                            "param": [
                                {
                                    "name": "cue",
                                    "type": "TextTrackCue"
                                }
                            ]
                        },
                        {
                            "name": "removeCue",
                            "type": "void",
                            "param": [
                                {
                                    "name": "cue",
                                    "type": "TextTrackCue"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "activeCues",
                            "read-only": "1",
                            "type": "TextTrackCueList"
                        },
                        {
                            "name": "cues",
                            "read-only": "1",
                            "type": "TextTrackCueList"
                        },
                        {
                            "name": "inBandMetadataTrackDispatchType",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "kind",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "label",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "language",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "mode",
                            "type": "(TextTrackMode or unsigned short)"
                        },
                        {
                            "name": "oncuechange",
                            "event-handler": "cuechange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onerror",
                            "event-handler": "error",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onload",
                            "event-handler": "load",
                            "type": "EventHandler"
                        },
                        {
                            "name": "readyState",
                            "read-only": "1",
                            "type": "unsigned short"
                        }
                    ]
                }
            },
            {
                "name": "TextTrackCue",
                "extends": "EventTarget",
                "constructor": {
                    "param": [
                        {
                            "name": "startTime",
                            "type": "double"
                        },
                        {
                            "name": "endTime",
                            "type": "double"
                        },
                        {
                            "name": "text",
                            "type": "DOMString"
                        }
                    ]
                },
                "events": {
                    "event": [
                        {
                            "name": "enter",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "exit",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "getCueAsHTML",
                            "type": "DocumentFragment"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "endTime",
                            "type": "double"
                        },
                        {
                            "name": "id",
                            "type": "DOMString"
                        },
                        {
                            "name": "onenter",
                            "event-handler": "enter",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onexit",
                            "event-handler": "exit",
                            "type": "EventHandler"
                        },
                        {
                            "name": "pauseOnExit",
                            "type": "boolean"
                        },
                        {
                            "name": "startTime",
                            "type": "double"
                        },
                        {
                            "name": "text",
                            "type": "DOMString"
                        },
                        {
                            "name": "track",
                            "read-only": "1",
                            "type": "TextTrack"
                        }
                    ]
                }
            },
            {
                "name": "TextTrackCueList",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "getCueById",
                            "type": "TextTrackCue",
                            "param": [
                                {
                                    "name": "id",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "item",
                            "getter": "1",
                            "type": "TextTrackCue",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "length",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "TextTrackList",
                "extends": "EventTarget",
                "events": {
                    "event": [
                        {
                            "name": "addtrack",
                            "dispatch": "async",
                            "skips-window": "1",
                            "type": "TrackEvent"
                        },
                        {
                            "name": "removetrack",
                            "dispatch": "async",
                            "skips-window": "1",
                            "type": "TrackEvent"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "item",
                            "getter": "1",
                            "type": "TextTrack",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "length",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "onaddtrack",
                            "event-handler": "addtrack",
                            "nullable": "1",
                            "type": "EventHandler"
                        }
                    ]
                }
            },
            {
                "name": "TimeRanges",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "end",
                            "type": "double",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "name": "start",
                            "type": "double",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "length",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "Touch",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "clientX",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "clientY",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "identifier",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "pageX",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "pageY",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "screenX",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "screenY",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "target",
                            "read-only": "1",
                            "type": "EventTarget"
                        }
                    ]
                }
            },
            {
                "name": "TouchEvent",
                "extends": "UIEvent",
                "properties": {
                    "property": [
                        {
                            "name": "altKey",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "changedTouches",
                            "read-only": "1",
                            "type": "TouchList"
                        },
                        {
                            "name": "charCode",
                            "read-only": "1",
                            "type": "short"
                        },
                        {
                            "name": "ctrlKey",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "keyCode",
                            "read-only": "1",
                            "type": "short"
                        },
                        {
                            "name": "metaKey",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "shiftKey",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "targetTouches",
                            "read-only": "1",
                            "type": "TouchList"
                        },
                        {
                            "name": "touches",
                            "read-only": "1",
                            "type": "TouchList"
                        },
                        {
                            "name": "which",
                            "read-only": "1",
                            "type": "unsigned short"
                        }
                    ]
                }
            },
            {
                "name": "TouchList",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "item",
                            "getter": "1",
                            "nullable": "1",
                            "type": "Touch",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "length",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "TrackEvent",
                "extends": "Event",
                "constructor": {
                    "param": [
                        {
                            "name": "typeArg",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "optional": "1",
                            "type": "TrackEventInit"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "track",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "(VideoTrack or AudioTrack or TextTrack)"
                        }
                    ]
                }
            },
            {
                "name": "TransitionEvent",
                "extends": "Event",
                "constructor": {
                    "param": [
                        {
                            "name": "typeArg",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "optional": "1",
                            "type": "TransitionEventInit"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "initTransitionEvent",
                            "type": "void",
                            "param": [
                                {
                                    "name": "typeArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "canBubbleArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "cancelableArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "propertyNameArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "elapsedTimeArg",
                                    "type": "float"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "elapsedTime",
                            "read-only": "1",
                            "type": "float"
                        },
                        {
                            "name": "propertyName",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "TreeWalker",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "firstChild",
                            "type": "Node"
                        },
                        {
                            "name": "lastChild",
                            "type": "Node"
                        },
                        {
                            "name": "nextNode",
                            "type": "Node"
                        },
                        {
                            "name": "nextSibling",
                            "type": "Node"
                        },
                        {
                            "name": "parentNode",
                            "type": "Node"
                        },
                        {
                            "name": "previousNode",
                            "type": "Node"
                        },
                        {
                            "name": "previousSibling",
                            "type": "Node"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "currentNode",
                            "type": "Node"
                        },
                        {
                            "name": "expandEntityReferences",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "filter",
                            "read-only": "1",
                            "type": "NodeFilter"
                        },
                        {
                            "name": "root",
                            "read-only": "1",
                            "type": "Node"
                        },
                        {
                            "name": "whatToShow",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "UIEvent",
                "extends": "Event",
                "constructor": {
                    "param": [
                        {
                            "name": "typeArg",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "optional": "1",
                            "type": "UIEventInit"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "initUIEvent",
                            "type": "void",
                            "param": [
                                {
                                    "name": "typeArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "canBubbleArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "cancelableArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "viewArg",
                                    "type": "Window"
                                },
                                {
                                    "name": "detailArg",
                                    "type": "long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "detail",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "view",
                            "read-only": "1",
                            "type": "Window"
                        }
                    ]
                }
            },
            {
                "name": "UnviewableContentIdentifiedEvent",
                "extends": "NavigationEventWithReferrer",
                "tags": "MSAppOnly",
                "properties": {
                    "property": [
                        {
                            "name": "mediaType",
                            "read-only": "1",
                            "tags": "MSAppOnly",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "URL",
                "extends": "Object",
                "constructor": {
                    "param": [
                        {
                            "name": "url",
                            "type": "DOMString"
                        },
                        {
                            "name": "base",
                            "optional": "1",
                            "type": "DOMString"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "createObjectURL",
                            "static": "1",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "object",
                                    "type": "any"
                                },
                                {
                                    "name": "options",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "ObjectURLOptions"
                                }
                            ]
                        },
                        {
                            "name": "revokeObjectURL",
                            "static": "1",
                            "type": "void",
                            "param": [
                                {
                                    "name": "url",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "toString",
                            "stringifier": "1",
                            "type": "DOMString"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "hash",
                            "type": "DOMString"
                        },
                        {
                            "name": "host",
                            "type": "DOMString"
                        },
                        {
                            "name": "hostname",
                            "type": "DOMString"
                        },
                        {
                            "name": "href",
                            "stringifier": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "origin",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "password",
                            "type": "DOMString"
                        },
                        {
                            "name": "pathname",
                            "type": "DOMString"
                        },
                        {
                            "name": "port",
                            "type": "DOMString"
                        },
                        {
                            "name": "protocol",
                            "type": "DOMString"
                        },
                        {
                            "name": "search",
                            "type": "DOMString"
                        },
                        {
                            "name": "username",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "ValidityState",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "badInput",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "customError",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "patternMismatch",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "rangeOverflow",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "rangeUnderflow",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "stepMismatch",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "tooLong",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "typeMismatch",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "valid",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "valueMissing",
                            "read-only": "1",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "VideoPlaybackQuality",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "corruptedVideoFrames",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "creationTime",
                            "read-only": "1",
                            "type": "DOMHighResTimeStamp"
                        },
                        {
                            "name": "droppedVideoFrames",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "totalFrameDelay",
                            "read-only": "1",
                            "type": "double"
                        },
                        {
                            "name": "totalVideoFrames",
                            "read-only": "1",
                            "type": "unsigned long"
                        }
                    ]
                }
            },
            {
                "name": "VideoTrack",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "id",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "kind",
                            "type": "DOMString"
                        },
                        {
                            "name": "label",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "language",
                            "type": "DOMString"
                        },
                        {
                            "name": "selected",
                            "type": "boolean"
                        },
                        {
                            "name": "sourceBuffer",
                            "read-only": "1",
                            "type": "SourceBuffer"
                        }
                    ]
                }
            },
            {
                "name": "VideoTrackList",
                "extends": "EventTarget",
                "events": {
                    "event": [
                        {
                            "name": "addtrack",
                            "dispatch": "async",
                            "skips-window": "1",
                            "type": "TrackEvent"
                        },
                        {
                            "name": "removetrack",
                            "dispatch": "async",
                            "skips-window": "1",
                            "type": "TrackEvent"
                        },
                        {
                            "name": "change",
                            "dispatch": "async",
                            "skips-window": "1",
                            "type": "Event"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "getTrackById",
                            "nullable": "1",
                            "type": "VideoTrack",
                            "param": [
                                {
                                    "name": "id",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "item",
                            "getter": "1",
                            "type": "VideoTrack",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "length",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "onaddtrack",
                            "event-handler": "addtrack",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onchange",
                            "event-handler": "change",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onremovetrack",
                            "event-handler": "removetrack",
                            "type": "EventHandler"
                        },
                        {
                            "name": "selectedIndex",
                            "read-only": "1",
                            "type": "long"
                        }
                    ]
                }
            },
            {
                "name": "WaveShaperNode",
                "extends": "AudioNode",
                "properties": {
                    "property": [
                        {
                            "name": "curve",
                            "nullable": "1",
                            "type": "Float32Array"
                        },
                        {
                            "name": "oversample",
                            "type": "OverSampleType"
                        }
                    ]
                }
            },
            {
                "name": "WebAuthentication",
                "extends": "Object",
                "secure-context": "1",
                "methods": {
                    "method": [
                        {
                            "name": "getAssertion",
                            "type": "Promise<WebAuthnAssertion>",
                            "param": [
                                {
                                    "name": "assertionChallenge",
                                    "type": "BufferSource"
                                },
                                {
                                    "name": "options",
                                    "optional": "1",
                                    "type": "AssertionOptions"
                                }
                            ]
                        },
                        {
                            "name": "makeCredential",
                            "type": "Promise<ScopedCredentialInfo>",
                            "param": [
                                {
                                    "name": "accountInformation",
                                    "type": "Account"
                                },
                                {
                                    "name": "cryptoParameters",
                                    "type": "sequence<ScopedCredentialParameters>"
                                },
                                {
                                    "name": "attestationChallenge",
                                    "type": "BufferSource"
                                },
                                {
                                    "name": "options",
                                    "optional": "1",
                                    "type": "ScopedCredentialOptions"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "WebAuthnAssertion",
                "extends": "Object",
                "secure-context": "1",
                "properties": {
                    "property": [
                        {
                            "name": "authenticatorData",
                            "read-only": "1",
                            "type": "ArrayBuffer"
                        },
                        {
                            "name": "clientData",
                            "read-only": "1",
                            "type": "ArrayBuffer"
                        },
                        {
                            "name": "credential",
                            "read-only": "1",
                            "type": "ScopedCredential"
                        },
                        {
                            "name": "signature",
                            "read-only": "1",
                            "type": "ArrayBuffer"
                        }
                    ]
                }
            },
            {
                "name": "WEBGL_compressed_texture_s3tc",
                "extends": "Object",
                "constants": {
                    "constant": [
                        {
                            "name": "COMPRESSED_RGB_S3TC_DXT1_EXT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x83F0"
                            ]
                        },
                        {
                            "name": "COMPRESSED_RGBA_S3TC_DXT1_EXT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x83F1"
                            ]
                        },
                        {
                            "name": "COMPRESSED_RGBA_S3TC_DXT3_EXT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x83F2"
                            ]
                        },
                        {
                            "name": "COMPRESSED_RGBA_S3TC_DXT5_EXT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x83F3"
                            ]
                        }
                    ]
                }
            },
            {
                "name": "WEBGL_debug_renderer_info",
                "extends": "Object",
                "constants": {
                    "constant": [
                        {
                            "name": "UNMASKED_RENDERER_WEBGL",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x9246"
                            ]
                        },
                        {
                            "name": "UNMASKED_VENDOR_WEBGL",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x9245"
                            ]
                        }
                    ]
                }
            },
            {
                "name": "WEBGL_depth_texture",
                "extends": "Object",
                "constants": {
                    "constant": [
                        {
                            "name": "UNSIGNED_INT_24_8_WEBGL",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84FA"
                            ]
                        }
                    ]
                }
            },
            {
                "name": "WebGLActiveInfo",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "name",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "size",
                            "read-only": "1",
                            "type": "long",
                            "type-original": "GLint"
                        },
                        {
                            "name": "type",
                            "read-only": "1",
                            "type": "unsigned long",
                            "type-original": "GLenum"
                        }
                    ]
                }
            },
            {
                "name": "WebGLBuffer",
                "extends": "WebGLObject"
            },
            {
                "name": "WebGLContextEvent",
                "extends": "Event",
                "constructor": {
                    "param": [
                        {
                            "name": "typeArg",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "optional": "1",
                            "type": "WebGLContextEventInit"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "statusMessage",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "WebGLFramebuffer",
                "extends": "WebGLObject"
            },
            {
                "name": "WebGLObject",
                "extends": "Object"
            },
            {
                "name": "WebGLProgram",
                "extends": "WebGLObject"
            },
            {
                "name": "WebGLRenderbuffer",
                "extends": "WebGLObject"
            },
            {
                "name": "WebGLRenderingContext",
                "extends": "Object",
                "constants": {
                    "constant": [
                        {
                            "name": "ACTIVE_ATTRIBUTES",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8B89"
                            ]
                        },
                        {
                            "name": "ACTIVE_TEXTURE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84E0"
                            ]
                        },
                        {
                            "name": "ACTIVE_UNIFORMS",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8B86"
                            ]
                        },
                        {
                            "name": "ALIASED_LINE_WIDTH_RANGE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x846E"
                            ]
                        },
                        {
                            "name": "ALIASED_POINT_SIZE_RANGE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x846D"
                            ]
                        },
                        {
                            "name": "ALPHA",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x1906"
                            ]
                        },
                        {
                            "name": "ALPHA_BITS",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0D55"
                            ]
                        },
                        {
                            "name": "ALWAYS",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0207"
                            ]
                        },
                        {
                            "name": "ARRAY_BUFFER",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8892"
                            ]
                        },
                        {
                            "name": "ARRAY_BUFFER_BINDING",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8894"
                            ]
                        },
                        {
                            "name": "ATTACHED_SHADERS",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8B85"
                            ]
                        },
                        {
                            "name": "BACK",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0405"
                            ]
                        },
                        {
                            "name": "BLEND",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0BE2"
                            ]
                        },
                        {
                            "name": "BLEND_COLOR",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8005"
                            ]
                        },
                        {
                            "name": "BLEND_DST_ALPHA",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x80CA"
                            ]
                        },
                        {
                            "name": "BLEND_DST_RGB",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x80C8"
                            ]
                        },
                        {
                            "name": "BLEND_EQUATION",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8009"
                            ]
                        },
                        {
                            "name": "BLEND_EQUATION_ALPHA",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x883D"
                            ]
                        },
                        {
                            "name": "BLEND_EQUATION_RGB",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8009"
                            ]
                        },
                        {
                            "name": "BLEND_SRC_ALPHA",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x80CB"
                            ]
                        },
                        {
                            "name": "BLEND_SRC_RGB",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x80C9"
                            ]
                        },
                        {
                            "name": "BLUE_BITS",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0D54"
                            ]
                        },
                        {
                            "name": "BOOL",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8B56"
                            ]
                        },
                        {
                            "name": "BOOL_VEC2",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8B57"
                            ]
                        },
                        {
                            "name": "BOOL_VEC3",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8B58"
                            ]
                        },
                        {
                            "name": "BOOL_VEC4",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8B59"
                            ]
                        },
                        {
                            "name": "BROWSER_DEFAULT_WEBGL",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x9244"
                            ]
                        },
                        {
                            "name": "BUFFER_SIZE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8764"
                            ]
                        },
                        {
                            "name": "BUFFER_USAGE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8765"
                            ]
                        },
                        {
                            "name": "BYTE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x1400"
                            ]
                        },
                        {
                            "name": "CCW",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0901"
                            ]
                        },
                        {
                            "name": "CLAMP_TO_EDGE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x812F"
                            ]
                        },
                        {
                            "name": "COLOR_ATTACHMENT0",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8CE0"
                            ]
                        },
                        {
                            "name": "COLOR_BUFFER_BIT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x00004000"
                            ]
                        },
                        {
                            "name": "COLOR_CLEAR_VALUE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0C22"
                            ]
                        },
                        {
                            "name": "COLOR_WRITEMASK",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0C23"
                            ]
                        },
                        {
                            "name": "COMPILE_STATUS",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8B81"
                            ]
                        },
                        {
                            "name": "COMPRESSED_TEXTURE_FORMATS",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x86A3"
                            ]
                        },
                        {
                            "name": "CONSTANT_ALPHA",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8003"
                            ]
                        },
                        {
                            "name": "CONSTANT_COLOR",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8001"
                            ]
                        },
                        {
                            "name": "CONTEXT_LOST_WEBGL",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x9242"
                            ]
                        },
                        {
                            "name": "CULL_FACE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0B44"
                            ]
                        },
                        {
                            "name": "CULL_FACE_MODE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0B45"
                            ]
                        },
                        {
                            "name": "CURRENT_PROGRAM",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8B8D"
                            ]
                        },
                        {
                            "name": "CURRENT_VERTEX_ATTRIB",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8626"
                            ]
                        },
                        {
                            "name": "CW",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0900"
                            ]
                        },
                        {
                            "name": "DECR",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x1E03"
                            ]
                        },
                        {
                            "name": "DECR_WRAP",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8508"
                            ]
                        },
                        {
                            "name": "DELETE_STATUS",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8B80"
                            ]
                        },
                        {
                            "name": "DEPTH_ATTACHMENT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8D00"
                            ]
                        },
                        {
                            "name": "DEPTH_BITS",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0D56"
                            ]
                        },
                        {
                            "name": "DEPTH_BUFFER_BIT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x00000100"
                            ]
                        },
                        {
                            "name": "DEPTH_CLEAR_VALUE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0B73"
                            ]
                        },
                        {
                            "name": "DEPTH_COMPONENT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x1902"
                            ]
                        },
                        {
                            "name": "DEPTH_COMPONENT16",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x81A5"
                            ]
                        },
                        {
                            "name": "DEPTH_FUNC",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0B74"
                            ]
                        },
                        {
                            "name": "DEPTH_RANGE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0B70"
                            ]
                        },
                        {
                            "name": "DEPTH_STENCIL",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84F9"
                            ]
                        },
                        {
                            "name": "DEPTH_STENCIL_ATTACHMENT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x821A"
                            ]
                        },
                        {
                            "name": "DEPTH_TEST",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0B71"
                            ]
                        },
                        {
                            "name": "DEPTH_WRITEMASK",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0B72"
                            ]
                        },
                        {
                            "name": "DITHER",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0BD0"
                            ]
                        },
                        {
                            "name": "DONT_CARE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x1100"
                            ]
                        },
                        {
                            "name": "DST_ALPHA",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0304"
                            ]
                        },
                        {
                            "name": "DST_COLOR",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0306"
                            ]
                        },
                        {
                            "name": "DYNAMIC_DRAW",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x88E8"
                            ]
                        },
                        {
                            "name": "ELEMENT_ARRAY_BUFFER",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8893"
                            ]
                        },
                        {
                            "name": "ELEMENT_ARRAY_BUFFER_BINDING",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8895"
                            ]
                        },
                        {
                            "name": "EQUAL",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0202"
                            ]
                        },
                        {
                            "name": "FASTEST",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x1101"
                            ]
                        },
                        {
                            "name": "FLOAT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x1406"
                            ]
                        },
                        {
                            "name": "FLOAT_MAT2",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8B5A"
                            ]
                        },
                        {
                            "name": "FLOAT_MAT3",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8B5B"
                            ]
                        },
                        {
                            "name": "FLOAT_MAT4",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8B5C"
                            ]
                        },
                        {
                            "name": "FLOAT_VEC2",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8B50"
                            ]
                        },
                        {
                            "name": "FLOAT_VEC3",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8B51"
                            ]
                        },
                        {
                            "name": "FLOAT_VEC4",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8B52"
                            ]
                        },
                        {
                            "name": "FRAGMENT_SHADER",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8B30"
                            ]
                        },
                        {
                            "name": "FRAMEBUFFER",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8D40"
                            ]
                        },
                        {
                            "name": "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8CD1"
                            ]
                        },
                        {
                            "name": "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8CD0"
                            ]
                        },
                        {
                            "name": "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8CD3"
                            ]
                        },
                        {
                            "name": "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8CD2"
                            ]
                        },
                        {
                            "name": "FRAMEBUFFER_BINDING",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8CA6"
                            ]
                        },
                        {
                            "name": "FRAMEBUFFER_COMPLETE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8CD5"
                            ]
                        },
                        {
                            "name": "FRAMEBUFFER_INCOMPLETE_ATTACHMENT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8CD6"
                            ]
                        },
                        {
                            "name": "FRAMEBUFFER_INCOMPLETE_DIMENSIONS",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8CD9"
                            ]
                        },
                        {
                            "name": "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8CD7"
                            ]
                        },
                        {
                            "name": "FRAMEBUFFER_UNSUPPORTED",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8CDD"
                            ]
                        },
                        {
                            "name": "FRONT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0404"
                            ]
                        },
                        {
                            "name": "FRONT_AND_BACK",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0408"
                            ]
                        },
                        {
                            "name": "FRONT_FACE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0B46"
                            ]
                        },
                        {
                            "name": "FUNC_ADD",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8006"
                            ]
                        },
                        {
                            "name": "FUNC_REVERSE_SUBTRACT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x800B"
                            ]
                        },
                        {
                            "name": "FUNC_SUBTRACT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x800A"
                            ]
                        },
                        {
                            "name": "GENERATE_MIPMAP_HINT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8192"
                            ]
                        },
                        {
                            "name": "GEQUAL",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0206"
                            ]
                        },
                        {
                            "name": "GREATER",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0204"
                            ]
                        },
                        {
                            "name": "GREEN_BITS",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0D53"
                            ]
                        },
                        {
                            "name": "HIGH_FLOAT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8DF2"
                            ]
                        },
                        {
                            "name": "HIGH_INT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8DF5"
                            ]
                        },
                        {
                            "name": "IMPLEMENTATION_COLOR_READ_FORMAT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8B9B"
                            ]
                        },
                        {
                            "name": "IMPLEMENTATION_COLOR_READ_TYPE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8B9A"
                            ]
                        },
                        {
                            "name": "INCR",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x1E02"
                            ]
                        },
                        {
                            "name": "INCR_WRAP",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8507"
                            ]
                        },
                        {
                            "name": "INT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x1404"
                            ]
                        },
                        {
                            "name": "INT_VEC2",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8B53"
                            ]
                        },
                        {
                            "name": "INT_VEC3",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8B54"
                            ]
                        },
                        {
                            "name": "INT_VEC4",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8B55"
                            ]
                        },
                        {
                            "name": "INVALID_ENUM",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0500"
                            ]
                        },
                        {
                            "name": "INVALID_FRAMEBUFFER_OPERATION",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0506"
                            ]
                        },
                        {
                            "name": "INVALID_OPERATION",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0502"
                            ]
                        },
                        {
                            "name": "INVALID_VALUE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0501"
                            ]
                        },
                        {
                            "name": "INVERT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x150A"
                            ]
                        },
                        {
                            "name": "KEEP",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x1E00"
                            ]
                        },
                        {
                            "name": "LEQUAL",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0203"
                            ]
                        },
                        {
                            "name": "LESS",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0201"
                            ]
                        },
                        {
                            "name": "LINE_LOOP",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0002"
                            ]
                        },
                        {
                            "name": "LINE_STRIP",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0003"
                            ]
                        },
                        {
                            "name": "LINE_WIDTH",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0B21"
                            ]
                        },
                        {
                            "name": "LINEAR",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x2601"
                            ]
                        },
                        {
                            "name": "LINEAR_MIPMAP_LINEAR",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x2703"
                            ]
                        },
                        {
                            "name": "LINEAR_MIPMAP_NEAREST",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x2701"
                            ]
                        },
                        {
                            "name": "LINES",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0001"
                            ]
                        },
                        {
                            "name": "LINK_STATUS",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8B82"
                            ]
                        },
                        {
                            "name": "LOW_FLOAT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8DF0"
                            ]
                        },
                        {
                            "name": "LOW_INT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8DF3"
                            ]
                        },
                        {
                            "name": "LUMINANCE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x1909"
                            ]
                        },
                        {
                            "name": "LUMINANCE_ALPHA",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x190A"
                            ]
                        },
                        {
                            "name": "MAX_COMBINED_TEXTURE_IMAGE_UNITS",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8B4D"
                            ]
                        },
                        {
                            "name": "MAX_CUBE_MAP_TEXTURE_SIZE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x851C"
                            ]
                        },
                        {
                            "name": "MAX_FRAGMENT_UNIFORM_VECTORS",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8DFD"
                            ]
                        },
                        {
                            "name": "MAX_RENDERBUFFER_SIZE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84E8"
                            ]
                        },
                        {
                            "name": "MAX_TEXTURE_IMAGE_UNITS",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8872"
                            ]
                        },
                        {
                            "name": "MAX_TEXTURE_SIZE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0D33"
                            ]
                        },
                        {
                            "name": "MAX_VARYING_VECTORS",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8DFC"
                            ]
                        },
                        {
                            "name": "MAX_VERTEX_ATTRIBS",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8869"
                            ]
                        },
                        {
                            "name": "MAX_VERTEX_TEXTURE_IMAGE_UNITS",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8B4C"
                            ]
                        },
                        {
                            "name": "MAX_VERTEX_UNIFORM_VECTORS",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8DFB"
                            ]
                        },
                        {
                            "name": "MAX_VIEWPORT_DIMS",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0D3A"
                            ]
                        },
                        {
                            "name": "MEDIUM_FLOAT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8DF1"
                            ]
                        },
                        {
                            "name": "MEDIUM_INT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8DF4"
                            ]
                        },
                        {
                            "name": "MIRRORED_REPEAT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8370"
                            ]
                        },
                        {
                            "name": "NEAREST",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x2600"
                            ]
                        },
                        {
                            "name": "NEAREST_MIPMAP_LINEAR",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x2702"
                            ]
                        },
                        {
                            "name": "NEAREST_MIPMAP_NEAREST",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x2700"
                            ]
                        },
                        {
                            "name": "NEVER",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0200"
                            ]
                        },
                        {
                            "name": "NICEST",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x1102"
                            ]
                        },
                        {
                            "name": "NO_ERROR",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0"
                            ]
                        },
                        {
                            "name": "NONE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0"
                            ]
                        },
                        {
                            "name": "NOTEQUAL",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0205"
                            ]
                        },
                        {
                            "name": "ONE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "ONE_MINUS_CONSTANT_ALPHA",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8004"
                            ]
                        },
                        {
                            "name": "ONE_MINUS_CONSTANT_COLOR",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8002"
                            ]
                        },
                        {
                            "name": "ONE_MINUS_DST_ALPHA",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0305"
                            ]
                        },
                        {
                            "name": "ONE_MINUS_DST_COLOR",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0307"
                            ]
                        },
                        {
                            "name": "ONE_MINUS_SRC_ALPHA",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0303"
                            ]
                        },
                        {
                            "name": "ONE_MINUS_SRC_COLOR",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0301"
                            ]
                        },
                        {
                            "name": "OUT_OF_MEMORY",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0505"
                            ]
                        },
                        {
                            "name": "PACK_ALIGNMENT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0D05"
                            ]
                        },
                        {
                            "name": "POINTS",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0000"
                            ]
                        },
                        {
                            "name": "POLYGON_OFFSET_FACTOR",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8038"
                            ]
                        },
                        {
                            "name": "POLYGON_OFFSET_FILL",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8037"
                            ]
                        },
                        {
                            "name": "POLYGON_OFFSET_UNITS",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x2A00"
                            ]
                        },
                        {
                            "name": "RED_BITS",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0D52"
                            ]
                        },
                        {
                            "name": "RENDERBUFFER",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8D41"
                            ]
                        },
                        {
                            "name": "RENDERBUFFER_ALPHA_SIZE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8D53"
                            ]
                        },
                        {
                            "name": "RENDERBUFFER_BINDING",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8CA7"
                            ]
                        },
                        {
                            "name": "RENDERBUFFER_BLUE_SIZE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8D52"
                            ]
                        },
                        {
                            "name": "RENDERBUFFER_DEPTH_SIZE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8D54"
                            ]
                        },
                        {
                            "name": "RENDERBUFFER_GREEN_SIZE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8D51"
                            ]
                        },
                        {
                            "name": "RENDERBUFFER_HEIGHT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8D43"
                            ]
                        },
                        {
                            "name": "RENDERBUFFER_INTERNAL_FORMAT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8D44"
                            ]
                        },
                        {
                            "name": "RENDERBUFFER_RED_SIZE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8D50"
                            ]
                        },
                        {
                            "name": "RENDERBUFFER_STENCIL_SIZE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8D55"
                            ]
                        },
                        {
                            "name": "RENDERBUFFER_WIDTH",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8D42"
                            ]
                        },
                        {
                            "name": "RENDERER",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x1F01"
                            ]
                        },
                        {
                            "name": "REPEAT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x2901"
                            ]
                        },
                        {
                            "name": "REPLACE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x1E01"
                            ]
                        },
                        {
                            "name": "RGB",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x1907"
                            ]
                        },
                        {
                            "name": "RGB5_A1",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8057"
                            ]
                        },
                        {
                            "name": "RGB565",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8D62"
                            ]
                        },
                        {
                            "name": "RGBA",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x1908"
                            ]
                        },
                        {
                            "name": "RGBA4",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8056"
                            ]
                        },
                        {
                            "name": "SAMPLE_ALPHA_TO_COVERAGE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x809E"
                            ]
                        },
                        {
                            "name": "SAMPLE_BUFFERS",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x80A8"
                            ]
                        },
                        {
                            "name": "SAMPLE_COVERAGE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x80A0"
                            ]
                        },
                        {
                            "name": "SAMPLE_COVERAGE_INVERT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x80AB"
                            ]
                        },
                        {
                            "name": "SAMPLE_COVERAGE_VALUE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x80AA"
                            ]
                        },
                        {
                            "name": "SAMPLER_2D",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8B5E"
                            ]
                        },
                        {
                            "name": "SAMPLER_CUBE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8B60"
                            ]
                        },
                        {
                            "name": "SAMPLES",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x80A9"
                            ]
                        },
                        {
                            "name": "SCISSOR_BOX",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0C10"
                            ]
                        },
                        {
                            "name": "SCISSOR_TEST",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0C11"
                            ]
                        },
                        {
                            "name": "SHADER_TYPE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8B4F"
                            ]
                        },
                        {
                            "name": "SHADING_LANGUAGE_VERSION",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8B8C"
                            ]
                        },
                        {
                            "name": "SHORT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x1402"
                            ]
                        },
                        {
                            "name": "SRC_ALPHA",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0302"
                            ]
                        },
                        {
                            "name": "SRC_ALPHA_SATURATE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0308"
                            ]
                        },
                        {
                            "name": "SRC_COLOR",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0300"
                            ]
                        },
                        {
                            "name": "STATIC_DRAW",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x88E4"
                            ]
                        },
                        {
                            "name": "STENCIL_ATTACHMENT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8D20"
                            ]
                        },
                        {
                            "name": "STENCIL_BACK_FAIL",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8801"
                            ]
                        },
                        {
                            "name": "STENCIL_BACK_FUNC",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8800"
                            ]
                        },
                        {
                            "name": "STENCIL_BACK_PASS_DEPTH_FAIL",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8802"
                            ]
                        },
                        {
                            "name": "STENCIL_BACK_PASS_DEPTH_PASS",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8803"
                            ]
                        },
                        {
                            "name": "STENCIL_BACK_REF",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8CA3"
                            ]
                        },
                        {
                            "name": "STENCIL_BACK_VALUE_MASK",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8CA4"
                            ]
                        },
                        {
                            "name": "STENCIL_BACK_WRITEMASK",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8CA5"
                            ]
                        },
                        {
                            "name": "STENCIL_BITS",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0D57"
                            ]
                        },
                        {
                            "name": "STENCIL_BUFFER_BIT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x00000400"
                            ]
                        },
                        {
                            "name": "STENCIL_CLEAR_VALUE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0B91"
                            ]
                        },
                        {
                            "name": "STENCIL_FAIL",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0B94"
                            ]
                        },
                        {
                            "name": "STENCIL_FUNC",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0B92"
                            ]
                        },
                        {
                            "name": "STENCIL_INDEX",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x1901"
                            ]
                        },
                        {
                            "name": "STENCIL_INDEX8",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8D48"
                            ]
                        },
                        {
                            "name": "STENCIL_PASS_DEPTH_FAIL",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0B95"
                            ]
                        },
                        {
                            "name": "STENCIL_PASS_DEPTH_PASS",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0B96"
                            ]
                        },
                        {
                            "name": "STENCIL_REF",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0B97"
                            ]
                        },
                        {
                            "name": "STENCIL_TEST",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0B90"
                            ]
                        },
                        {
                            "name": "STENCIL_VALUE_MASK",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0B93"
                            ]
                        },
                        {
                            "name": "STENCIL_WRITEMASK",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0B98"
                            ]
                        },
                        {
                            "name": "STREAM_DRAW",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x88E0"
                            ]
                        },
                        {
                            "name": "SUBPIXEL_BITS",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0D50"
                            ]
                        },
                        {
                            "name": "TEXTURE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x1702"
                            ]
                        },
                        {
                            "name": "TEXTURE_2D",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0DE1"
                            ]
                        },
                        {
                            "name": "TEXTURE_BINDING_2D",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8069"
                            ]
                        },
                        {
                            "name": "TEXTURE_BINDING_CUBE_MAP",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8514"
                            ]
                        },
                        {
                            "name": "TEXTURE_CUBE_MAP",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8513"
                            ]
                        },
                        {
                            "name": "TEXTURE_CUBE_MAP_NEGATIVE_X",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8516"
                            ]
                        },
                        {
                            "name": "TEXTURE_CUBE_MAP_NEGATIVE_Y",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8518"
                            ]
                        },
                        {
                            "name": "TEXTURE_CUBE_MAP_NEGATIVE_Z",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x851A"
                            ]
                        },
                        {
                            "name": "TEXTURE_CUBE_MAP_POSITIVE_X",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8515"
                            ]
                        },
                        {
                            "name": "TEXTURE_CUBE_MAP_POSITIVE_Y",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8517"
                            ]
                        },
                        {
                            "name": "TEXTURE_CUBE_MAP_POSITIVE_Z",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8519"
                            ]
                        },
                        {
                            "name": "TEXTURE_MAG_FILTER",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x2800"
                            ]
                        },
                        {
                            "name": "TEXTURE_MIN_FILTER",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x2801"
                            ]
                        },
                        {
                            "name": "TEXTURE_WRAP_S",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x2802"
                            ]
                        },
                        {
                            "name": "TEXTURE_WRAP_T",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x2803"
                            ]
                        },
                        {
                            "name": "TEXTURE0",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84C0"
                            ]
                        },
                        {
                            "name": "TEXTURE1",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84C1"
                            ]
                        },
                        {
                            "name": "TEXTURE10",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84CA"
                            ]
                        },
                        {
                            "name": "TEXTURE11",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84CB"
                            ]
                        },
                        {
                            "name": "TEXTURE12",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84CC"
                            ]
                        },
                        {
                            "name": "TEXTURE13",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84CD"
                            ]
                        },
                        {
                            "name": "TEXTURE14",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84CE"
                            ]
                        },
                        {
                            "name": "TEXTURE15",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84CF"
                            ]
                        },
                        {
                            "name": "TEXTURE16",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84D0"
                            ]
                        },
                        {
                            "name": "TEXTURE17",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84D1"
                            ]
                        },
                        {
                            "name": "TEXTURE18",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84D2"
                            ]
                        },
                        {
                            "name": "TEXTURE19",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84D3"
                            ]
                        },
                        {
                            "name": "TEXTURE2",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84C2"
                            ]
                        },
                        {
                            "name": "TEXTURE20",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84D4"
                            ]
                        },
                        {
                            "name": "TEXTURE21",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84D5"
                            ]
                        },
                        {
                            "name": "TEXTURE22",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84D6"
                            ]
                        },
                        {
                            "name": "TEXTURE23",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84D7"
                            ]
                        },
                        {
                            "name": "TEXTURE24",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84D8"
                            ]
                        },
                        {
                            "name": "TEXTURE25",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84D9"
                            ]
                        },
                        {
                            "name": "TEXTURE26",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84DA"
                            ]
                        },
                        {
                            "name": "TEXTURE27",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84DB"
                            ]
                        },
                        {
                            "name": "TEXTURE28",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84DC"
                            ]
                        },
                        {
                            "name": "TEXTURE29",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84DD"
                            ]
                        },
                        {
                            "name": "TEXTURE3",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84C3"
                            ]
                        },
                        {
                            "name": "TEXTURE30",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84DE"
                            ]
                        },
                        {
                            "name": "TEXTURE31",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84DF"
                            ]
                        },
                        {
                            "name": "TEXTURE4",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84C4"
                            ]
                        },
                        {
                            "name": "TEXTURE5",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84C5"
                            ]
                        },
                        {
                            "name": "TEXTURE6",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84C6"
                            ]
                        },
                        {
                            "name": "TEXTURE7",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84C7"
                            ]
                        },
                        {
                            "name": "TEXTURE8",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84C8"
                            ]
                        },
                        {
                            "name": "TEXTURE9",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x84C9"
                            ]
                        },
                        {
                            "name": "TRIANGLE_FAN",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0006"
                            ]
                        },
                        {
                            "name": "TRIANGLE_STRIP",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0005"
                            ]
                        },
                        {
                            "name": "TRIANGLES",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0004"
                            ]
                        },
                        {
                            "name": "UNPACK_ALIGNMENT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0CF5"
                            ]
                        },
                        {
                            "name": "UNPACK_COLORSPACE_CONVERSION_WEBGL",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x9243"
                            ]
                        },
                        {
                            "name": "UNPACK_FLIP_Y_WEBGL",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x9240"
                            ]
                        },
                        {
                            "name": "UNPACK_PREMULTIPLY_ALPHA_WEBGL",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x9241"
                            ]
                        },
                        {
                            "name": "UNSIGNED_BYTE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x1401"
                            ]
                        },
                        {
                            "name": "UNSIGNED_INT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x1405"
                            ]
                        },
                        {
                            "name": "UNSIGNED_SHORT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x1403"
                            ]
                        },
                        {
                            "name": "UNSIGNED_SHORT_4_4_4_4",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8033"
                            ]
                        },
                        {
                            "name": "UNSIGNED_SHORT_5_5_5_1",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8034"
                            ]
                        },
                        {
                            "name": "UNSIGNED_SHORT_5_6_5",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8363"
                            ]
                        },
                        {
                            "name": "VALIDATE_STATUS",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8B83"
                            ]
                        },
                        {
                            "name": "VENDOR",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x1F00"
                            ]
                        },
                        {
                            "name": "VERSION",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x1F02"
                            ]
                        },
                        {
                            "name": "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x889F"
                            ]
                        },
                        {
                            "name": "VERTEX_ATTRIB_ARRAY_ENABLED",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8622"
                            ]
                        },
                        {
                            "name": "VERTEX_ATTRIB_ARRAY_NORMALIZED",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x886A"
                            ]
                        },
                        {
                            "name": "VERTEX_ATTRIB_ARRAY_POINTER",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8645"
                            ]
                        },
                        {
                            "name": "VERTEX_ATTRIB_ARRAY_SIZE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8623"
                            ]
                        },
                        {
                            "name": "VERTEX_ATTRIB_ARRAY_STRIDE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8624"
                            ]
                        },
                        {
                            "name": "VERTEX_ATTRIB_ARRAY_TYPE",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8625"
                            ]
                        },
                        {
                            "name": "VERTEX_SHADER",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x8B31"
                            ]
                        },
                        {
                            "name": "VIEWPORT",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0x0BA2"
                            ]
                        },
                        {
                            "name": "ZERO",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "value": [
                                "0"
                            ]
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "activeTexture",
                            "type": "void",
                            "param": [
                                {
                                    "name": "texture",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                }
                            ]
                        },
                        {
                            "name": "attachShader",
                            "type": "void",
                            "param": [
                                {
                                    "name": "program",
                                    "nullable": "1",
                                    "type": "WebGLProgram"
                                },
                                {
                                    "name": "shader",
                                    "nullable": "1",
                                    "type": "WebGLShader"
                                }
                            ]
                        },
                        {
                            "name": "bindAttribLocation",
                            "type": "void",
                            "param": [
                                {
                                    "name": "program",
                                    "nullable": "1",
                                    "type": "WebGLProgram"
                                },
                                {
                                    "name": "index",
                                    "type": "unsigned long",
                                    "type-original": "GLuint"
                                },
                                {
                                    "name": "name",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "bindBuffer",
                            "type": "void",
                            "param": [
                                {
                                    "name": "target",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "buffer",
                                    "nullable": "1",
                                    "type": "WebGLBuffer"
                                }
                            ]
                        },
                        {
                            "name": "bindFramebuffer",
                            "type": "void",
                            "param": [
                                {
                                    "name": "target",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "framebuffer",
                                    "nullable": "1",
                                    "type": "WebGLFramebuffer"
                                }
                            ]
                        },
                        {
                            "name": "bindRenderbuffer",
                            "type": "void",
                            "param": [
                                {
                                    "name": "target",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "renderbuffer",
                                    "nullable": "1",
                                    "type": "WebGLRenderbuffer"
                                }
                            ]
                        },
                        {
                            "name": "bindTexture",
                            "type": "void",
                            "param": [
                                {
                                    "name": "target",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "texture",
                                    "nullable": "1",
                                    "type": "WebGLTexture"
                                }
                            ]
                        },
                        {
                            "name": "blendColor",
                            "type": "void",
                            "param": [
                                {
                                    "name": "red",
                                    "type": "float",
                                    "type-original": "GLclampf"
                                },
                                {
                                    "name": "green",
                                    "type": "float",
                                    "type-original": "GLclampf"
                                },
                                {
                                    "name": "blue",
                                    "type": "float",
                                    "type-original": "GLclampf"
                                },
                                {
                                    "name": "alpha",
                                    "type": "float",
                                    "type-original": "GLclampf"
                                }
                            ]
                        },
                        {
                            "name": "blendEquation",
                            "type": "void",
                            "param": [
                                {
                                    "name": "mode",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                }
                            ]
                        },
                        {
                            "name": "blendEquationSeparate",
                            "type": "void",
                            "param": [
                                {
                                    "name": "modeRGB",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "modeAlpha",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                }
                            ]
                        },
                        {
                            "name": "blendFunc",
                            "type": "void",
                            "param": [
                                {
                                    "name": "sfactor",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "dfactor",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                }
                            ]
                        },
                        {
                            "name": "blendFuncSeparate",
                            "type": "void",
                            "param": [
                                {
                                    "name": "srcRGB",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "dstRGB",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "srcAlpha",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "dstAlpha",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                }
                            ]
                        },
                        {
                            "name": "bufferData",
                            "type": "void",
                            "param": [
                                {
                                    "name": "target",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "size",
                                    "type": "(long long or ArrayBufferView or ArrayBuffer?)"
                                },
                                {
                                    "name": "usage",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                }
                            ]
                        },
                        {
                            "name": "bufferSubData",
                            "type": "void",
                            "param": [
                                {
                                    "name": "target",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "offset",
                                    "type": "long long",
                                    "type-original": "GLintptr"
                                },
                                {
                                    "name": "data",
                                    "type": "(ArrayBufferView or ArrayBuffer?)"
                                }
                            ]
                        },
                        {
                            "name": "checkFramebufferStatus",
                            "type": "unsigned long",
                            "type-original": "GLenum",
                            "param": [
                                {
                                    "name": "target",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                }
                            ]
                        },
                        {
                            "name": "clear",
                            "type": "void",
                            "param": [
                                {
                                    "name": "mask",
                                    "type": "unsigned long",
                                    "type-original": "GLbitfield"
                                }
                            ]
                        },
                        {
                            "name": "clearColor",
                            "type": "void",
                            "param": [
                                {
                                    "name": "red",
                                    "type": "float",
                                    "type-original": "GLclampf"
                                },
                                {
                                    "name": "green",
                                    "type": "float",
                                    "type-original": "GLclampf"
                                },
                                {
                                    "name": "blue",
                                    "type": "float",
                                    "type-original": "GLclampf"
                                },
                                {
                                    "name": "alpha",
                                    "type": "float",
                                    "type-original": "GLclampf"
                                }
                            ]
                        },
                        {
                            "name": "clearDepth",
                            "type": "void",
                            "param": [
                                {
                                    "name": "depth",
                                    "type": "float",
                                    "type-original": "GLclampf"
                                }
                            ]
                        },
                        {
                            "name": "clearStencil",
                            "type": "void",
                            "param": [
                                {
                                    "name": "s",
                                    "type": "long",
                                    "type-original": "GLint"
                                }
                            ]
                        },
                        {
                            "name": "colorMask",
                            "type": "void",
                            "param": [
                                {
                                    "name": "red",
                                    "type": "boolean",
                                    "type-original": "GLboolean"
                                },
                                {
                                    "name": "green",
                                    "type": "boolean",
                                    "type-original": "GLboolean"
                                },
                                {
                                    "name": "blue",
                                    "type": "boolean",
                                    "type-original": "GLboolean"
                                },
                                {
                                    "name": "alpha",
                                    "type": "boolean",
                                    "type-original": "GLboolean"
                                }
                            ]
                        },
                        {
                            "name": "compileShader",
                            "type": "void",
                            "param": [
                                {
                                    "name": "shader",
                                    "nullable": "1",
                                    "type": "WebGLShader"
                                }
                            ]
                        },
                        {
                            "name": "compressedTexImage2D",
                            "type": "void",
                            "param": [
                                {
                                    "name": "target",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "level",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "internalformat",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "width",
                                    "type": "long",
                                    "type-original": "GLsizei"
                                },
                                {
                                    "name": "height",
                                    "type": "long",
                                    "type-original": "GLsizei"
                                },
                                {
                                    "name": "border",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "data",
                                    "type": "ArrayBufferView"
                                }
                            ]
                        },
                        {
                            "name": "compressedTexSubImage2D",
                            "type": "void",
                            "param": [
                                {
                                    "name": "target",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "level",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "xoffset",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "yoffset",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "width",
                                    "type": "long",
                                    "type-original": "GLsizei"
                                },
                                {
                                    "name": "height",
                                    "type": "long",
                                    "type-original": "GLsizei"
                                },
                                {
                                    "name": "format",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "data",
                                    "type": "ArrayBufferView"
                                }
                            ]
                        },
                        {
                            "name": "copyTexImage2D",
                            "type": "void",
                            "param": [
                                {
                                    "name": "target",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "level",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "internalformat",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "x",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "y",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "width",
                                    "type": "long",
                                    "type-original": "GLsizei"
                                },
                                {
                                    "name": "height",
                                    "type": "long",
                                    "type-original": "GLsizei"
                                },
                                {
                                    "name": "border",
                                    "type": "long",
                                    "type-original": "GLint"
                                }
                            ]
                        },
                        {
                            "name": "copyTexSubImage2D",
                            "type": "void",
                            "param": [
                                {
                                    "name": "target",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "level",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "xoffset",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "yoffset",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "x",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "y",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "width",
                                    "type": "long",
                                    "type-original": "GLsizei"
                                },
                                {
                                    "name": "height",
                                    "type": "long",
                                    "type-original": "GLsizei"
                                }
                            ]
                        },
                        {
                            "name": "createBuffer",
                            "nullable": "1",
                            "type": "WebGLBuffer"
                        },
                        {
                            "name": "createFramebuffer",
                            "nullable": "1",
                            "type": "WebGLFramebuffer"
                        },
                        {
                            "name": "createProgram",
                            "nullable": "1",
                            "type": "WebGLProgram"
                        },
                        {
                            "name": "createRenderbuffer",
                            "nullable": "1",
                            "type": "WebGLRenderbuffer"
                        },
                        {
                            "name": "createShader",
                            "nullable": "1",
                            "type": "WebGLShader",
                            "param": [
                                {
                                    "name": "type",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                }
                            ]
                        },
                        {
                            "name": "createTexture",
                            "nullable": "1",
                            "type": "WebGLTexture"
                        },
                        {
                            "name": "cullFace",
                            "type": "void",
                            "param": [
                                {
                                    "name": "mode",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                }
                            ]
                        },
                        {
                            "name": "deleteBuffer",
                            "type": "void",
                            "param": [
                                {
                                    "name": "buffer",
                                    "nullable": "1",
                                    "type": "WebGLBuffer"
                                }
                            ]
                        },
                        {
                            "name": "deleteFramebuffer",
                            "type": "void",
                            "param": [
                                {
                                    "name": "framebuffer",
                                    "nullable": "1",
                                    "type": "WebGLFramebuffer"
                                }
                            ]
                        },
                        {
                            "name": "deleteProgram",
                            "type": "void",
                            "param": [
                                {
                                    "name": "program",
                                    "nullable": "1",
                                    "type": "WebGLProgram"
                                }
                            ]
                        },
                        {
                            "name": "deleteRenderbuffer",
                            "type": "void",
                            "param": [
                                {
                                    "name": "renderbuffer",
                                    "nullable": "1",
                                    "type": "WebGLRenderbuffer"
                                }
                            ]
                        },
                        {
                            "name": "deleteShader",
                            "type": "void",
                            "param": [
                                {
                                    "name": "shader",
                                    "nullable": "1",
                                    "type": "WebGLShader"
                                }
                            ]
                        },
                        {
                            "name": "deleteTexture",
                            "type": "void",
                            "param": [
                                {
                                    "name": "texture",
                                    "nullable": "1",
                                    "type": "WebGLTexture"
                                }
                            ]
                        },
                        {
                            "name": "depthFunc",
                            "type": "void",
                            "param": [
                                {
                                    "name": "func",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                }
                            ]
                        },
                        {
                            "name": "depthMask",
                            "type": "void",
                            "param": [
                                {
                                    "name": "flag",
                                    "type": "boolean",
                                    "type-original": "GLboolean"
                                }
                            ]
                        },
                        {
                            "name": "depthRange",
                            "type": "void",
                            "param": [
                                {
                                    "name": "zNear",
                                    "type": "float",
                                    "type-original": "GLclampf"
                                },
                                {
                                    "name": "zFar",
                                    "type": "float",
                                    "type-original": "GLclampf"
                                }
                            ]
                        },
                        {
                            "name": "detachShader",
                            "type": "void",
                            "param": [
                                {
                                    "name": "program",
                                    "nullable": "1",
                                    "type": "WebGLProgram"
                                },
                                {
                                    "name": "shader",
                                    "nullable": "1",
                                    "type": "WebGLShader"
                                }
                            ]
                        },
                        {
                            "name": "disable",
                            "type": "void",
                            "param": [
                                {
                                    "name": "cap",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                }
                            ]
                        },
                        {
                            "name": "disableVertexAttribArray",
                            "type": "void",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long",
                                    "type-original": "GLuint"
                                }
                            ]
                        },
                        {
                            "name": "drawArrays",
                            "type": "void",
                            "param": [
                                {
                                    "name": "mode",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "first",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "count",
                                    "type": "long",
                                    "type-original": "GLsizei"
                                }
                            ]
                        },
                        {
                            "name": "drawElements",
                            "type": "void",
                            "param": [
                                {
                                    "name": "mode",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "count",
                                    "type": "long",
                                    "type-original": "GLsizei"
                                },
                                {
                                    "name": "type",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "offset",
                                    "type": "long long",
                                    "type-original": "GLintptr"
                                }
                            ]
                        },
                        {
                            "name": "enable",
                            "type": "void",
                            "param": [
                                {
                                    "name": "cap",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                }
                            ]
                        },
                        {
                            "name": "enableVertexAttribArray",
                            "type": "void",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long",
                                    "type-original": "GLuint"
                                }
                            ]
                        },
                        {
                            "name": "finish",
                            "type": "void"
                        },
                        {
                            "name": "flush",
                            "type": "void"
                        },
                        {
                            "name": "framebufferRenderbuffer",
                            "type": "void",
                            "param": [
                                {
                                    "name": "target",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "attachment",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "renderbuffertarget",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "renderbuffer",
                                    "nullable": "1",
                                    "type": "WebGLRenderbuffer"
                                }
                            ]
                        },
                        {
                            "name": "framebufferTexture2D",
                            "type": "void",
                            "param": [
                                {
                                    "name": "target",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "attachment",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "textarget",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "texture",
                                    "nullable": "1",
                                    "type": "WebGLTexture"
                                },
                                {
                                    "name": "level",
                                    "type": "long",
                                    "type-original": "GLint"
                                }
                            ]
                        },
                        {
                            "name": "frontFace",
                            "type": "void",
                            "param": [
                                {
                                    "name": "mode",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                }
                            ]
                        },
                        {
                            "name": "generateMipmap",
                            "type": "void",
                            "param": [
                                {
                                    "name": "target",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                }
                            ]
                        },
                        {
                            "name": "getActiveAttrib",
                            "nullable": "1",
                            "type": "WebGLActiveInfo",
                            "param": [
                                {
                                    "name": "program",
                                    "nullable": "1",
                                    "type": "WebGLProgram"
                                },
                                {
                                    "name": "index",
                                    "type": "unsigned long",
                                    "type-original": "GLuint"
                                }
                            ]
                        },
                        {
                            "name": "getActiveUniform",
                            "nullable": "1",
                            "type": "WebGLActiveInfo",
                            "param": [
                                {
                                    "name": "program",
                                    "nullable": "1",
                                    "type": "WebGLProgram"
                                },
                                {
                                    "name": "index",
                                    "type": "unsigned long",
                                    "type-original": "GLuint"
                                }
                            ]
                        },
                        {
                            "name": "getAttachedShaders",
                            "nullable": "1",
                            "type": "sequence<WebGLShader>",
                            "param": [
                                {
                                    "name": "program",
                                    "nullable": "1",
                                    "type": "WebGLProgram"
                                }
                            ]
                        },
                        {
                            "name": "getAttribLocation",
                            "type": "long",
                            "type-original": "GLint",
                            "param": [
                                {
                                    "name": "program",
                                    "nullable": "1",
                                    "type": "WebGLProgram"
                                },
                                {
                                    "name": "name",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "getBufferParameter",
                            "type": "any",
                            "param": [
                                {
                                    "name": "target",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "pname",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                }
                            ]
                        },
                        {
                            "name": "getContextAttributes",
                            "type": "WebGLContextAttributes"
                        },
                        {
                            "name": "getError",
                            "type": "unsigned long",
                            "type-original": "GLenum"
                        },
                        {
                            "name": "getExtension",
                            "nullable": "1",
                            "type": "object",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "getFramebufferAttachmentParameter",
                            "type": "any",
                            "param": [
                                {
                                    "name": "target",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "attachment",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "pname",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                }
                            ]
                        },
                        {
                            "name": "getParameter",
                            "type": "any",
                            "param": [
                                {
                                    "name": "pname",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                }
                            ]
                        },
                        {
                            "name": "getProgramInfoLog",
                            "nullable": "1",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "program",
                                    "nullable": "1",
                                    "type": "WebGLProgram"
                                }
                            ]
                        },
                        {
                            "name": "getProgramParameter",
                            "type": "any",
                            "param": [
                                {
                                    "name": "program",
                                    "nullable": "1",
                                    "type": "WebGLProgram"
                                },
                                {
                                    "name": "pname",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                }
                            ]
                        },
                        {
                            "name": "getRenderbufferParameter",
                            "type": "any",
                            "param": [
                                {
                                    "name": "target",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "pname",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                }
                            ]
                        },
                        {
                            "name": "getShaderInfoLog",
                            "nullable": "1",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "shader",
                                    "nullable": "1",
                                    "type": "WebGLShader"
                                }
                            ]
                        },
                        {
                            "name": "getShaderParameter",
                            "type": "any",
                            "param": [
                                {
                                    "name": "shader",
                                    "nullable": "1",
                                    "type": "WebGLShader"
                                },
                                {
                                    "name": "pname",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                }
                            ]
                        },
                        {
                            "name": "getShaderPrecisionFormat",
                            "nullable": "1",
                            "type": "WebGLShaderPrecisionFormat",
                            "param": [
                                {
                                    "name": "shadertype",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "precisiontype",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                }
                            ]
                        },
                        {
                            "name": "getShaderSource",
                            "nullable": "1",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "shader",
                                    "nullable": "1",
                                    "type": "WebGLShader"
                                }
                            ]
                        },
                        {
                            "name": "getSupportedExtensions",
                            "nullable": "1",
                            "type": "sequence<DOMString>"
                        },
                        {
                            "name": "getTexParameter",
                            "type": "any",
                            "param": [
                                {
                                    "name": "target",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "pname",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                }
                            ]
                        },
                        {
                            "name": "getUniform",
                            "type": "any",
                            "param": [
                                {
                                    "name": "program",
                                    "nullable": "1",
                                    "type": "WebGLProgram"
                                },
                                {
                                    "name": "location",
                                    "nullable": "1",
                                    "type": "WebGLUniformLocation"
                                }
                            ]
                        },
                        {
                            "name": "getUniformLocation",
                            "nullable": "1",
                            "type": "WebGLUniformLocation",
                            "param": [
                                {
                                    "name": "program",
                                    "nullable": "1",
                                    "type": "WebGLProgram"
                                },
                                {
                                    "name": "name",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "getVertexAttrib",
                            "type": "any",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long",
                                    "type-original": "GLuint"
                                },
                                {
                                    "name": "pname",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                }
                            ]
                        },
                        {
                            "name": "getVertexAttribOffset",
                            "type": "long long",
                            "type-original": "GLsizeiptr",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long",
                                    "type-original": "GLuint"
                                },
                                {
                                    "name": "pname",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                }
                            ]
                        },
                        {
                            "name": "hint",
                            "type": "void",
                            "param": [
                                {
                                    "name": "target",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "mode",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                }
                            ]
                        },
                        {
                            "name": "isBuffer",
                            "type": "boolean",
                            "type-original": "GLboolean",
                            "param": [
                                {
                                    "name": "buffer",
                                    "nullable": "1",
                                    "type": "WebGLBuffer"
                                }
                            ]
                        },
                        {
                            "name": "isContextLost",
                            "type": "boolean"
                        },
                        {
                            "name": "isEnabled",
                            "type": "boolean",
                            "type-original": "GLboolean",
                            "param": [
                                {
                                    "name": "cap",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                }
                            ]
                        },
                        {
                            "name": "isFramebuffer",
                            "type": "boolean",
                            "type-original": "GLboolean",
                            "param": [
                                {
                                    "name": "framebuffer",
                                    "nullable": "1",
                                    "type": "WebGLFramebuffer"
                                }
                            ]
                        },
                        {
                            "name": "isProgram",
                            "type": "boolean",
                            "type-original": "GLboolean",
                            "param": [
                                {
                                    "name": "program",
                                    "nullable": "1",
                                    "type": "WebGLProgram"
                                }
                            ]
                        },
                        {
                            "name": "isRenderbuffer",
                            "type": "boolean",
                            "type-original": "GLboolean",
                            "param": [
                                {
                                    "name": "renderbuffer",
                                    "nullable": "1",
                                    "type": "WebGLRenderbuffer"
                                }
                            ]
                        },
                        {
                            "name": "isShader",
                            "type": "boolean",
                            "type-original": "GLboolean",
                            "param": [
                                {
                                    "name": "shader",
                                    "nullable": "1",
                                    "type": "WebGLShader"
                                }
                            ]
                        },
                        {
                            "name": "isTexture",
                            "type": "boolean",
                            "type-original": "GLboolean",
                            "param": [
                                {
                                    "name": "texture",
                                    "nullable": "1",
                                    "type": "WebGLTexture"
                                }
                            ]
                        },
                        {
                            "name": "lineWidth",
                            "type": "void",
                            "param": [
                                {
                                    "name": "width",
                                    "type": "float",
                                    "type-original": "GLfloat"
                                }
                            ]
                        },
                        {
                            "name": "linkProgram",
                            "type": "void",
                            "param": [
                                {
                                    "name": "program",
                                    "nullable": "1",
                                    "type": "WebGLProgram"
                                }
                            ]
                        },
                        {
                            "name": "pixelStorei",
                            "type": "void",
                            "param": [
                                {
                                    "name": "pname",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "param",
                                    "type": "long",
                                    "type-original": "GLint"
                                }
                            ]
                        },
                        {
                            "name": "polygonOffset",
                            "type": "void",
                            "param": [
                                {
                                    "name": "factor",
                                    "type": "float",
                                    "type-original": "GLfloat"
                                },
                                {
                                    "name": "units",
                                    "type": "float",
                                    "type-original": "GLfloat"
                                }
                            ]
                        },
                        {
                            "name": "readPixels",
                            "type": "void",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "y",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "width",
                                    "type": "long",
                                    "type-original": "GLsizei"
                                },
                                {
                                    "name": "height",
                                    "type": "long",
                                    "type-original": "GLsizei"
                                },
                                {
                                    "name": "format",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "type",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "pixels",
                                    "nullable": "1",
                                    "type": "ArrayBufferView"
                                }
                            ]
                        },
                        {
                            "name": "renderbufferStorage",
                            "type": "void",
                            "param": [
                                {
                                    "name": "target",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "internalformat",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "width",
                                    "type": "long",
                                    "type-original": "GLsizei"
                                },
                                {
                                    "name": "height",
                                    "type": "long",
                                    "type-original": "GLsizei"
                                }
                            ]
                        },
                        {
                            "name": "sampleCoverage",
                            "type": "void",
                            "param": [
                                {
                                    "name": "value",
                                    "type": "float",
                                    "type-original": "GLclampf"
                                },
                                {
                                    "name": "invert",
                                    "type": "boolean",
                                    "type-original": "GLboolean"
                                }
                            ]
                        },
                        {
                            "name": "scissor",
                            "type": "void",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "y",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "width",
                                    "type": "long",
                                    "type-original": "GLsizei"
                                },
                                {
                                    "name": "height",
                                    "type": "long",
                                    "type-original": "GLsizei"
                                }
                            ]
                        },
                        {
                            "name": "shaderSource",
                            "type": "void",
                            "param": [
                                {
                                    "name": "shader",
                                    "nullable": "1",
                                    "type": "WebGLShader"
                                },
                                {
                                    "name": "source",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "stencilFunc",
                            "type": "void",
                            "param": [
                                {
                                    "name": "func",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "ref",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "mask",
                                    "type": "unsigned long",
                                    "type-original": "GLuint"
                                }
                            ]
                        },
                        {
                            "name": "stencilFuncSeparate",
                            "type": "void",
                            "param": [
                                {
                                    "name": "face",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "func",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "ref",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "mask",
                                    "type": "unsigned long",
                                    "type-original": "GLuint"
                                }
                            ]
                        },
                        {
                            "name": "stencilMask",
                            "type": "void",
                            "param": [
                                {
                                    "name": "mask",
                                    "type": "unsigned long",
                                    "type-original": "GLuint"
                                }
                            ]
                        },
                        {
                            "name": "stencilMaskSeparate",
                            "type": "void",
                            "param": [
                                {
                                    "name": "face",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "mask",
                                    "type": "unsigned long",
                                    "type-original": "GLuint"
                                }
                            ]
                        },
                        {
                            "name": "stencilOp",
                            "type": "void",
                            "param": [
                                {
                                    "name": "fail",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "zfail",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "zpass",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                }
                            ]
                        },
                        {
                            "name": "stencilOpSeparate",
                            "type": "void",
                            "param": [
                                {
                                    "name": "face",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "fail",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "zfail",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "zpass",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                }
                            ]
                        },
                        {
                            "name": "texImage2D",
                            "type": "void",
                            "param": [
                                {
                                    "name": "target",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "level",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "internalformat",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "format",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "type",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "pixels",
                                    "nullable": "1",
                                    "type": "ImageData"
                                }
                            ]
                        },
                        {
                            "name": "texParameterf",
                            "type": "void",
                            "param": [
                                {
                                    "name": "target",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "pname",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "param",
                                    "type": "float",
                                    "type-original": "GLfloat"
                                }
                            ]
                        },
                        {
                            "name": "texParameteri",
                            "type": "void",
                            "param": [
                                {
                                    "name": "target",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "pname",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "param",
                                    "type": "long",
                                    "type-original": "GLint"
                                }
                            ]
                        },
                        {
                            "name": "texSubImage2D",
                            "type": "void",
                            "param": [
                                {
                                    "name": "target",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "level",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "xoffset",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "yoffset",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "format",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "type",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "pixels",
                                    "nullable": "1",
                                    "type": "ImageData"
                                }
                            ]
                        },
                        {
                            "name": "uniform1f",
                            "type": "void",
                            "param": [
                                {
                                    "name": "location",
                                    "nullable": "1",
                                    "type": "WebGLUniformLocation"
                                },
                                {
                                    "name": "x",
                                    "type": "float",
                                    "type-original": "GLfloat"
                                }
                            ]
                        },
                        {
                            "name": "uniform1fv",
                            "type": "void",
                            "param": [
                                {
                                    "name": "location",
                                    "nullable": "1",
                                    "type": "WebGLUniformLocation"
                                },
                                {
                                    "name": "v",
                                    "type": "Float32Array"
                                }
                            ]
                        },
                        {
                            "name": "uniform1i",
                            "type": "void",
                            "param": [
                                {
                                    "name": "location",
                                    "nullable": "1",
                                    "type": "WebGLUniformLocation"
                                },
                                {
                                    "name": "x",
                                    "type": "long",
                                    "type-original": "GLint"
                                }
                            ]
                        },
                        {
                            "name": "uniform1iv",
                            "type": "void",
                            "param": [
                                {
                                    "name": "location",
                                    "nullable": "1",
                                    "type": "WebGLUniformLocation"
                                },
                                {
                                    "name": "v",
                                    "type": "Int32Array"
                                }
                            ]
                        },
                        {
                            "name": "uniform2f",
                            "type": "void",
                            "param": [
                                {
                                    "name": "location",
                                    "nullable": "1",
                                    "type": "WebGLUniformLocation"
                                },
                                {
                                    "name": "x",
                                    "type": "float",
                                    "type-original": "GLfloat"
                                },
                                {
                                    "name": "y",
                                    "type": "float",
                                    "type-original": "GLfloat"
                                }
                            ]
                        },
                        {
                            "name": "uniform2fv",
                            "type": "void",
                            "param": [
                                {
                                    "name": "location",
                                    "nullable": "1",
                                    "type": "WebGLUniformLocation"
                                },
                                {
                                    "name": "v",
                                    "type": "Float32Array"
                                }
                            ]
                        },
                        {
                            "name": "uniform2i",
                            "type": "void",
                            "param": [
                                {
                                    "name": "location",
                                    "nullable": "1",
                                    "type": "WebGLUniformLocation"
                                },
                                {
                                    "name": "x",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "y",
                                    "type": "long",
                                    "type-original": "GLint"
                                }
                            ]
                        },
                        {
                            "name": "uniform2iv",
                            "type": "void",
                            "param": [
                                {
                                    "name": "location",
                                    "nullable": "1",
                                    "type": "WebGLUniformLocation"
                                },
                                {
                                    "name": "v",
                                    "type": "Int32Array"
                                }
                            ]
                        },
                        {
                            "name": "uniform3f",
                            "type": "void",
                            "param": [
                                {
                                    "name": "location",
                                    "nullable": "1",
                                    "type": "WebGLUniformLocation"
                                },
                                {
                                    "name": "x",
                                    "type": "float",
                                    "type-original": "GLfloat"
                                },
                                {
                                    "name": "y",
                                    "type": "float",
                                    "type-original": "GLfloat"
                                },
                                {
                                    "name": "z",
                                    "type": "float",
                                    "type-original": "GLfloat"
                                }
                            ]
                        },
                        {
                            "name": "uniform3fv",
                            "type": "void",
                            "param": [
                                {
                                    "name": "location",
                                    "nullable": "1",
                                    "type": "WebGLUniformLocation"
                                },
                                {
                                    "name": "v",
                                    "type": "Float32Array"
                                }
                            ]
                        },
                        {
                            "name": "uniform3i",
                            "type": "void",
                            "param": [
                                {
                                    "name": "location",
                                    "nullable": "1",
                                    "type": "WebGLUniformLocation"
                                },
                                {
                                    "name": "x",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "y",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "z",
                                    "type": "long",
                                    "type-original": "GLint"
                                }
                            ]
                        },
                        {
                            "name": "uniform3iv",
                            "type": "void",
                            "param": [
                                {
                                    "name": "location",
                                    "nullable": "1",
                                    "type": "WebGLUniformLocation"
                                },
                                {
                                    "name": "v",
                                    "type": "Int32Array"
                                }
                            ]
                        },
                        {
                            "name": "uniform4f",
                            "type": "void",
                            "param": [
                                {
                                    "name": "location",
                                    "nullable": "1",
                                    "type": "WebGLUniformLocation"
                                },
                                {
                                    "name": "x",
                                    "type": "float",
                                    "type-original": "GLfloat"
                                },
                                {
                                    "name": "y",
                                    "type": "float",
                                    "type-original": "GLfloat"
                                },
                                {
                                    "name": "z",
                                    "type": "float",
                                    "type-original": "GLfloat"
                                },
                                {
                                    "name": "w",
                                    "type": "float",
                                    "type-original": "GLfloat"
                                }
                            ]
                        },
                        {
                            "name": "uniform4fv",
                            "type": "void",
                            "param": [
                                {
                                    "name": "location",
                                    "nullable": "1",
                                    "type": "WebGLUniformLocation"
                                },
                                {
                                    "name": "v",
                                    "type": "Float32Array"
                                }
                            ]
                        },
                        {
                            "name": "uniform4i",
                            "type": "void",
                            "param": [
                                {
                                    "name": "location",
                                    "nullable": "1",
                                    "type": "WebGLUniformLocation"
                                },
                                {
                                    "name": "x",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "y",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "z",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "w",
                                    "type": "long",
                                    "type-original": "GLint"
                                }
                            ]
                        },
                        {
                            "name": "uniform4iv",
                            "type": "void",
                            "param": [
                                {
                                    "name": "location",
                                    "nullable": "1",
                                    "type": "WebGLUniformLocation"
                                },
                                {
                                    "name": "v",
                                    "type": "Int32Array"
                                }
                            ]
                        },
                        {
                            "name": "uniformMatrix2fv",
                            "type": "void",
                            "param": [
                                {
                                    "name": "location",
                                    "nullable": "1",
                                    "type": "WebGLUniformLocation"
                                },
                                {
                                    "name": "transpose",
                                    "type": "boolean",
                                    "type-original": "GLboolean"
                                },
                                {
                                    "name": "value",
                                    "type": "Float32Array"
                                }
                            ]
                        },
                        {
                            "name": "uniformMatrix3fv",
                            "type": "void",
                            "param": [
                                {
                                    "name": "location",
                                    "nullable": "1",
                                    "type": "WebGLUniformLocation"
                                },
                                {
                                    "name": "transpose",
                                    "type": "boolean",
                                    "type-original": "GLboolean"
                                },
                                {
                                    "name": "value",
                                    "type": "Float32Array"
                                }
                            ]
                        },
                        {
                            "name": "uniformMatrix4fv",
                            "type": "void",
                            "param": [
                                {
                                    "name": "location",
                                    "nullable": "1",
                                    "type": "WebGLUniformLocation"
                                },
                                {
                                    "name": "transpose",
                                    "type": "boolean",
                                    "type-original": "GLboolean"
                                },
                                {
                                    "name": "value",
                                    "type": "Float32Array"
                                }
                            ]
                        },
                        {
                            "name": "useProgram",
                            "type": "void",
                            "param": [
                                {
                                    "name": "program",
                                    "nullable": "1",
                                    "type": "WebGLProgram"
                                }
                            ]
                        },
                        {
                            "name": "validateProgram",
                            "type": "void",
                            "param": [
                                {
                                    "name": "program",
                                    "nullable": "1",
                                    "type": "WebGLProgram"
                                }
                            ]
                        },
                        {
                            "name": "vertexAttrib1f",
                            "type": "void",
                            "param": [
                                {
                                    "name": "indx",
                                    "type": "unsigned long",
                                    "type-original": "GLuint"
                                },
                                {
                                    "name": "x",
                                    "type": "float",
                                    "type-original": "GLfloat"
                                }
                            ]
                        },
                        {
                            "name": "vertexAttrib1fv",
                            "type": "void",
                            "param": [
                                {
                                    "name": "indx",
                                    "type": "unsigned long",
                                    "type-original": "GLuint"
                                },
                                {
                                    "name": "values",
                                    "type": "Float32Array"
                                }
                            ]
                        },
                        {
                            "name": "vertexAttrib2f",
                            "type": "void",
                            "param": [
                                {
                                    "name": "indx",
                                    "type": "unsigned long",
                                    "type-original": "GLuint"
                                },
                                {
                                    "name": "x",
                                    "type": "float",
                                    "type-original": "GLfloat"
                                },
                                {
                                    "name": "y",
                                    "type": "float",
                                    "type-original": "GLfloat"
                                }
                            ]
                        },
                        {
                            "name": "vertexAttrib2fv",
                            "type": "void",
                            "param": [
                                {
                                    "name": "indx",
                                    "type": "unsigned long",
                                    "type-original": "GLuint"
                                },
                                {
                                    "name": "values",
                                    "type": "Float32Array"
                                }
                            ]
                        },
                        {
                            "name": "vertexAttrib3f",
                            "type": "void",
                            "param": [
                                {
                                    "name": "indx",
                                    "type": "unsigned long",
                                    "type-original": "GLuint"
                                },
                                {
                                    "name": "x",
                                    "type": "float",
                                    "type-original": "GLfloat"
                                },
                                {
                                    "name": "y",
                                    "type": "float",
                                    "type-original": "GLfloat"
                                },
                                {
                                    "name": "z",
                                    "type": "float",
                                    "type-original": "GLfloat"
                                }
                            ]
                        },
                        {
                            "name": "vertexAttrib3fv",
                            "type": "void",
                            "param": [
                                {
                                    "name": "indx",
                                    "type": "unsigned long",
                                    "type-original": "GLuint"
                                },
                                {
                                    "name": "values",
                                    "type": "Float32Array"
                                }
                            ]
                        },
                        {
                            "name": "vertexAttrib4f",
                            "type": "void",
                            "param": [
                                {
                                    "name": "indx",
                                    "type": "unsigned long",
                                    "type-original": "GLuint"
                                },
                                {
                                    "name": "x",
                                    "type": "float",
                                    "type-original": "GLfloat"
                                },
                                {
                                    "name": "y",
                                    "type": "float",
                                    "type-original": "GLfloat"
                                },
                                {
                                    "name": "z",
                                    "type": "float",
                                    "type-original": "GLfloat"
                                },
                                {
                                    "name": "w",
                                    "type": "float",
                                    "type-original": "GLfloat"
                                }
                            ]
                        },
                        {
                            "name": "vertexAttrib4fv",
                            "type": "void",
                            "param": [
                                {
                                    "name": "indx",
                                    "type": "unsigned long",
                                    "type-original": "GLuint"
                                },
                                {
                                    "name": "values",
                                    "type": "Float32Array"
                                }
                            ]
                        },
                        {
                            "name": "vertexAttribPointer",
                            "type": "void",
                            "param": [
                                {
                                    "name": "indx",
                                    "type": "unsigned long",
                                    "type-original": "GLuint"
                                },
                                {
                                    "name": "size",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "type",
                                    "type": "unsigned long",
                                    "type-original": "GLenum"
                                },
                                {
                                    "name": "normalized",
                                    "type": "boolean",
                                    "type-original": "GLboolean"
                                },
                                {
                                    "name": "stride",
                                    "type": "long",
                                    "type-original": "GLsizei"
                                },
                                {
                                    "name": "offset",
                                    "type": "long long",
                                    "type-original": "GLintptr"
                                }
                            ]
                        },
                        {
                            "name": "viewport",
                            "type": "void",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "y",
                                    "type": "long",
                                    "type-original": "GLint"
                                },
                                {
                                    "name": "width",
                                    "type": "long",
                                    "type-original": "GLsizei"
                                },
                                {
                                    "name": "height",
                                    "type": "long",
                                    "type-original": "GLsizei"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "canvas",
                            "read-only": "1",
                            "type": "HTMLCanvasElement"
                        },
                        {
                            "name": "drawingBufferHeight",
                            "read-only": "1",
                            "type": "long",
                            "type-original": "GLsizei"
                        },
                        {
                            "name": "drawingBufferWidth",
                            "read-only": "1",
                            "type": "long",
                            "type-original": "GLsizei"
                        }
                    ]
                }
            },
            {
                "name": "WebGLShader",
                "extends": "WebGLObject"
            },
            {
                "name": "WebGLShaderPrecisionFormat",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "precision",
                            "read-only": "1",
                            "type": "long",
                            "type-original": "GLint"
                        },
                        {
                            "name": "rangeMax",
                            "read-only": "1",
                            "type": "long",
                            "type-original": "GLint"
                        },
                        {
                            "name": "rangeMin",
                            "read-only": "1",
                            "type": "long",
                            "type-original": "GLint"
                        }
                    ]
                }
            },
            {
                "name": "WebGLTexture",
                "extends": "WebGLObject"
            },
            {
                "name": "WebGLUniformLocation",
                "extends": "Object"
            },
            {
                "name": "WebKitCSSMatrix",
                "extends": "Object",
                "constructor": {
                    "param": [
                        {
                            "name": "text",
                            "optional": "1",
                            "type": "DOMString"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "inverse",
                            "type": "WebKitCSSMatrix"
                        },
                        {
                            "name": "multiply",
                            "type": "WebKitCSSMatrix",
                            "param": [
                                {
                                    "name": "secondMatrix",
                                    "type": "WebKitCSSMatrix"
                                }
                            ]
                        },
                        {
                            "name": "rotate",
                            "type": "WebKitCSSMatrix",
                            "param": [
                                {
                                    "name": "angleX",
                                    "type": "float"
                                },
                                {
                                    "name": "angleY",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "float"
                                },
                                {
                                    "name": "angleZ",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "rotateAxisAngle",
                            "type": "WebKitCSSMatrix",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                },
                                {
                                    "name": "z",
                                    "type": "float"
                                },
                                {
                                    "name": "angle",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "scale",
                            "type": "WebKitCSSMatrix",
                            "param": [
                                {
                                    "name": "scaleX",
                                    "type": "float"
                                },
                                {
                                    "name": "scaleY",
                                    "optional": "1",
                                    "type": "float"
                                },
                                {
                                    "name": "scaleZ",
                                    "default": "1",
                                    "optional": "1",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "setMatrixValue",
                            "type": "void",
                            "param": [
                                {
                                    "name": "value",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "skewX",
                            "type": "WebKitCSSMatrix",
                            "param": [
                                {
                                    "name": "angle",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "skewY",
                            "type": "WebKitCSSMatrix",
                            "param": [
                                {
                                    "name": "angle",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "toString",
                            "stringifier": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "translate",
                            "type": "WebKitCSSMatrix",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                },
                                {
                                    "name": "z",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "float"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "a",
                            "type": "float"
                        },
                        {
                            "name": "b",
                            "type": "float"
                        },
                        {
                            "name": "c",
                            "type": "float"
                        },
                        {
                            "name": "d",
                            "type": "float"
                        },
                        {
                            "name": "e",
                            "type": "float"
                        },
                        {
                            "name": "f",
                            "type": "float"
                        },
                        {
                            "name": "m11",
                            "type": "float"
                        },
                        {
                            "name": "m12",
                            "type": "float"
                        },
                        {
                            "name": "m13",
                            "type": "float"
                        },
                        {
                            "name": "m14",
                            "type": "float"
                        },
                        {
                            "name": "m21",
                            "type": "float"
                        },
                        {
                            "name": "m22",
                            "type": "float"
                        },
                        {
                            "name": "m23",
                            "type": "float"
                        },
                        {
                            "name": "m24",
                            "type": "float"
                        },
                        {
                            "name": "m31",
                            "type": "float"
                        },
                        {
                            "name": "m32",
                            "type": "float"
                        },
                        {
                            "name": "m33",
                            "type": "float"
                        },
                        {
                            "name": "m34",
                            "type": "float"
                        },
                        {
                            "name": "m41",
                            "type": "float"
                        },
                        {
                            "name": "m42",
                            "type": "float"
                        },
                        {
                            "name": "m43",
                            "type": "float"
                        },
                        {
                            "name": "m44",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "WebKitDirectoryEntry",
                "extends": "WebKitEntry",
                "methods": {
                    "method": [
                        {
                            "name": "createReader",
                            "type": "WebKitDirectoryReader"
                        }
                    ]
                }
            },
            {
                "name": "WebKitDirectoryReader",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "readEntries",
                            "type": "void",
                            "param": [
                                {
                                    "name": "successCallback",
                                    "type": "WebKitEntriesCallback"
                                },
                                {
                                    "name": "errorCallback",
                                    "optional": "1",
                                    "type": "WebKitErrorCallback"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "WebKitEntry",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "filesystem",
                            "read-only": "1",
                            "type": "WebKitFileSystem"
                        },
                        {
                            "name": "fullPath",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "isDirectory",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "isFile",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "name",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "WebKitFileEntry",
                "extends": "WebKitEntry",
                "methods": {
                    "method": [
                        {
                            "name": "file",
                            "type": "void",
                            "param": [
                                {
                                    "name": "successCallback",
                                    "type": "WebKitFileCallback"
                                },
                                {
                                    "name": "errorCallback",
                                    "optional": "1",
                                    "type": "WebKitErrorCallback"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "WebKitFileSystem",
                "extends": "Object",
                "properties": {
                    "property": [
                        {
                            "name": "name",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "root",
                            "read-only": "1",
                            "type": "WebKitDirectoryEntry"
                        }
                    ]
                }
            },
            {
                "name": "WebKitPoint",
                "extends": "Object",
                "constructor": {
                    "param": [
                        {
                            "name": "x",
                            "default": "0",
                            "optional": "1",
                            "type": "float"
                        },
                        {
                            "name": "y",
                            "default": "0",
                            "optional": "1",
                            "type": "float"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "x",
                            "type": "float"
                        },
                        {
                            "name": "y",
                            "type": "float"
                        }
                    ]
                }
            },
            {
                "name": "webkitRTCPeerConnection",
                "extends": "RTCPeerConnection",
                "constructor": {
                    "param": [
                        {
                            "name": "configuration",
                            "type": "RTCConfiguration"
                        }
                    ]
                }
            },
            {
                "name": "WebSocket",
                "extends": "EventTarget",
                "constants": {
                    "constant": [
                        {
                            "name": "CLOSED",
                            "type": "unsigned short",
                            "value": [
                                "3"
                            ]
                        },
                        {
                            "name": "CLOSING",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "CONNECTING",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        },
                        {
                            "name": "OPEN",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        }
                    ]
                },
                "constructor": {
                    "param": [
                        {
                            "name": "url",
                            "type": "DOMString"
                        },
                        {
                            "name": "protocols",
                            "optional": "1",
                            "type": "(DOMString or DOMString[])"
                        }
                    ]
                },
                "events": {
                    "event": [
                        {
                            "name": "error",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "message",
                            "dispatch": "async",
                            "skips-window": "1",
                            "type": "MessageEvent"
                        },
                        {
                            "name": "open",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "close",
                            "dispatch": "sync",
                            "skips-window": "1",
                            "type": "CloseEvent"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "close",
                            "type": "void",
                            "param": [
                                {
                                    "name": "code",
                                    "optional": "1",
                                    "type": "unsigned short"
                                },
                                {
                                    "name": "reason",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "send",
                            "type": "void",
                            "param": [
                                {
                                    "name": "data",
                                    "type": "any"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "binaryType",
                            "type": "DOMString"
                        },
                        {
                            "name": "bufferedAmount",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "extensions",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "onclose",
                            "event-handler": "close",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onerror",
                            "event-handler": "error",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmessage",
                            "event-handler": "message",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onopen",
                            "event-handler": "open",
                            "type": "EventHandler"
                        },
                        {
                            "name": "protocol",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "readyState",
                            "read-only": "1",
                            "type": "unsigned short"
                        },
                        {
                            "name": "url",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "WheelEvent",
                "extends": "MouseEvent",
                "constants": {
                    "constant": [
                        {
                            "name": "DOM_DELTA_LINE",
                            "type": "unsigned long",
                            "value": [
                                "0x01"
                            ]
                        },
                        {
                            "name": "DOM_DELTA_PAGE",
                            "type": "unsigned long",
                            "value": [
                                "0x02"
                            ]
                        },
                        {
                            "name": "DOM_DELTA_PIXEL",
                            "type": "unsigned long",
                            "value": [
                                "0x00"
                            ]
                        }
                    ]
                },
                "constructor": {
                    "param": [
                        {
                            "name": "typeArg",
                            "type": "DOMString"
                        },
                        {
                            "name": "eventInitDict",
                            "optional": "1",
                            "type": "WheelEventInit"
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "getCurrentPoint",
                            "type": "void",
                            "param": [
                                {
                                    "name": "element",
                                    "type": "Element"
                                }
                            ]
                        },
                        {
                            "name": "initWheelEvent",
                            "type": "void",
                            "param": [
                                {
                                    "name": "typeArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "canBubbleArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "cancelableArg",
                                    "type": "boolean"
                                },
                                {
                                    "name": "viewArg",
                                    "type": "Window"
                                },
                                {
                                    "name": "detailArg",
                                    "type": "long"
                                },
                                {
                                    "name": "screenXArg",
                                    "type": "long"
                                },
                                {
                                    "name": "screenYArg",
                                    "type": "long"
                                },
                                {
                                    "name": "clientXArg",
                                    "type": "long"
                                },
                                {
                                    "name": "clientYArg",
                                    "type": "long"
                                },
                                {
                                    "name": "buttonArg",
                                    "type": "unsigned short"
                                },
                                {
                                    "name": "relatedTargetArg",
                                    "type": "EventTarget"
                                },
                                {
                                    "name": "modifiersListArg",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "deltaXArg",
                                    "type": "long"
                                },
                                {
                                    "name": "deltaYArg",
                                    "type": "long"
                                },
                                {
                                    "name": "deltaZArg",
                                    "type": "long"
                                },
                                {
                                    "name": "deltaMode",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "deltaMode",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "deltaX",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "deltaY",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "deltaZ",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "wheelDelta",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "wheelDeltaX",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "wheelDeltaY",
                            "read-only": "1",
                            "type": "long"
                        }
                    ]
                }
            },
            {
                "name": "Window",
                "extends": "EventTarget",
                "implicit-this": "1",
                "primary-global": "Window",
                "anonymous-methods": {
                    "method": [
                        {
                            "getter": "1",
                            "type": "Window",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        },
                        {
                            "getter": "1",
                            "type": "(Window or Element or HTMLCollection)",
                            "param": [
                                {
                                    "name": "name",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                },
                "events": {
                    "event": [
                        {
                            "name": "load",
                            "alternate-target": "Document",
                            "dispatch": "sync",
                            "follows": "DOMContentLoaded readystatechange",
                            "type": "Event"
                        },
                        {
                            "name": "SVGUnload",
                            "dispatch": "sync",
                            "type": "Event"
                        },
                        {
                            "name": "unload",
                            "dispatch": "sync",
                            "follows": "beforeunload",
                            "type": "Event"
                        },
                        {
                            "name": "beforeunload",
                            "cancelable": "1",
                            "dispatch": "sync",
                            "precedes": "unload",
                            "type": "BeforeUnloadEvent"
                        },
                        {
                            "name": "hashchange",
                            "dispatch": "async",
                            "type": "HashChangeEvent"
                        },
                        {
                            "name": "popstate",
                            "dispatch": "sync",
                            "type": "PopStateEvent"
                        },
                        {
                            "name": "SVGResize",
                            "dispatch": "sync",
                            "type": "Event"
                        },
                        {
                            "name": "resize",
                            "dispatch": "async",
                            "type": "UIEvent"
                        },
                        {
                            "name": "beforeprint",
                            "dispatch": "sync",
                            "precedes": "afterprint",
                            "type": "Event"
                        },
                        {
                            "name": "afterprint",
                            "dispatch": "sync",
                            "follows": "beforeprint",
                            "type": "Event"
                        },
                        {
                            "name": "focus",
                            "dispatch": "sync",
                            "type": "FocusEvent"
                        },
                        {
                            "name": "blur",
                            "dispatch": "sync",
                            "type": "FocusEvent"
                        },
                        {
                            "name": "storage",
                            "dispatch": "sync",
                            "type": "StorageEvent"
                        },
                        {
                            "name": "error",
                            "dispatch": "sync",
                            "type": "ErrorEvent"
                        },
                        {
                            "name": "message",
                            "dispatch": "async",
                            "type": "MessageEvent"
                        },
                        {
                            "name": "orientationchange",
                            "dispatch": "async",
                            "type": "Event"
                        },
                        {
                            "name": "deviceorientation",
                            "dispatch": "sync",
                            "type": "DeviceOrientationEvent"
                        },
                        {
                            "name": "devicemotion",
                            "dispatch": "sync",
                            "type": "DeviceMotionEvent"
                        },
                        {
                            "name": "devicelight",
                            "dispatch": "sync",
                            "type": "DeviceLightEvent"
                        },
                        {
                            "name": "compassneedscalibration",
                            "dispatch": "async",
                            "type": "Event"
                        },
                        {
                            "name": "pageshow",
                            "dispatch": "sync",
                            "type": "PageTransitionEvent"
                        },
                        {
                            "name": "pagehide",
                            "dispatch": "sync",
                            "type": "PageTransitionEvent"
                        },
                        {
                            "name": "gamepadconnected",
                            "dispatch": "sync",
                            "type": "GamepadEvent"
                        },
                        {
                            "name": "gamepaddisconnected",
                            "dispatch": "sync",
                            "type": "GamepadEvent"
                        },
                        {
                            "name": "navigatingfocus",
                            "dispatch": "sync",
                            "type": "FocusNavigationEvent"
                        }
                    ]
                },
                "implements": [
                    "WindowTimers",
                    "WindowSessionStorage",
                    "WindowLocalStorage",
                    "WindowConsole",
                    "GlobalEventHandlers",
                    "IDBEnvironment",
                    "WindowBase64",
                    "GlobalFetch"
                ],
                "methods": {
                    "method": [
                        {
                            "name": "alert",
                            "type": "void",
                            "param": [
                                {
                                    "name": "message",
                                    "default": "\"\"",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "blur",
                            "do-not-check-domain-security": "1",
                            "type": "void"
                        },
                        {
                            "name": "cancelAnimationFrame",
                            "type": "void",
                            "param": [
                                {
                                    "name": "handle",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "captureEvents",
                            "type": "void"
                        },
                        {
                            "name": "close",
                            "do-not-check-domain-security": "1",
                            "type": "void"
                        },
                        {
                            "name": "confirm",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "message",
                                    "default": "\"\"",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "departFocus",
                            "type": "void",
                            "param": [
                                {
                                    "name": "navigationReason",
                                    "type": "NavigationReason"
                                },
                                {
                                    "name": "origin",
                                    "type": "FocusNavigationOrigin"
                                }
                            ]
                        },
                        {
                            "name": "focus",
                            "do-not-check-domain-security": "1",
                            "type": "void"
                        },
                        {
                            "name": "getComputedStyle",
                            "type": "CSSStyleDeclaration",
                            "param": [
                                {
                                    "name": "elt",
                                    "type": "Element"
                                },
                                {
                                    "name": "pseudoElt",
                                    "nullable": "1",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "getMatchedCSSRules",
                            "type": "CSSRuleList",
                            "param": [
                                {
                                    "name": "elt",
                                    "type": "Element"
                                },
                                {
                                    "name": "pseudoElt",
                                    "nullable": "1",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "getSelection",
                            "type": "Selection"
                        },
                        {
                            "name": "matchMedia",
                            "type": "MediaQueryList",
                            "param": [
                                {
                                    "name": "mediaQuery",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "moveBy",
                            "type": "void",
                            "param": [
                                {
                                    "name": "x",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "long"
                                },
                                {
                                    "name": "y",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "moveTo",
                            "type": "void",
                            "param": [
                                {
                                    "name": "x",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "long"
                                },
                                {
                                    "name": "y",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "msWriteProfilerMark",
                            "type": "void",
                            "param": [
                                {
                                    "name": "profilerMarkName",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "open",
                            "type": "Window",
                            "param": [
                                {
                                    "name": "url",
                                    "default": "\"about:blank\"",
                                    "optional": "1",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "target",
                                    "default": "\"_blank\"",
                                    "optional": "1",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "features",
                                    "default": "\"\"",
                                    "optional": "1",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "replace",
                                    "default": "false",
                                    "optional": "1",
                                    "type": "boolean"
                                }
                            ]
                        },
                        {
                            "name": "postMessage",
                            "do-not-check-domain-security": "1",
                            "type": "void",
                            "param": [
                                {
                                    "name": "message",
                                    "type": "any"
                                },
                                {
                                    "name": "targetOrigin",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "transfer",
                                    "optional": "1",
                                    "type": "sequence<Transferable>"
                                }
                            ]
                        },
                        {
                            "name": "print",
                            "type": "void"
                        },
                        {
                            "name": "prompt",
                            "nullable": "1",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "message",
                                    "default": "\"\"",
                                    "optional": "1",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "default",
                                    "default": "\"\"",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "releaseEvents",
                            "type": "void"
                        },
                        {
                            "name": "requestAnimationFrame",
                            "type": "long",
                            "param": [
                                {
                                    "name": "callback",
                                    "type": "FrameRequestCallback"
                                }
                            ]
                        },
                        {
                            "name": "resizeBy",
                            "type": "void",
                            "param": [
                                {
                                    "name": "x",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "long"
                                },
                                {
                                    "name": "y",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "resizeTo",
                            "type": "void",
                            "param": [
                                {
                                    "name": "x",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "long"
                                },
                                {
                                    "name": "y",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "scroll",
                            "type": "void",
                            "param": [
                                {
                                    "name": "x",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "long"
                                },
                                {
                                    "name": "y",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "scrollBy",
                            "type": "void",
                            "param": [
                                {
                                    "name": "x",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "long"
                                },
                                {
                                    "name": "y",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "scrollTo",
                            "type": "void",
                            "param": [
                                {
                                    "name": "x",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "long"
                                },
                                {
                                    "name": "y",
                                    "default": "0",
                                    "optional": "1",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "stop",
                            "type": "void"
                        },
                        {
                            "name": "webkitCancelAnimationFrame",
                            "type": "void",
                            "param": [
                                {
                                    "name": "handle",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "webkitConvertPointFromNodeToPage",
                            "type": "WebKitPoint",
                            "param": [
                                {
                                    "name": "node",
                                    "type": "Node"
                                },
                                {
                                    "name": "pt",
                                    "type": "WebKitPoint"
                                }
                            ]
                        },
                        {
                            "name": "webkitConvertPointFromPageToNode",
                            "type": "WebKitPoint",
                            "param": [
                                {
                                    "name": "node",
                                    "type": "Node"
                                },
                                {
                                    "name": "pt",
                                    "type": "WebKitPoint"
                                }
                            ]
                        },
                        {
                            "name": "webkitRequestAnimationFrame",
                            "type": "long",
                            "param": [
                                {
                                    "name": "callback",
                                    "type": "FrameRequestCallback"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "applicationCache",
                            "read-only": "1",
                            "type": "ApplicationCache"
                        },
                        {
                            "name": "caches",
                            "read-only": "1",
                            "same-object": "1",
                            "secure-context": "1",
                            "type": "CacheStorage"
                        },
                        {
                            "name": "clientInformation",
                            "read-only": "1",
                            "type": "Navigator"
                        },
                        {
                            "name": "closed",
                            "do-not-check-domain-security": "1",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "crypto",
                            "read-only": "1",
                            "type": "Crypto"
                        },
                        {
                            "name": "defaultStatus",
                            "type": "DOMString"
                        },
                        {
                            "name": "devicePixelRatio",
                            "read-only": "1",
                            "replaceable": "1",
                            "type": "double"
                        },
                        {
                            "name": "document",
                            "property-descriptor-not-configurable": "1",
                            "read-only": "1",
                            "type": "Document",
                            "unforgeable": "1"
                        },
                        {
                            "name": "doNotTrack",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "event",
                            "type": "Event"
                        },
                        {
                            "name": "external",
                            "read-only": "1",
                            "replaceable": "1",
                            "type": "External"
                        },
                        {
                            "name": "frameElement",
                            "read-only": "1",
                            "type": "Element"
                        },
                        {
                            "name": "frames",
                            "do-not-check-domain-security": "1",
                            "read-only": "1",
                            "replaceable": "1",
                            "type": "Window"
                        },
                        {
                            "name": "history",
                            "read-only": "1",
                            "type": "History"
                        },
                        {
                            "name": "innerHeight",
                            "read-only": "1",
                            "replaceable": "1",
                            "type": "long"
                        },
                        {
                            "name": "innerWidth",
                            "read-only": "1",
                            "replaceable": "1",
                            "type": "long"
                        },
                        {
                            "name": "isSecureContext",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "length",
                            "do-not-check-domain-security": "1",
                            "read-only": "1",
                            "replaceable": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "location",
                            "do-not-check-domain-security": "1",
                            "property-descriptor-not-configurable": "1",
                            "put-forwards": "href",
                            "read-only": "1",
                            "type": "Location",
                            "unforgeable": "1"
                        },
                        {
                            "name": "locationbar",
                            "read-only": "1",
                            "replaceable": "1",
                            "type": "BarProp"
                        },
                        {
                            "name": "menubar",
                            "read-only": "1",
                            "replaceable": "1",
                            "type": "BarProp"
                        },
                        {
                            "name": "msContentScript",
                            "read-only": "1",
                            "type": "ExtensionScriptApis"
                        },
                        {
                            "name": "msCredentials",
                            "read-only": "1",
                            "type": "MSCredentials"
                        },
                        {
                            "name": "name",
                            "type": "DOMString"
                        },
                        {
                            "name": "navigator",
                            "read-only": "1",
                            "type": "Navigator"
                        },
                        {
                            "name": "offscreenBuffering",
                            "type": "(DOMString or boolean)"
                        },
                        {
                            "name": "onabort",
                            "event-handler": "abort",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onafterprint",
                            "event-handler": "afterprint",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onbeforeprint",
                            "event-handler": "beforeprint",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onbeforeunload",
                            "event-handler": "beforeunload",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onblur",
                            "event-handler": "blur",
                            "type": "EventHandler"
                        },
                        {
                            "name": "oncanplay",
                            "event-handler": "canplay",
                            "type": "EventHandler"
                        },
                        {
                            "name": "oncanplaythrough",
                            "event-handler": "canplaythrough",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onchange",
                            "event-handler": "change",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onclick",
                            "event-handler": "click",
                            "type": "EventHandler"
                        },
                        {
                            "name": "oncompassneedscalibration",
                            "event-handler": "compassneedscalibration",
                            "type": "EventHandler"
                        },
                        {
                            "name": "oncontextmenu",
                            "event-handler": "contextmenu",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondblclick",
                            "event-handler": "dblclick",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondevicelight",
                            "event-handler": "devicelight",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondevicemotion",
                            "event-handler": "devicemotion",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondeviceorientation",
                            "event-handler": "deviceorientation",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondrag",
                            "event-handler": "drag",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondragend",
                            "event-handler": "dragend",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondragenter",
                            "event-handler": "dragenter",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondragleave",
                            "event-handler": "dragleave",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondragover",
                            "event-handler": "dragover",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondragstart",
                            "event-handler": "dragstart",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondrop",
                            "event-handler": "drop",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ondurationchange",
                            "event-handler": "durationchange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onemptied",
                            "event-handler": "emptied",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onended",
                            "event-handler": "ended",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onerror",
                            "event-handler": "error",
                            "type": "ErrorEventHandler"
                        },
                        {
                            "name": "onfocus",
                            "event-handler": "focus",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onhashchange",
                            "event-handler": "hashchange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "oninput",
                            "event-handler": "input",
                            "type": "EventHandler"
                        },
                        {
                            "name": "oninvalid",
                            "event-handler": "invalid",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onkeydown",
                            "event-handler": "keydown",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onkeypress",
                            "event-handler": "keypress",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onkeyup",
                            "event-handler": "keyup",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onload",
                            "event-handler": "load",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onloadeddata",
                            "event-handler": "loadeddata",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onloadedmetadata",
                            "event-handler": "loadedmetadata",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onloadstart",
                            "event-handler": "loadstart",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmessage",
                            "event-handler": "message",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmousedown",
                            "event-handler": "mousedown",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmouseenter",
                            "event-handler": "mouseenter",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmouseleave",
                            "event-handler": "mouseleave",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmousemove",
                            "event-handler": "mousemove",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmouseout",
                            "event-handler": "mouseout",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmouseover",
                            "event-handler": "mouseover",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmouseup",
                            "event-handler": "mouseup",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmousewheel",
                            "event-handler": "mousewheel",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmsgesturechange",
                            "event-handler": "MSGestureChange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmsgesturedoubletap",
                            "event-handler": "MSGestureDoubleTap",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmsgestureend",
                            "event-handler": "MSGestureEnd",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmsgesturehold",
                            "event-handler": "MSGestureHold",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmsgesturestart",
                            "event-handler": "MSGestureStart",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmsgesturetap",
                            "event-handler": "MSGestureTap",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmsinertiastart",
                            "event-handler": "MSInertiaStart",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmspointercancel",
                            "event-handler": "MSPointerCancel",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmspointerdown",
                            "event-handler": "MSPointerDown",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmspointerenter",
                            "event-handler": "MSPointerEnter",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmspointerleave",
                            "event-handler": "MSPointerLeave",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmspointermove",
                            "event-handler": "MSPointerMove",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmspointerout",
                            "event-handler": "MSPointerOut",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmspointerover",
                            "event-handler": "MSPointerOver",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onmspointerup",
                            "event-handler": "MSPointerUp",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onoffline",
                            "event-handler": "offline",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ononline",
                            "event-handler": "online",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onorientationchange",
                            "event-handler": "orientationchange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onpagehide",
                            "event-handler": "pagehide",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onpageshow",
                            "event-handler": "pageshow",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onpause",
                            "event-handler": "pause",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onplay",
                            "event-handler": "play",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onplaying",
                            "event-handler": "playing",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onpopstate",
                            "event-handler": "popstate",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onprogress",
                            "event-handler": "progress",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onratechange",
                            "event-handler": "ratechange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onreadystatechange",
                            "event-handler": "readystatechange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onreset",
                            "event-handler": "reset",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onresize",
                            "event-handler": "resize",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onscroll",
                            "event-handler": "scroll",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onseeked",
                            "event-handler": "seeked",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onseeking",
                            "event-handler": "seeking",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onselect",
                            "event-handler": "select",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onstalled",
                            "event-handler": "stalled",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onstorage",
                            "event-handler": "storage",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onsubmit",
                            "event-handler": "submit",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onsuspend",
                            "event-handler": "suspend",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ontimeupdate",
                            "event-handler": "timeupdate",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ontouchcancel",
                            "event-handler": "touchcancel",
                            "type": "any"
                        },
                        {
                            "name": "ontouchend",
                            "event-handler": "touchend",
                            "type": "any"
                        },
                        {
                            "name": "ontouchmove",
                            "event-handler": "touchmove",
                            "type": "any"
                        },
                        {
                            "name": "ontouchstart",
                            "event-handler": "touchstart",
                            "type": "any"
                        },
                        {
                            "name": "onunload",
                            "event-handler": "unload",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onvolumechange",
                            "event-handler": "volumechange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onwaiting",
                            "event-handler": "waiting",
                            "type": "EventHandler"
                        },
                        {
                            "name": "opener",
                            "do-not-check-domain-security": "1",
                            "read-only": "1",
                            "replaceable": "1",
                            "type": "Window"
                        },
                        {
                            "name": "orientation",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "outerHeight",
                            "read-only": "1",
                            "replaceable": "1",
                            "type": "long"
                        },
                        {
                            "name": "outerWidth",
                            "read-only": "1",
                            "replaceable": "1",
                            "type": "long"
                        },
                        {
                            "name": "pageXOffset",
                            "read-only": "1",
                            "replaceable": "1",
                            "type": "long"
                        },
                        {
                            "name": "pageYOffset",
                            "read-only": "1",
                            "replaceable": "1",
                            "type": "long"
                        },
                        {
                            "name": "parent",
                            "do-not-check-domain-security": "1",
                            "read-only": "1",
                            "replaceable": "1",
                            "type": "Window"
                        },
                        {
                            "name": "performance",
                            "read-only": "1",
                            "replaceable": "1",
                            "type": "Performance"
                        },
                        {
                            "name": "personalbar",
                            "read-only": "1",
                            "replaceable": "1",
                            "type": "BarProp"
                        },
                        {
                            "name": "screen",
                            "read-only": "1",
                            "type": "Screen"
                        },
                        {
                            "name": "screenLeft",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "screenTop",
                            "read-only": "1",
                            "type": "long"
                        },
                        {
                            "name": "screenX",
                            "read-only": "1",
                            "replaceable": "1",
                            "type": "long"
                        },
                        {
                            "name": "screenY",
                            "read-only": "1",
                            "replaceable": "1",
                            "type": "long"
                        },
                        {
                            "name": "scrollbars",
                            "read-only": "1",
                            "replaceable": "1",
                            "type": "BarProp"
                        },
                        {
                            "name": "scrollX",
                            "read-only": "1",
                            "replaceable": "1",
                            "type": "long"
                        },
                        {
                            "name": "scrollY",
                            "read-only": "1",
                            "replaceable": "1",
                            "type": "long"
                        },
                        {
                            "name": "self",
                            "do-not-check-domain-security": "1",
                            "read-only": "1",
                            "replaceable": "1",
                            "type": "Window"
                        },
                        {
                            "name": "speechSynthesis",
                            "read-only": "1",
                            "type": "SpeechSynthesis"
                        },
                        {
                            "name": "status",
                            "type": "DOMString"
                        },
                        {
                            "name": "statusbar",
                            "read-only": "1",
                            "replaceable": "1",
                            "type": "BarProp"
                        },
                        {
                            "name": "styleMedia",
                            "read-only": "1",
                            "type": "StyleMedia"
                        },
                        {
                            "name": "toolbar",
                            "read-only": "1",
                            "replaceable": "1",
                            "type": "BarProp"
                        },
                        {
                            "name": "top",
                            "do-not-check-domain-security": "1",
                            "property-descriptor-not-configurable": "1",
                            "read-only": "1",
                            "type": "Window"
                        },
                        {
                            "name": "window",
                            "do-not-check-domain-security": "1",
                            "property-descriptor-not-configurable": "1",
                            "read-only": "1",
                            "type": "Window",
                            "unforgeable": "1"
                        }
                    ]
                }
            },
            {
                "name": "Worker",
                "extends": "EventTarget",
                "constructor": {
                    "param": [
                        {
                            "name": "stringUrl",
                            "type": "DOMString"
                        }
                    ]
                },
                "events": {
                    "event": [
                        {
                            "name": "error",
                            "dispatch": "async",
                            "skips-window": "1",
                            "type": "ErrorEvent"
                        },
                        {
                            "name": "message",
                            "dispatch": "async",
                            "skips-window": "1",
                            "type": "MessageEvent"
                        }
                    ]
                },
                "implements": [
                    "AbstractWorker"
                ],
                "methods": {
                    "method": [
                        {
                            "name": "postMessage",
                            "type": "void",
                            "param": [
                                {
                                    "name": "message",
                                    "type": "any"
                                },
                                {
                                    "name": "transfer",
                                    "optional": "1",
                                    "type": "sequence<Transferable>"
                                }
                            ]
                        },
                        {
                            "name": "terminate",
                            "type": "void"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "onmessage",
                            "event-handler": "message",
                            "type": "EventHandler"
                        }
                    ]
                }
            },
            {
                "name": "XMLDocument",
                "extends": "Document"
            },
            {
                "name": "XMLHttpRequest",
                "extends": "EventTarget",
                "constants": {
                    "constant": [
                        {
                            "name": "DONE",
                            "type": "unsigned short",
                            "value": [
                                "4"
                            ]
                        },
                        {
                            "name": "HEADERS_RECEIVED",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "LOADING",
                            "type": "unsigned short",
                            "value": [
                                "3"
                            ]
                        },
                        {
                            "name": "OPENED",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "UNSENT",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        }
                    ]
                },
                "constructor": {},
                "events": {
                    "event": [
                        {
                            "name": "readystatechange",
                            "dispatch": "sync-or-async",
                            "precedes": "load",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "load",
                            "dispatch": "sync-or-async",
                            "follows": "progress readystatechange",
                            "precedes": "loadend",
                            "skips-window": "1",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "timeout",
                            "dispatch": "sync-or-async",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "progress",
                            "dispatch": "sync-or-async",
                            "follows": "readystatechange",
                            "precedes": "load",
                            "skips-window": "1",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "abort",
                            "dispatch": "sync-or-async",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "error",
                            "dispatch": "sync-or-async",
                            "skips-window": "1",
                            "type": "Event"
                        },
                        {
                            "name": "loadstart",
                            "dispatch": "sync-or-async",
                            "precedes": "readystatechange",
                            "skips-window": "1",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "loadend",
                            "dispatch": "sync-or-async",
                            "follows": "load",
                            "skips-window": "1",
                            "type": "ProgressEvent"
                        }
                    ]
                },
                "implements": [
                    "XMLHttpRequestEventTarget"
                ],
                "methods": {
                    "method": [
                        {
                            "name": "abort",
                            "type": "void"
                        },
                        {
                            "name": "getAllResponseHeaders",
                            "type": "DOMString"
                        },
                        {
                            "name": "getResponseHeader",
                            "nullable": "1",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "header",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "msCachingEnabled",
                            "type": "boolean"
                        },
                        {
                            "name": "open",
                            "type": "void",
                            "param": [
                                {
                                    "name": "method",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "url",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "async",
                                    "default": "true",
                                    "optional": "1",
                                    "type": "boolean"
                                },
                                {
                                    "name": "user",
                                    "default": "null",
                                    "nullable": "1",
                                    "optional": "1",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "password",
                                    "default": "null",
                                    "nullable": "1",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "overrideMimeType",
                            "type": "void",
                            "param": [
                                {
                                    "name": "mime",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "send",
                            "type": "void",
                            "param": [
                                {
                                    "name": "data",
                                    "optional": "1",
                                    "type": "(Document or DOMString)"
                                }
                            ]
                        },
                        {
                            "name": "setRequestHeader",
                            "type": "void",
                            "param": [
                                {
                                    "name": "header",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "value",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "msCaching",
                            "type": "DOMString"
                        },
                        {
                            "name": "onreadystatechange",
                            "event-handler": "readystatechange",
                            "type": "EventHandler"
                        },
                        {
                            "name": "readyState",
                            "read-only": "1",
                            "type": "unsigned short"
                        },
                        {
                            "name": "response",
                            "read-only": "1",
                            "type": "any"
                        },
                        {
                            "name": "responseText",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "responseType",
                            "type": "XMLHttpRequestResponseType"
                        },
                        {
                            "name": "responseURL",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "responseXML",
                            "nullable": "1",
                            "read-only": "1",
                            "type": "Document"
                        },
                        {
                            "name": "status",
                            "read-only": "1",
                            "type": "unsigned short"
                        },
                        {
                            "name": "statusText",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "timeout",
                            "type": "unsigned long"
                        },
                        {
                            "name": "upload",
                            "read-only": "1",
                            "type": "XMLHttpRequestUpload"
                        },
                        {
                            "name": "withCredentials",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "XMLHttpRequestUpload",
                "extends": "EventTarget",
                "events": {
                    "event": [
                        {
                            "name": "readystatechange",
                            "dispatch": "sync-or-async",
                            "follows": "loadstart",
                            "precedes": "progress",
                            "skips-window": "1",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "progress",
                            "dispatch": "sync-or-async",
                            "follows": "readystatechange",
                            "precedes": "load",
                            "skips-window": "1",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "abort",
                            "dispatch": "sync-or-async",
                            "skips-window": "1",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "error",
                            "dispatch": "sync-or-async",
                            "skips-window": "1",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "load",
                            "dispatch": "sync-or-async",
                            "follows": "progress",
                            "precedes": "loadend",
                            "skips-window": "1",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "loadstart",
                            "dispatch": "sync-or-async",
                            "precedes": "readystatechange",
                            "skips-window": "1",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "loadend",
                            "dispatch": "sync-or-async",
                            "follows": "load",
                            "skips-window": "1",
                            "type": "ProgressEvent"
                        },
                        {
                            "name": "timeout",
                            "dispatch": "sync-or-async",
                            "skips-window": "1",
                            "type": "ProgressEvent"
                        }
                    ]
                },
                "implements": [
                    "XMLHttpRequestEventTarget"
                ]
            },
            {
                "name": "XMLSerializer",
                "extends": "Object",
                "constructor": {},
                "methods": {
                    "method": [
                        {
                            "name": "serializeToString",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "target",
                                    "type": "Node"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "XPathEvaluator",
                "extends": "Object",
                "constructor": {},
                "methods": {
                    "method": [
                        {
                            "name": "createExpression",
                            "type": "XPathExpression",
                            "param": [
                                {
                                    "name": "expression",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "resolver",
                                    "type": "XPathNSResolver"
                                }
                            ]
                        },
                        {
                            "name": "createNSResolver",
                            "type": "XPathNSResolver",
                            "param": [
                                {
                                    "name": "nodeResolver",
                                    "optional": "1",
                                    "type": "Node"
                                }
                            ]
                        },
                        {
                            "name": "evaluate",
                            "type": "XPathResult",
                            "param": [
                                {
                                    "name": "expression",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "contextNode",
                                    "type": "Node"
                                },
                                {
                                    "name": "resolver",
                                    "type": "XPathNSResolver"
                                },
                                {
                                    "name": "type",
                                    "type": "unsigned short"
                                },
                                {
                                    "name": "result",
                                    "type": "XPathResult"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "XPathExpression",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "evaluate",
                            "type": "XPathExpression",
                            "param": [
                                {
                                    "name": "contextNode",
                                    "type": "Node"
                                },
                                {
                                    "name": "type",
                                    "type": "unsigned short"
                                },
                                {
                                    "name": "result",
                                    "type": "XPathResult"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "XPathNSResolver",
                "extends": "Object",
                "methods": {
                    "method": [
                        {
                            "name": "lookupNamespaceURI",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "prefix",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "XPathResult",
                "extends": "Object",
                "constants": {
                    "constant": [
                        {
                            "name": "ANY_TYPE",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        },
                        {
                            "name": "ANY_UNORDERED_NODE_TYPE",
                            "type": "unsigned short",
                            "value": [
                                "8"
                            ]
                        },
                        {
                            "name": "BOOLEAN_TYPE",
                            "type": "unsigned short",
                            "value": [
                                "3"
                            ]
                        },
                        {
                            "name": "FIRST_ORDERED_NODE_TYPE",
                            "type": "unsigned short",
                            "value": [
                                "9"
                            ]
                        },
                        {
                            "name": "NUMBER_TYPE",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        },
                        {
                            "name": "ORDERED_NODE_ITERATOR_TYPE",
                            "type": "unsigned short",
                            "value": [
                                "5"
                            ]
                        },
                        {
                            "name": "ORDERED_NODE_SNAPSHOT_TYPE",
                            "type": "unsigned short",
                            "value": [
                                "7"
                            ]
                        },
                        {
                            "name": "STRING_TYPE",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "UNORDERED_NODE_ITERATOR_TYPE",
                            "type": "unsigned short",
                            "value": [
                                "4"
                            ]
                        },
                        {
                            "name": "UNORDERED_NODE_SNAPSHOT_TYPE",
                            "type": "unsigned short",
                            "value": [
                                "6"
                            ]
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "iterateNext",
                            "type": "Node"
                        },
                        {
                            "name": "snapshotItem",
                            "type": "Node",
                            "param": [
                                {
                                    "name": "index",
                                    "type": "unsigned long"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "booleanValue",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "invalidIteratorState",
                            "read-only": "1",
                            "type": "boolean"
                        },
                        {
                            "name": "numberValue",
                            "read-only": "1",
                            "type": "double"
                        },
                        {
                            "name": "resultType",
                            "read-only": "1",
                            "type": "unsigned short"
                        },
                        {
                            "name": "singleNodeValue",
                            "read-only": "1",
                            "type": "Node"
                        },
                        {
                            "name": "snapshotLength",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "stringValue",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "XSLTProcessor",
                "extends": "Object",
                "constructor": {},
                "methods": {
                    "method": [
                        {
                            "name": "clearParameters",
                            "type": "void"
                        },
                        {
                            "name": "getParameter",
                            "type": "any",
                            "param": [
                                {
                                    "name": "namespaceURI",
                                    "treat-null-as": "EmptyString",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "localName",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "importStylesheet",
                            "type": "void",
                            "param": [
                                {
                                    "name": "style",
                                    "type": "Node"
                                }
                            ]
                        },
                        {
                            "name": "removeParameter",
                            "type": "void",
                            "param": [
                                {
                                    "name": "namespaceURI",
                                    "treat-null-as": "EmptyString",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "localName",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "reset",
                            "type": "void"
                        },
                        {
                            "name": "setParameter",
                            "type": "void",
                            "param": [
                                {
                                    "name": "namespaceURI",
                                    "treat-null-as": "EmptyString",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "localName",
                                    "type": "DOMString"
                                },
                                {
                                    "name": "value",
                                    "type": "any"
                                }
                            ]
                        },
                        {
                            "name": "transformToDocument",
                            "type": "Document",
                            "param": [
                                {
                                    "name": "source",
                                    "type": "Node"
                                }
                            ]
                        },
                        {
                            "name": "transformToFragment",
                            "type": "DocumentFragment",
                            "param": [
                                {
                                    "name": "source",
                                    "type": "Node"
                                },
                                {
                                    "name": "document",
                                    "type": "Document"
                                }
                            ]
                        }
                    ]
                }
            }
        ]
    },
    "mixin-interfaces": {
        "interface": [
            {
                "name": "AbstractWorker",
                "extends": "Object",
                "no-interface-object": "1",
                "properties": {
                    "property": [
                        {
                            "name": "onerror",
                            "event-handler": "error",
                            "type": "EventHandler"
                        }
                    ]
                }
            },
            {
                "name": "Body",
                "extends": "Object",
                "no-interface-object": "1",
                "methods": {
                    "method": [
                        {
                            "name": "arrayBuffer",
                            "type": "Promise<ArrayBuffer>"
                        },
                        {
                            "name": "blob",
                            "type": "Promise<Blob>"
                        },
                        {
                            "name": "json",
                            "type": "Promise<any>"
                        },
                        {
                            "name": "text",
                            "type": "Promise<DOMString>"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "bodyUsed",
                            "read-only": "1",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "CanvasPathMethods",
                "extends": "Object",
                "no-interface-object": "1",
                "methods": {
                    "method": [
                        {
                            "name": "arc",
                            "type": "void",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                },
                                {
                                    "name": "radius",
                                    "type": "float"
                                },
                                {
                                    "name": "startAngle",
                                    "type": "float"
                                },
                                {
                                    "name": "endAngle",
                                    "type": "float"
                                },
                                {
                                    "name": "anticlockwise",
                                    "default": "false",
                                    "optional": "1",
                                    "type": "boolean"
                                }
                            ]
                        },
                        {
                            "name": "arcTo",
                            "type": "void",
                            "param": [
                                {
                                    "name": "x1",
                                    "type": "float"
                                },
                                {
                                    "name": "y1",
                                    "type": "float"
                                },
                                {
                                    "name": "x2",
                                    "type": "float"
                                },
                                {
                                    "name": "y2",
                                    "type": "float"
                                },
                                {
                                    "name": "radius",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "bezierCurveTo",
                            "type": "void",
                            "param": [
                                {
                                    "name": "cp1x",
                                    "type": "float"
                                },
                                {
                                    "name": "cp1y",
                                    "type": "float"
                                },
                                {
                                    "name": "cp2x",
                                    "type": "float"
                                },
                                {
                                    "name": "cp2y",
                                    "type": "float"
                                },
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "closePath",
                            "type": "void"
                        },
                        {
                            "name": "ellipse",
                            "type": "void",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                },
                                {
                                    "name": "radiusX",
                                    "type": "float"
                                },
                                {
                                    "name": "radiusY",
                                    "type": "float"
                                },
                                {
                                    "name": "rotation",
                                    "type": "float"
                                },
                                {
                                    "name": "startAngle",
                                    "type": "float"
                                },
                                {
                                    "name": "endAngle",
                                    "type": "float"
                                },
                                {
                                    "name": "anticlockwise",
                                    "default": "false",
                                    "optional": "1",
                                    "type": "boolean"
                                }
                            ]
                        },
                        {
                            "name": "lineTo",
                            "type": "void",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "moveTo",
                            "type": "void",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "quadraticCurveTo",
                            "type": "void",
                            "param": [
                                {
                                    "name": "cpx",
                                    "type": "float"
                                },
                                {
                                    "name": "cpy",
                                    "type": "float"
                                },
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                }
                            ]
                        },
                        {
                            "name": "rect",
                            "type": "void",
                            "param": [
                                {
                                    "name": "x",
                                    "type": "float"
                                },
                                {
                                    "name": "y",
                                    "type": "float"
                                },
                                {
                                    "name": "w",
                                    "type": "float"
                                },
                                {
                                    "name": "h",
                                    "type": "float"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "ChildNode",
                "extends": "Object",
                "no-interface-object": "1",
                "methods": {
                    "method": [
                        {
                            "name": "remove",
                            "type": "void"
                        }
                    ]
                }
            },
            {
                "name": "DocumentEvent",
                "extends": "Object",
                "no-interface-object": "1",
                "methods": {
                    "method": [
                        {
                            "name": "createEvent",
                            "type": "Event",
                            "param": [
                                {
                                    "name": "eventInterface",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "DOML2DeprecatedColorProperty",
                "extends": "Object",
                "no-interface-object": "1",
                "properties": {
                    "property": [
                        {
                            "name": "color",
                            "content-attribute": "color",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "simple_color",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "DOML2DeprecatedSizeProperty",
                "extends": "Object",
                "no-interface-object": "1",
                "properties": {
                    "property": [
                        {
                            "name": "size",
                            "content-attribute": "size",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "1_or_greater_integer",
                            "type": "long"
                        }
                    ]
                }
            },
            {
                "name": "ElementTraversal",
                "extends": "Object",
                "no-interface-object": "1",
                "properties": {
                    "property": [
                        {
                            "name": "childElementCount",
                            "read-only": "1",
                            "type": "unsigned long"
                        },
                        {
                            "name": "firstElementChild",
                            "read-only": "1",
                            "type": "Element"
                        },
                        {
                            "name": "lastElementChild",
                            "read-only": "1",
                            "type": "Element"
                        },
                        {
                            "name": "nextElementSibling",
                            "read-only": "1",
                            "type": "Element"
                        },
                        {
                            "name": "previousElementSibling",
                            "read-only": "1",
                            "type": "Element"
                        }
                    ]
                }
            },
            {
                "name": "GetSVGDocument",
                "extends": "Object",
                "no-interface-object": "1",
                "methods": {
                    "method": [
                        {
                            "name": "getSVGDocument",
                            "type": "Document"
                        }
                    ]
                }
            },
            {
                "name": "GlobalEventHandlers",
                "extends": "Object",
                "no-interface-object": "1",
                "properties": {
                    "property": [
                        {
                            "name": "onpointercancel",
                            "content-attribute": "onpointercancel",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "pointercancel",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onpointerdown",
                            "content-attribute": "onpointerdown",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "pointerdown",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onpointerenter",
                            "content-attribute": "onpointerenter",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "pointerenter",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onpointerleave",
                            "content-attribute": "onpointerleave",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "pointerleave",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onpointermove",
                            "content-attribute": "onpointermove",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "pointermove",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onpointerout",
                            "content-attribute": "onpointerout",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "pointerout",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onpointerover",
                            "content-attribute": "onpointerover",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "pointerover",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onpointerup",
                            "content-attribute": "onpointerup",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "pointerup",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onwheel",
                            "content-attribute": "onwheel",
                            "content-attribute-value-syntax": "javascript",
                            "event-handler": "wheel",
                            "type": "EventHandler"
                        }
                    ]
                }
            },
            {
                "name": "GlobalFetch",
                "extends": "Object",
                "no-interface-object": "1",
                "methods": {
                    "method": [
                        {
                            "name": "fetch",
                            "type": "Promise<Response>",
                            "param": [
                                {
                                    "name": "input",
                                    "type": "RequestInfo"
                                },
                                {
                                    "name": "init",
                                    "optional": "1",
                                    "type": "RequestInit"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "HTMLTableAlignment",
                "extends": "Object",
                "no-interface-object": "1",
                "properties": {
                    "property": [
                        {
                            "name": "ch",
                            "content-attribute": "char",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "chOff",
                            "content-attribute": "charoff",
                            "content-attribute-reflects": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "vAlign",
                            "content-attribute": "valign",
                            "content-attribute-enum-values": "middle baseline bottom top",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "enum",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "IDBEnvironment",
                "extends": "Object",
                "no-interface-object": "1",
                "properties": {
                    "property": [
                        {
                            "name": "indexedDB",
                            "read-only": "1",
                            "type": "IDBFactory"
                        }
                    ]
                }
            },
            {
                "name": "LinkStyle",
                "extends": "Object",
                "no-interface-object": "1",
                "properties": {
                    "property": [
                        {
                            "name": "sheet",
                            "read-only": "1",
                            "type": "StyleSheet"
                        }
                    ]
                }
            },
            {
                "name": "MSBaseReader",
                "extends": "Object",
                "no-interface-object": "1",
                "constants": {
                    "constant": [
                        {
                            "name": "DONE",
                            "type": "unsigned short",
                            "value": [
                                "2"
                            ]
                        },
                        {
                            "name": "EMPTY",
                            "type": "unsigned short",
                            "value": [
                                "0"
                            ]
                        },
                        {
                            "name": "LOADING",
                            "type": "unsigned short",
                            "value": [
                                "1"
                            ]
                        }
                    ]
                },
                "methods": {
                    "method": [
                        {
                            "name": "abort",
                            "type": "void"
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "onabort",
                            "event-handler": "abort",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onerror",
                            "event-handler": "error",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onload",
                            "event-handler": "load",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onloadend",
                            "event-handler": "loadend",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onloadstart",
                            "event-handler": "loadstart",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onprogress",
                            "event-handler": "progress",
                            "type": "EventHandler"
                        },
                        {
                            "name": "readyState",
                            "read-only": "1",
                            "type": "unsigned short"
                        },
                        {
                            "name": "result",
                            "read-only": "1",
                            "type": "any"
                        }
                    ]
                }
            },
            {
                "name": "MSFileSaver",
                "extends": "Object",
                "no-interface-object": "1",
                "methods": {
                    "method": [
                        {
                            "name": "msSaveBlob",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "blob",
                                    "type": "any"
                                },
                                {
                                    "name": "defaultName",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "msSaveOrOpenBlob",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "blob",
                                    "type": "any"
                                },
                                {
                                    "name": "defaultName",
                                    "optional": "1",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "MSNavigatorDoNotTrack",
                "extends": "Object",
                "no-interface-object": "1",
                "methods": {
                    "method": [
                        {
                            "name": "confirmSiteSpecificTrackingException",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "args",
                                    "type": "ConfirmSiteSpecificExceptionsInformation"
                                }
                            ]
                        },
                        {
                            "name": "confirmWebWideTrackingException",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "args",
                                    "type": "ExceptionInformation"
                                }
                            ]
                        },
                        {
                            "name": "removeSiteSpecificTrackingException",
                            "type": "void",
                            "param": [
                                {
                                    "name": "args",
                                    "type": "ExceptionInformation"
                                }
                            ]
                        },
                        {
                            "name": "removeWebWideTrackingException",
                            "type": "void",
                            "param": [
                                {
                                    "name": "args",
                                    "type": "ExceptionInformation"
                                }
                            ]
                        },
                        {
                            "name": "storeSiteSpecificTrackingException",
                            "type": "void",
                            "param": [
                                {
                                    "name": "args",
                                    "type": "StoreSiteSpecificExceptionsInformation"
                                }
                            ]
                        },
                        {
                            "name": "storeWebWideTrackingException",
                            "type": "void",
                            "param": [
                                {
                                    "name": "args",
                                    "type": "StoreExceptionsInformation"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "NavigatorBeacon",
                "extends": "Object",
                "no-interface-object": "1",
                "methods": {
                    "method": [
                        {
                            "name": "sendBeacon",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "url",
                                    "type": "USVString"
                                },
                                {
                                    "name": "data",
                                    "default": "null",
                                    "nullable": "1",
                                    "optional": "1",
                                    "type": "BodyInit"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "NavigatorConcurrentHardware",
                "exposed": "Window Worker",
                "extends": "Object",
                "no-interface-object": "1",
                "properties": {
                    "property": [
                        {
                            "name": "hardwareConcurrency",
                            "read-only": "1",
                            "type": "unsigned long long"
                        }
                    ]
                }
            },
            {
                "name": "NavigatorContentUtils",
                "extends": "Object",
                "no-interface-object": "1"
            },
            {
                "name": "NavigatorGeolocation",
                "extends": "Object",
                "no-interface-object": "1",
                "properties": {
                    "property": [
                        {
                            "name": "geolocation",
                            "read-only": "1",
                            "type": "Geolocation"
                        }
                    ]
                }
            },
            {
                "name": "NavigatorID",
                "extends": "Object",
                "no-interface-object": "1",
                "properties": {
                    "property": [
                        {
                            "name": "appCodeName",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "appName",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "appVersion",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "platform",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "product",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "productSub",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "userAgent",
                            "property-descriptor-not-configurable": "1",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "vendor",
                            "read-only": "1",
                            "type": "DOMString"
                        },
                        {
                            "name": "vendorSub",
                            "read-only": "1",
                            "type": "DOMString"
                        }
                    ]
                }
            },
            {
                "name": "NavigatorOnLine",
                "extends": "Object",
                "no-interface-object": "1",
                "properties": {
                    "property": [
                        {
                            "name": "onLine",
                            "read-only": "1",
                            "type": "boolean"
                        }
                    ]
                }
            },
            {
                "name": "NavigatorStorageUtils",
                "extends": "Object",
                "no-interface-object": "1"
            },
            {
                "name": "NavigatorUserMedia",
                "extends": "Object",
                "no-interface-object": "1",
                "methods": {
                    "method": [
                        {
                            "name": "getUserMedia",
                            "type": "void",
                            "param": [
                                {
                                    "name": "constraints",
                                    "type": "MediaStreamConstraints"
                                },
                                {
                                    "name": "successCallback",
                                    "type": "NavigatorUserMediaSuccessCallback"
                                },
                                {
                                    "name": "errorCallback",
                                    "type": "NavigatorUserMediaErrorCallback"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "mediaDevices",
                            "read-only": "1",
                            "type": "MediaDevices"
                        }
                    ]
                }
            },
            {
                "name": "NodeSelector",
                "extends": "Object",
                "no-interface-object": "1",
                "methods": {
                    "method": [
                        {
                            "name": "querySelector",
                            "type": "Element",
                            "param": [
                                {
                                    "name": "selectors",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "querySelectorAll",
                            "type": "NodeList",
                            "param": [
                                {
                                    "name": "selectors",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "RandomSource",
                "extends": "Object",
                "no-interface-object": "1",
                "methods": {
                    "method": [
                        {
                            "name": "getRandomValues",
                            "type": "ArrayBufferView",
                            "param": [
                                {
                                    "name": "array",
                                    "type": "ArrayBufferView"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "SVGAnimatedPoints",
                "extends": "Object",
                "no-interface-object": "1",
                "properties": {
                    "property": [
                        {
                            "name": "animatedPoints",
                            "read-only": "1",
                            "type": "SVGPointList"
                        },
                        {
                            "name": "points",
                            "content-attribute": "points",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_coordinate_pair_list",
                            "read-only": "1",
                            "type": "SVGPointList"
                        }
                    ]
                }
            },
            {
                "name": "SVGFilterPrimitiveStandardAttributes",
                "extends": "Object",
                "no-interface-object": "1",
                "properties": {
                    "property": [
                        {
                            "name": "height",
                            "content-attribute": "height",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "result",
                            "content-attribute": "result",
                            "content-attribute-reflects": "1",
                            "read-only": "1",
                            "type": "SVGAnimatedString"
                        },
                        {
                            "name": "width",
                            "content-attribute": "width",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "x",
                            "content-attribute": "x",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        },
                        {
                            "name": "y",
                            "content-attribute": "y",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_number_with_optional_unit",
                            "read-only": "1",
                            "type": "SVGAnimatedLength"
                        }
                    ]
                }
            },
            {
                "name": "SVGFitToViewBox",
                "extends": "Object",
                "no-interface-object": "1",
                "properties": {
                    "property": [
                        {
                            "name": "preserveAspectRatio",
                            "content-attribute": "preserveAspectRatio",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_aspect_ratio",
                            "read-only": "1",
                            "type": "SVGAnimatedPreserveAspectRatio"
                        },
                        {
                            "name": "viewBox",
                            "content-attribute": "viewBox",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "svg_viewbox",
                            "read-only": "1",
                            "type": "SVGAnimatedRect"
                        }
                    ]
                }
            },
            {
                "name": "SVGTests",
                "extends": "Object",
                "no-interface-object": "1",
                "methods": {
                    "method": [
                        {
                            "name": "hasExtension",
                            "type": "boolean",
                            "param": [
                                {
                                    "name": "extension",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "property": [
                        {
                            "name": "requiredExtensions",
                            "content-attribute": "requiredExtensions",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "space_separated_urls",
                            "read-only": "1",
                            "type": "SVGStringList"
                        },
                        {
                            "name": "requiredFeatures",
                            "content-attribute": "requiredFeatures",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "space_separated_tokens",
                            "read-only": "1",
                            "type": "SVGStringList"
                        },
                        {
                            "name": "systemLanguage",
                            "content-attribute": "systemLanguage",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "comma_separated_bcp47_langs",
                            "read-only": "1",
                            "type": "SVGStringList"
                        }
                    ]
                }
            },
            {
                "name": "SVGURIReference",
                "extends": "Object",
                "no-interface-object": "1",
                "properties": {
                    "property": [
                        {
                            "name": "href",
                            "content-attribute": "href",
                            "content-attribute-aliases": "xlink:href",
                            "content-attribute-reflects": "1",
                            "content-attribute-value-syntax": "url",
                            "read-only": "1",
                            "type": "SVGAnimatedString"
                        }
                    ]
                }
            },
            {
                "name": "WindowBase64",
                "extends": "Object",
                "no-interface-object": "1",
                "methods": {
                    "method": [
                        {
                            "name": "atob",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "encodedString",
                                    "type": "DOMString"
                                }
                            ]
                        },
                        {
                            "name": "btoa",
                            "type": "DOMString",
                            "param": [
                                {
                                    "name": "rawString",
                                    "type": "DOMString"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "WindowConsole",
                "extends": "Object",
                "no-interface-object": "1",
                "properties": {
                    "property": [
                        {
                            "name": "console",
                            "read-only": "1",
                            "replaceable": "1",
                            "type": "Console"
                        }
                    ]
                }
            },
            {
                "name": "WindowLocalStorage",
                "extends": "Object",
                "no-interface-object": "1",
                "properties": {
                    "property": [
                        {
                            "name": "localStorage",
                            "read-only": "1",
                            "type": "Storage"
                        }
                    ]
                }
            },
            {
                "name": "WindowSessionStorage",
                "extends": "Object",
                "no-interface-object": "1",
                "properties": {
                    "property": [
                        {
                            "name": "sessionStorage",
                            "read-only": "1",
                            "type": "Storage"
                        }
                    ]
                }
            },
            {
                "name": "WindowTimers",
                "extends": "Object",
                "no-interface-object": "1",
                "implements": [
                    "WindowTimersExtension"
                ],
                "methods": {
                    "method": [
                        {
                            "name": "clearInterval",
                            "type": "void",
                            "param": [
                                {
                                    "name": "handle",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "clearTimeout",
                            "type": "void",
                            "param": [
                                {
                                    "name": "handle",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "setInterval",
                            "type": "long",
                            "param": [
                                {
                                    "name": "handler",
                                    "type": "any"
                                },
                                {
                                    "name": "timeout",
                                    "optional": "1",
                                    "type": "any"
                                },
                                {
                                    "name": "args",
                                    "type": "any",
                                    "variadic": "1"
                                }
                            ]
                        },
                        {
                            "name": "setTimeout",
                            "type": "long",
                            "param": [
                                {
                                    "name": "handler",
                                    "type": "any"
                                },
                                {
                                    "name": "timeout",
                                    "optional": "1",
                                    "type": "any"
                                },
                                {
                                    "name": "args",
                                    "type": "any",
                                    "variadic": "1"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "WindowTimersExtension",
                "extends": "Object",
                "no-interface-object": "1",
                "methods": {
                    "method": [
                        {
                            "name": "clearImmediate",
                            "type": "void",
                            "param": [
                                {
                                    "name": "handle",
                                    "type": "long"
                                }
                            ]
                        },
                        {
                            "name": "setImmediate",
                            "type": "long",
                            "param": [
                                {
                                    "name": "expression",
                                    "type": "any"
                                },
                                {
                                    "name": "args",
                                    "type": "any",
                                    "variadic": "1"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "XMLHttpRequestEventTarget",
                "extends": "Object",
                "no-interface-object": "1",
                "properties": {
                    "property": [
                        {
                            "name": "onabort",
                            "event-handler": "abort",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onerror",
                            "event-handler": "error",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onload",
                            "event-handler": "load",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onloadend",
                            "event-handler": "loadend",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onloadstart",
                            "event-handler": "loadstart",
                            "type": "EventHandler"
                        },
                        {
                            "name": "onprogress",
                            "event-handler": "progress",
                            "type": "EventHandler"
                        },
                        {
                            "name": "ontimeout",
                            "event-handler": "timeout",
                            "type": "EventHandler"
                        }
                    ]
                }
            }
        ]
    },
    "typedefs": {
        "typedef": [
            {
                "new-type": "AAGUID",
                "type": "DOMString"
            },
            {
                "new-type": "AlgorithmIdentifier",
                "type": "(DOMString or Algorithm)"
            },
            {
                "new-type": "BodyInit",
                "type": "(Blob or BufferSource or FormData or DOMString)"
            },
            {
                "new-type": "ByteString",
                "type": "DOMString"
            },
            {
                "new-type": "ConstrainBoolean",
                "type": "(boolean or ConstrainBooleanParameters)"
            },
            {
                "new-type": "ConstrainDOMString",
                "type": "(DOMString or sequence<DOMString> or ConstrainDOMStringParameters)"
            },
            {
                "new-type": "ConstrainDouble",
                "type": "(double or ConstrainDoubleRange)"
            },
            {
                "new-type": "ConstrainLong",
                "type": "(long or ConstrainLongRange)"
            },
            {
                "new-type": "CryptoOperationData",
                "type": "ArrayBufferView"
            },
            {
                "new-type": "GLbitfield",
                "type": "unsigned long"
            },
            {
                "new-type": "GLboolean",
                "type": "boolean"
            },
            {
                "new-type": "GLbyte",
                "type": "byte"
            },
            {
                "new-type": "GLclampf",
                "type": "float"
            },
            {
                "new-type": "GLenum",
                "type": "unsigned long"
            },
            {
                "new-type": "GLfloat",
                "type": "float"
            },
            {
                "new-type": "GLint",
                "type": "long"
            },
            {
                "new-type": "GLintptr",
                "type": "long long"
            },
            {
                "new-type": "GLshort",
                "type": "short"
            },
            {
                "new-type": "GLsizei",
                "type": "long"
            },
            {
                "new-type": "GLsizeiptr",
                "type": "long long"
            },
            {
                "new-type": "GLubyte",
                "type": "octet"
            },
            {
                "new-type": "GLuint",
                "type": "unsigned long"
            },
            {
                "new-type": "GLushort",
                "type": "unsigned short"
            },
            {
                "new-type": "HeadersInit",
                "type": "(Headers or sequence<sequence<DOMString>>)"
            },
            {
                "new-type": "IDBKeyPath",
                "type": "DOMString"
            },
            {
                "new-type": "JSON",
                "type": "any"
            },
            {
                "new-type": "KeyFormat",
                "type": "DOMString"
            },
            {
                "new-type": "KeyType",
                "type": "DOMString"
            },
            {
                "new-type": "KeyUsage",
                "type": "DOMString"
            },
            {
                "new-type": "MSInboundPayload",
                "type": "(MSVideoRecvPayload or MSAudioRecvPayload)"
            },
            {
                "new-type": "MSLocalClientEvent",
                "type": "(MSLocalClientEventBase or MSAudioLocalClientEvent)"
            },
            {
                "new-type": "MSOutboundPayload",
                "type": "(MSVideoSendPayload or MSAudioSendPayload)"
            },
            {
                "new-type": "RTCIceGatherCandidate",
                "type": "(RTCIceCandidateDictionary or RTCIceCandidateComplete)"
            },
            {
                "new-type": "RTCTransport",
                "type": "(RTCDtlsTransport or RTCSrtpSdesTransport)"
            },
            {
                "new-type": "RequestInfo",
                "type": "(Request or DOMString)"
            },
            {
                "new-type": "USVString",
                "type": "DOMString"
            },
            {
                "new-type": "payloadtype",
                "type": "octet"
            }
        ]
    }
}