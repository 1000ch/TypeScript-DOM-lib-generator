{
    "datatransfer": "Creates a new DataTransfer object with an empty drag data\nstore.",
    "datatransfer-items": "Returns a DataTransferItemList object, with the drag data.",
    "datatransfer-setdragimage": "Uses the given element to update the drag feedback, replacing any previously specified\nfeedback.",
    "datatransfer-types": "Returns a frozen array listing the formats that were set in the dragstart event. In addition, if any files are being\ndragged, then one of the types will be the string \"Files\".",
    "datatransfer-getdata": "Returns the specified data. If there is no such data, returns the empty string.",
    "datatransfer-setdata": "Adds the specified data.",
    "datatransfer-cleardata": "Removes the data of the specified formats. Removes all data if the argument is omitted.",
    "datatransfer-files": "Returns a FileList of the files being dragged, if any.",
    "datatransferitemlist-length": "Returns the number of items in the drag data store.",
    "datatransferitemlist-remove": "Removes the indexth entry in the drag data store.",
    "datatransferitemlist-clear": "Removes all the entries in the drag data store.",
    "datatransferitemlist-add": "Adds a new entry for the given data to the drag data store. If the data is plain\ntext  then a type string has to be provided\nalso.",
    "datatransferitem-kind": "Returns the drag data item kind, one of: \"string\",\n\"file\".",
    "datatransferitem-type": "Returns the drag data item type string.",
    "datatransferitem-getasstring": "Invokes the callback with the string data as the argument, if the drag data item\nkind is Plain Unicode string.",
    "datatransferitem-getasfile": "Returns a File object, if the drag data item kind is File.",
    "dragevent-datatransfer": "Returns the DataTransfer object for the event.",
    "draggable": "Returns true if the element is draggable; otherwise, returns false.\nCan be set, to override the default and set the draggable\ncontent attribute."
}
