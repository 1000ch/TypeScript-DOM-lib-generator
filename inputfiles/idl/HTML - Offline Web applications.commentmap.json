{
    "applicationcache": "Returns the ApplicationCache object that applies to the active\ndocument of that Window.",
    "appcache-status": "Returns the current status of the application cache, as given by the constants defined\nbelow.",
    "appcache-update": "Invokes the application cache download process.\nThrows an \"InvalidStateError\" DOMException if there is\nno application cache to update.\nCalling this method is not usually necessary, as user agents will generally take care of\nupdating application caches automatically.\nThe method can be useful in situations such as long-lived applications. For example, a Web\nmail application might stay open in a browser tab for weeks at a time. Such an application could\nwant to test for updates each day.",
    "appcache-abort": "Cancels the application cache download process.\nThis method is intended to be used by Web application showing their own caching progress UI,\nin case the user wants to stop the update (e.g. because bandwidth is limited).",
    "appcache-swapcache": "Switches to the most recent application cache, if there is a newer one. If there isn't,\nthrows an \"InvalidStateError\" DOMException.\nThis does not cause previously-loaded resources to be reloaded; for example, images do not\nsuddenly get reloaded and style sheets and scripts do not get reparsed or reevaluated. The only\nchange is that subsequent requests for cached resources will obtain the newer copies.\nThe updateready event will fire before this\nmethod can be called. Once it fires, the Web application can, at its leisure, call this method\nto switch the underlying cache to the one with the more recent updates. To make proper use of\nthis, applications have to be able to bring the new features into play; for example, reloading\nscripts to enable new features.\nAn easier alternative to swapCache() is just to\nreload the entire page at a time suitable for the user, using location.reload().",
    "navigator": "Returns false if the user agent is definitely offline (disconnected from the network).\nReturns true if the user agent might be online.\nThe events online and offline are fired when the value of this attribute changes."
}
